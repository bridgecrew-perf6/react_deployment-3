{"version":3,"sources":["views/pages/authentication/AuthWrapper1.js","views/pages/authentication/AuthCardWrapper.js","hooks/useScriptRef.js","ui-component/cards/AuthFooter.js","assets/images/icons/social-google.svg","views/pages/authentication/auth-forms/AuthLogin.js","views/APICalls.js","views/pages/authentication/authentication3/CustomerPayment.js"],"names":["AuthWrapper1","styled","theme","backgroundColor","palette","mode","background","default","primary","light","minHeight","AuthCardWrapper","children","other","sx","maxWidth","xs","lg","margin","md","flexGrow","flexBasis","content","p","sm","xl","useScriptRef","scripted","useRef","useEffect","current","AuthFooter","direction","justifyContent","variant","component","Link","href","target","underline","FirebaseLogin","loginProp","others","useTheme","scriptedRef","useMediaQuery","breakpoints","down","useSelector","state","customization","useState","checked","setChecked","useAuth","firebaseEmailPasswordSignIn","firebaseGoogleSignIn","showPassword","setShowPassword","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","container","spacing","initialValues","email","password","submit","validationSchema","Yup","shape","max","required","onSubmit","values","a","setErrors","setStatus","setSubmitting","then","err","success","message","console","error","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","fullWidth","Boolean","typography","customInput","htmlFor","id","type","value","name","onBlur","onChange","label","inputProps","endAdornment","position","onClick","onMouseDown","edge","size","alignItems","control","color","mt","disableElevation","disabled","createOrder","order","token","fetch","method","headers","Accept","body","response","json","catch","log","processPayment","paymentData","JSON","stringify","updateOrderStatus","orderId","Login","isLoggedIn","change","setChange","setToken","setOrderId","setWorkerId","currentWorker","setCurrentWorker","amount","setAmount","porcent","setPorcent","price","setPrice","idFirebase","setIdFirebase","loading","clientToken","instance","address","data","setData","axios","get","worker","variable","vars","window","location","search","substring","split","i","length","pair","getQueryVariable","alert","onClickPay","formData","FormData","append","Number","datacreate","nonce","setTimeout","_id","requestPaymentMethod","paymentMethodNonce","status","is_paid","Grid","item","m","mb","to","Logo","options","authorization","onInstance","Button","style","TextField","e","toFixed","marginTop","Typography","Divider"],"mappings":"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","file":"static/js/10.2bc9f95f.chunk.js","sourcesContent":["// material-ui\r\nimport { styled } from '@mui/material/styles';\r\n\r\n// ==============================|| AUTHENTICATION 1 WRAPPER ||============================== //\r\n\r\nconst AuthWrapper1 = styled('div')(({ theme }) => ({\r\n    backgroundColor: theme.palette.mode === 'dark' ? theme.palette.background.default : theme.palette.primary.light,\r\n    minHeight: '100vh'\r\n}));\r\n\r\nexport default AuthWrapper1;\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { Box } from '@mui/material';\r\n\r\n// project import\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n\r\n// ==============================|| AUTHENTICATION CARD WRAPPER ||============================== //\r\n\r\nconst AuthCardWrapper = ({ children, ...other }) => (\r\n    <MainCard\r\n        sx={{\r\n            maxWidth: { xs: 400, lg: 475 },\r\n            margin: { xs: 2.5, md: 3 },\r\n            '& > *': {\r\n                flexGrow: 1,\r\n                flexBasis: '50%'\r\n            }\r\n        }}\r\n        content={false}\r\n        {...other}\r\n    >\r\n        <Box sx={{ p: { xs: 2, sm: 3, xl: 5 } }}>{children}</Box>\r\n    </MainCard>\r\n);\r\n\r\nAuthCardWrapper.propTypes = {\r\n    children: PropTypes.node\r\n};\r\n\r\nexport default AuthCardWrapper;\r\n","import { useEffect, useRef } from 'react';\r\n\r\n// ==============================|| ELEMENT REFERENCE HOOKS  ||============================== //\r\n\r\nconst useScriptRef = () => {\r\n    const scripted = useRef(true);\r\n\r\n    useEffect(\r\n        () => () => {\r\n            scripted.current = false;\r\n        },\r\n        []\r\n    );\r\n\r\n    return scripted;\r\n};\r\n\r\nexport default useScriptRef;\r\n","// material-ui\r\nimport { Link, Typography, Stack } from '@mui/material';\r\n\r\n// ==============================|| FOOTER - AUTHENTICATION 2 & 3 ||============================== //\r\n\r\nconst AuthFooter = () => (\r\n    <Stack direction=\"row\" justifyContent=\"space-between\">\r\n        {/* <Typography variant=\"subtitle2\" component={Link} href=\"https://berrydashboard.io\" target=\"_blank\" underline=\"hover\">\r\n            berrydashboard.io\r\n        </Typography> */}\r\n        <Typography variant=\"subtitle2\" component={Link} href=\"#\" target=\"_blank\" underline=\"hover\">\r\n            &copy; TipTipTop\r\n        </Typography>\r\n    </Stack>\r\n);\r\n\r\nexport default AuthFooter;\r\n","export default __webpack_public_path__ + \"static/media/social-google.a57081bd.svg\";","import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport {\r\n    Box,\r\n    Button,\r\n    Checkbox,\r\n    Divider,\r\n    FormControl,\r\n    FormControlLabel,\r\n    FormHelperText,\r\n    Grid,\r\n    IconButton,\r\n    InputAdornment,\r\n    InputLabel,\r\n    OutlinedInput,\r\n    Stack,\r\n    Typography,\r\n    useMediaQuery\r\n} from '@mui/material';\r\n\r\n// third party\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\n\r\n// project imports\r\nimport useAuth from 'hooks/useAuth';\r\nimport useScriptRef from 'hooks/useScriptRef';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\n\r\n// assets\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\n\r\nimport Google from 'assets/images/icons/social-google.svg';\r\n\r\n// ============================|| FIREBASE - LOGIN ||============================ //\r\n\r\nconst FirebaseLogin = ({ loginProp, ...others }) => {\r\n    const theme = useTheme();\r\n    const scriptedRef = useScriptRef();\r\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\r\n    const customization = useSelector((state) => state.customization);\r\n    const [checked, setChecked] = useState(true);\r\n\r\n    const { firebaseEmailPasswordSignIn, firebaseGoogleSignIn } = useAuth();\r\n    const googleHandler = async () => {\r\n        try {\r\n            await firebaseGoogleSignIn();\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const handleClickShowPassword = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Grid container direction=\"column\" justifyContent=\"center\" spacing={2}>\r\n                {/* <Grid item xs={12}>\r\n                    <AnimateButton>\r\n                        <Button\r\n                            disableElevation\r\n                            fullWidth\r\n                            onClick={googleHandler}\r\n                            size=\"large\"\r\n                            variant=\"outlined\"\r\n                            sx={{\r\n                                color: 'grey.700',\r\n                                backgroundColor: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.grey[50],\r\n                                borderColor: theme.palette.mode === 'dark' ? theme.palette.dark.light + 20 : theme.palette.grey[100]\r\n                            }}\r\n                        >\r\n                            <Box sx={{ mr: { xs: 1, sm: 2, width: 20 } }}>\r\n                                <img src={Google} alt=\"google\" width={16} height={16} style={{ marginRight: matchDownSM ? 8 : 16 }} />\r\n                            </Box>\r\n                            Sign in with Google\r\n                        </Button>\r\n                    </AnimateButton>\r\n                </Grid> */}\r\n                {/* <Grid item xs={12}>\r\n                    <Box\r\n                        sx={{\r\n                            alignItems: 'center',\r\n                            display: 'flex'\r\n                        }}\r\n                    >\r\n                        <Divider sx={{ flexGrow: 1 }} orientation=\"horizontal\" />\r\n\r\n                        <Button\r\n                            variant=\"outlined\"\r\n                            sx={{\r\n                                cursor: 'unset',\r\n                                m: 2,\r\n                                py: 0.5,\r\n                                px: 7,\r\n                                borderColor:\r\n                                    theme.palette.mode === 'dark'\r\n                                        ? `${theme.palette.dark.light + 20} !important`\r\n                                        : `${theme.palette.grey[100]} !important`,\r\n                                color: `${theme.palette.grey[900]}!important`,\r\n                                fontWeight: 500,\r\n                                borderRadius: `${customization.borderRadius}px`\r\n                            }}\r\n                            disableRipple\r\n                            disabled\r\n                        >\r\n                            OR\r\n                        </Button>\r\n\r\n                        <Divider sx={{ flexGrow: 1 }} orientation=\"horizontal\" />\r\n                    </Box>\r\n                </Grid> */}\r\n                {/* <Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\r\n                    <Box sx={{ mb: 2 }}>\r\n                        <Typography variant=\"subtitle1\">Sign in with Email address</Typography>\r\n                    </Box>\r\n                </Grid> */}\r\n            </Grid>\r\n\r\n            <Formik\r\n                initialValues={{\r\n                    email: '',\r\n                    password: '',\r\n                    submit: null\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                    email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\r\n                    password: Yup.string().max(255).required('Password is required')\r\n                })}\r\n                onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\r\n                    try {\r\n                        await firebaseEmailPasswordSignIn(values.email, values.password).then(\r\n                            () => {\r\n                                // WARNING: do not set any formik state here as formik might be already destroyed here. You may get following error by doing so.\r\n                                // Warning: Can't perform a React state update on an unmounted component. This is a no-op, but it indicates a memory leak in your application.\r\n                                // To fix, cancel all subscriptions and asynchronous tasks in a useEffect cleanup function.\r\n                                // github issue: https://github.com/formium/formik/issues/2430\r\n                            },\r\n                            (err) => {\r\n                                if (scriptedRef.current) {\r\n                                    setStatus({ success: false });\r\n                                    setErrors({ submit: err.message });\r\n                                    setSubmitting(false);\r\n                                }\r\n                            }\r\n                        );\r\n                    } catch (err) {\r\n                        console.error(err);\r\n                        if (scriptedRef.current) {\r\n                            setStatus({ success: false });\r\n                            setErrors({ submit: err.message });\r\n                            setSubmitting(false);\r\n                        }\r\n                    }\r\n                }}\r\n            >\r\n                {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\r\n                    <form noValidate onSubmit={handleSubmit} {...others}>\r\n                        <FormControl fullWidth error={Boolean(touched.email && errors.email)} sx={{ ...theme.typography.customInput }}>\r\n                            <InputLabel htmlFor=\"outlined-adornment-email-login\">Email Address / Username</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-email-login\"\r\n                                type=\"email\"\r\n                                value={values.email}\r\n                                name=\"email\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                label=\"Email Address / Username\"\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.email && errors.email && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-email-login\">\r\n                                    {errors.email}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n\r\n                        <FormControl\r\n                            fullWidth\r\n                            error={Boolean(touched.password && errors.password)}\r\n                            sx={{ ...theme.typography.customInput }}\r\n                        >\r\n                            <InputLabel htmlFor=\"outlined-adornment-password-login\">Password</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-password-login\"\r\n                                type={showPassword ? 'text' : 'password'}\r\n                                value={values.password}\r\n                                name=\"password\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                endAdornment={\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={handleClickShowPassword}\r\n                                            onMouseDown={handleMouseDownPassword}\r\n                                            edge=\"end\"\r\n                                            size=\"large\"\r\n                                        >\r\n                                            {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                }\r\n                                label=\"Password\"\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.password && errors.password && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-password-login\">\r\n                                    {errors.password}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n                        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" spacing={1}>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        checked={checked}\r\n                                        onChange={(event) => setChecked(event.target.checked)}\r\n                                        name=\"checked\"\r\n                                        color=\"primary\"\r\n                                    />\r\n                                }\r\n                                label=\"Remember me\"\r\n                            />\r\n                            {/* <Typography\r\n                                variant=\"subtitle1\"\r\n                                component={Link}\r\n                                to={loginProp ? `/pages/forgot-password/forgot-password${loginProp}` : '/forgot'}\r\n                                color=\"secondary\"\r\n                                sx={{ textDecoration: 'none' }}\r\n                            >\r\n                                Forgot Password?\r\n                            </Typography> */}\r\n                        </Stack>\r\n                        {errors.submit && (\r\n                            <Box sx={{ mt: 3 }}>\r\n                                <FormHelperText error>{errors.submit}</FormHelperText>\r\n                            </Box>\r\n                        )}\r\n\r\n                        <Box sx={{ mt: 2 }}>\r\n                            <AnimateButton>\r\n                                <Button\r\n                                    disableElevation\r\n                                    disabled={isSubmitting}\r\n                                    fullWidth\r\n                                    size=\"large\"\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                >\r\n                                    Sign in\r\n                                </Button>\r\n                            </AnimateButton>\r\n                        </Box>\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    );\r\n};\r\n\r\nFirebaseLogin.propTypes = {\r\n    loginProp: PropTypes.number\r\n};\r\n\r\nexport default FirebaseLogin;\r\n","// ORDERS\nexport const createOrder = (order, token) => {\n  return fetch(`http://52.90.192.153/api/orders`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"x-access-token\": token,\n    },\n    body: order,\n  })\n    .then((response) => {\n      return response.json();\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n\nexport const createRating = (token, ratings) => {\n  return fetch(`http://52.90.192.153/api/rating`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      \"x-access-token\": token,\n    },\n    body: JSON.stringify(ratings),\n  })\n    .then((response) => {\n      return response.json();\n    })\n    .catch((err) => console.log(err));\n};\n\nexport const processPayment = async (paymentData) => {\n  return fetch(`http://52.90.192.153/api/braintree/processPayment`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(paymentData),\n  })\n    .then((response) => {\n      console.log(\"Response Process Payment:::::\", response);\n      return response.json();\n    })\n    .catch((err) => {\n      //alert('fail process payment');\n      console.log(err);\n    });\n};\n\nexport const updateOrderStatus = async (orderId, body) => {\n  return fetch(`http://52.90.192.153/api/orders/${orderId}/status`, {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(body),\n  })\n    .then((response) => {\n      console.log(\"Response Update Order:::::\", response);\n      return response.json();\n    })\n    .catch((err) => {\n      //alert('fail update order');\n      console.log(err);\n    });\n};\n\nexport const createProduct = (token, product) => {\n  return fetch(`http://52.90.192.153/api/products`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"x-access-token\": token,\n    },\n    body: product,\n  })\n    .then((response) => {\n      return response.json();\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport DropIn from 'braintree-web-drop-in-react';\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Divider, Grid, Stack, Typography, useMediaQuery, TextField, Button } from '@mui/material';\nimport { createOrder, processPayment, updateOrderStatus } from '../../../APICalls'\n\n// project imports\nimport AuthWrapper1 from '../AuthWrapper1';\nimport AuthCardWrapper from '../AuthCardWrapper';\nimport AuthLogin from '../auth-forms/AuthLogin';\nimport Logo from 'ui-component/Logo';\nimport AuthFooter from 'ui-component/cards/AuthFooter';\nimport useAuth from 'hooks/useAuth';\nimport axios from 'axios';\n\n// assets\n\n\nconst getQueryVariable = (variable) => {\n    var query = window.location.search.substring(1);\n    //console.log(query)//\"app=article&act=news_content&aid=160990\"\n    var vars = query.split(\"&\");\n    //console.log(vars) //[ 'app=article', 'act=news_content', 'aid=160990' ]\n    for (var i = 0; i < vars.length; i++) {\n        var pair = vars[i].split(\"=\");\n        //console.log(pair)//[ 'app', 'article' ][ 'act', 'news_content' ][ 'aid', '160990' ] \n        if (pair[0] == variable) {\n            //console.log('pair1',pair[1]);\n            return pair[1];\n        }\n    }\n    return (false);\n}\n\n\n// ================================|| AUTH3 - LOGIN ||================================ //\n\nconst Login = () => {\n    const theme = useTheme();\n    const { isLoggedIn } = useAuth();\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\n    const [change, setChange] = useState(false);\n    const [token, setToken] = useState('');\n    const [orderId, setOrderId] = useState('');\n    const [workerId, setWorkerId] = useState('');\n    const [currentWorker, setCurrentWorker] = useState('');\n    const [amount, setAmount] = useState(0);\n    const [tip, setTip] = useState(0);\n    const [porcent, setPorcent] = useState(10);\n    const [price, setPrice] = useState(0);\n    const [idFirebase, setIdFirebase] = useState('');\n    const [data, setData] = useState({\n        loading: false,\n        success: false,\n        clientToken: null,\n        error: '',\n        instance: {},\n        address: ''\n    });\n\n    useEffect(() => {\n        axios\n            .get('http://52.90.192.153/api/braintree/getToken')\n            .then((response) => {\n                setToken(response.data.clientToken);\n                setData({ clientToken: data.clientToken });\n                console.log('token::::', response.data.clientToken)\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    }, []);\n\n    useEffect(() => {\n        let worker = getQueryVariable('worker');\n        \n        axios\n            .get(`http://52.90.192.153/api/products/${worker}`)\n            .then((response) => {\n\n                console.log('response CurrentWorker:::', response.data);\n                setWorkerId(worker);\n                setCurrentWorker(response.data);\n                setIdFirebase(response.data.idFirebase);\n            })\n            .catch((error) => {\n                alert('fail get current worker');\n                console.log(error);\n            });\n    }, []);\n\n    \n\n    const onClickPay = async () => {\n        let formData = new FormData();\n        formData.append('price', Number(price));\n        formData.append('term', Number(1));\n        formData.append('trFee', Number(1));\n        formData.append('dish', Number(1));\n        formData.append('atmosphere', Number(1));\n        formData.append('tasty', Number(1));\n        formData.append('goodService', Number(1));\n        formData.append('porcent', Number(porcent));\n        formData.append('valueStar', Number(4));\n        formData.append('idFirebase', idFirebase);\n        formData.append('product_id', '61bebaa007211555408b72a0');\n        formData.append('product', JSON.stringify(currentWorker));\n        console.log('formData::', formData);\n        console.log('currentWorker.idFirerbase',idFirebase);\n    \n         createOrder(formData, token).then(datacreate => {\n            console.log('datacreate', datacreate)\n            setTimeout(() => {\n                setOrderId(datacreate._id);\n            }, 1500);\n\n            let nonce;\n            console.log('DATA INSTANCE:', data)\n            data.instance\n                .requestPaymentMethod()\n                .then(data => {\n                    // console.log(data);\n                    nonce = data.nonce;\n                    // once you have nonce (card type, card number) send nonce as 'paymentMethodNonce'\n                    // and also total to be charged\n                    console.log(\n                        \"send nonce and total to process: \",\n                        nonce,\n                    );\n                    console.log('price', price);\n\n                    const paymentData = {\n                      paymentMethodNonce: nonce,\n                    orderId: datacreate._id\n                    };\n                    \n                    processPayment(paymentData)\n                        .then(response => {\n                            console.log('response payment process:', response);\n                            if (response.success === true) {\n                                //showBlockSuccessUIModalRef.current.click();\n                                //setNoPayment(false);\n                                alert('Payment successful');\n                                let body = { status: \"Open\", is_paid: \"true\" }\n                                updateOrderStatus(datacreate._id, body).then(response => {\n                                    console.log('response update orfder status', response);\n                                });\n\n                                //TODO: vaciar carrito y eliminar datos de localstorage y de indexDB \n                            }\n\n                        })\n                        .catch(error => {\n                            // showBlockErrorUIModalRef.current.click();\n                            console.log(error);\n                            setData({ loading: false });\n                    });\n                })\n                .catch(error => {\n                    // console.log(\"dropin error: \", error);\n                    setData({ ...data, error: error.message });\n                });\n\n\n\n        });\n\n\n\n    }\n\n    if (!change)\n        return (\n            <AuthWrapper1>\n                <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: '100vh' }}>\n                    <Grid item xs={12}>\n                        <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ minHeight: 'calc(100vh - 68px)' }}>\n                            <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\n                                <AuthCardWrapper>\n                                    <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\n                                        <Grid item sx={{ mb: 3 }}>\n                                            <Link to=\"#\">\n                                                <Logo />\n                                            </Link>\n                                        </Grid>\n                                        {/* <Grid item xs={12}>\n                                      \n                                        </Grid> */}\n                                        <Grid item xs={12}>\n                                            {/* <AuthLogin /> */}\n                                            <TextField\n                                                id=\"outlined-basic\"\n                                                label=\"Bill Amount\"\n                                                value={amount}\n                                                variant=\"outlined\"\n                                                fullWidth\n                                                onChange={(e) => {\n                                                    setAmount(e.target.value);\n                                                    if (porcent === 10) {\n                                                        setPrice((e.target.value * 0.1).toFixed(2));\n                                                    }\n                                                    if (porcent === 15) {\n                                                        setPrice((e.target.value * 0.15).toFixed(2));\n                                                    }\n                                                    if (porcent === 20) {\n                                                        setPrice((e.target.value * 0.2).toFixed(2));\n                                                    }\n                                                }}\n                                            />\n                                        </Grid>\n\n                                        <Grid container style={{ marginTop: 12 }}>\n                                            <Grid item xs={2} />\n                                            <Grid item xs={1}>\n                                                <Button\n                                                    style={{ background: '#8B0B35' }}\n                                                    variant=\"contained\"\n                                                    onClick={() => {\n                                                        setPorcent(10);\n                                                        setPrice((amount * 0.1).toFixed(2));\n                                                    }}\n                                                >\n                                                    10%\n                                                </Button>\n                                            </Grid>\n                                            <Grid item xs={2} />\n                                            <Grid item xs={1}>\n                                                <Button\n                                                    style={{ background: '#8B0B35' }}\n                                                    variant=\"contained\"\n                                                    onClick={() => {\n                                                        setPorcent(15);\n                                                        setPrice((amount * 0.15).toFixed(2));\n                                                    }}\n                                                >\n                                                    15%\n                                                </Button>\n                                            </Grid>\n                                            <Grid item xs={2} />\n                                            <Grid item xs={1}>\n                                                <Button\n                                                    style={{ background: '#8B0B35' }}\n                                                    onClick={() => {\n                                                        setPorcent(20);\n                                                        setPrice((amount * 0.2).toFixed(2));\n                                                    }}\n                                                    variant=\"contained\"\n                                                >\n                                                    20%\n                                                </Button>\n                                            </Grid>\n                                        </Grid>\n\n                                        <Grid item xs={12}>\n                                            {/* <AuthLogin /> */}\n                                            <Typography>{`Tips   $${price}`}</Typography>\n                                        </Grid>\n                                        <Grid item xs={12}>\n                                            <Divider />\n                                        </Grid>\n                                        <Grid item xs={12} justifyContent=\"center\">\n                                            <Button style={{ background: '#8B0B35' }} onClick={() => setChange(true)} variant=\"contained\">\n                                                Proceed to Payment\n                                            </Button>\n                                        </Grid>\n                                    </Grid>\n                                </AuthCardWrapper>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12} sx={{ m: 3, mt: 1 }}>\n                        <AuthFooter />\n                    </Grid>\n                </Grid>\n            </AuthWrapper1>\n        );\n    return (\n        <AuthWrapper1>\n            <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: '100vh' }}>\n                <Grid item xs={12}>\n                    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ minHeight: 'calc(100vh - 68px)' }}>\n                        <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\n                            <AuthCardWrapper>\n                                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\n                                    <Grid item sx={{ mb: 3 }}>\n                                        <Link to=\"#\">\n                                            <Logo />\n                                        </Link>\n                                    </Grid>\n                                </Grid>\n                                <div onBlur={() => setData({ ...data, error: '' })}>\n                                    <DropIn\n                                        options={{ authorization: token }}\n                                        onInstance={(instance) => {\n                                            console.log('INSTANCE ONLY:::', instance)\n                                            setData({ ...data, instance: instance })\n                                        }}\n                                    />\n\n                                </div>\n                                <Grid container xs={12} justifyContent=\"center\">\n                                    <Button style={{ background: '#8B0B35' }} onClick={() => onClickPay()} variant=\"contained\">\n                                        Pay\n                                    </Button>\n                                </Grid>\n                            </AuthCardWrapper>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12} sx={{ m: 3, mt: 1 }}>\n                    <AuthFooter />\n                </Grid>\n            </Grid>\n        </AuthWrapper1>\n    );\n};\n\nexport default Login;\n"],"sourceRoot":""}