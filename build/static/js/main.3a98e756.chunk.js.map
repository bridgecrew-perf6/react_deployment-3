{"version":3,"sources":["serviceWorker.js","core/Breadcrumb.js","config.js","core/Footer.js","core/Menu.js","cart/sideCart/Product.js","cart/sideCart/index.js","utils/customHooks.js","core/Layout.js","auth/functions.js","user/Signin.js","auth/Main.js","core/Home.js","common/Alert.js","APICalls.js","core/ShoppingSection.js","core/TraditionalSP.js","core/HtvSP.js","core/Sublimation.js","core/Embroidery.js","core/Engraving.js","core/Merchandise.js","design/index.js","auth/PrivateRoute.js","admin/Sidebaruser2.js","user/Dashboard.js","user/Confirm.js","admin/Sidebar2.js","admin/dashboard/AdminInformation.js","admin/categories/CategoryForm.js","admin/categories/CategoryDataTable.js","admin/categories/index.js","admin/products/ProductForm.js","admin/products/ProductDataTable.js","admin/products/index.js","admin/ProductViews/ViewForm.js","admin/ProductViews/ProductViewDataTable.js","admin/ProductViews/index.js","cart/fullCart/Product.js","cart/fullCart/index.js","core/Layout2.js","checkout/Product2.js","checkout/index.js","payment/Product2.js","payment/index.js","admin/orders/OrderItemDataTable.js","admin/orders/OrderForm.js","admin/orders/OrderDataTable.js","admin/orders/index.js","Routes.js","index.js"],"names":["Boolean","window","location","hostname","match","Breadcrumb","currentPage","className","Config","API","process","FPD_URL","BASE_FPD_URL","HOME_URL","PASADENA_INFO","address","contact_email","contact_phone","social_network","facebook","instagram","twitter","DB_CONFIG","name","version","objectStoresMeta","store","storeConfig","keyPath","autoIncrement","storeSchema","keypath","options","unique","US_STATES","code","COLORS","hexCode","SIZES","COLORS_INIT","SIZES_INIT","ORDER_STATUS","withRouter","history","to","href","isActive","path","pathname","color","useState","localStorage","getItem","cartHasItems","setCartHasItems","useEffect","setInterval","_cartHasItems","onLocalStorageChange","useCallback","event","key","oldValue","newValue","addEventListener","removeEventListener","id","src","origin","alt","style","height","maxHeight","Product","product","delCallback","editCallback","productQty","setProductQty","productSize","setProductSize","update","useIndexedDB","qty","size","changeProductSize","target","value","then","postMessage","setItem","Date","now","error","console","log","category","productType","printingType","_id","image","zIndex","marginTop","display","type","onChange","sizes","R","availableSizes","Object","keys","map","renderSizeSelector","marginLeft","fontWeight","price","title","onClick","SideCart","cart","setCart","subtotal","setSubtotal","cartLastUpdate","setCartLastUpdate","getAll","deleteRecord","updateCart","onMessageReceived","data","storageCartLastUpdate","setTimeout","onDeleteProduct","onEditProduct","field","i","length","borderColor","paddingTop","paddingBottom","fontSize","textAlign","toFixed","useScript","url","script","document","createElement","body","appendChild","removeChild","Layout","description","children","showBreadcrumb","signin","user","fetch","method","headers","Accept","JSON","stringify","response","json","catch","err","authenticate","next","token","parse","isAuthenticated","signout","removeItem","Signin","email","password","loading","redirectToReferrer","values","setValues","handleChange","redirectUser","isConfirmed","role","clickSubmit","preventDefault","showLoading","showError","signinForm","placeholder","Auth","data-toggle","Home","Alert","success","onSuccess","onError","closeAlert","e","aria-label","aria-hidden","getCategories","URI","getProducts","getRatings","productId","createRating","ratings","updateUser","userId","getUser","ShoppingSection","printingTypeId","setLoading","itemsFiltered","setItemsFiltered","isotope","setIsotope","filterKey","setFilterKey","categories","setCategories","products","setProducts","productsRatings","setProductsRatings","ordersByWorker","setOrdersByWorker","selectedProduct","setSelectedProduct","activeIndex","setActiveIndex","selectedColor","selectedSize","navRef","React","createRef","filterStatus","setFilterStatus","filteredItems","setFilteredItems","dataTableError","setDataTableError","dataTableSuccess","setDataTableSuccess","columns","width","cell","row","selector","sortable","status","translate","translateStatus","is_paid","moment","order_date","format","order_total","items","filter","item","owner_user_id","getProductByLogin","undefined","Isotope","itemSelector","percentPosition","transitionDuration","masonry","columnWidth","arrange","entries","updateStars","orders","imagesLoaded","layout","removeReview","rating","deleteRating","rateAverage","Math","floor","rateValue","rateCount","diffRateAverage","starArray","diffStarArray","index","push","renderStar","star","replace","data-target","imageURL","onerror","maxWidth","tabIndex","data-dismiss","ref","state","simom","overflow","minHeight","marginBottom","descr","ReactHtmlParser","marginRight","textTransform","review","dish","class","atmosphere","tasty","goodService","pagination","highlightOnHover","pointerOnHover","subHeader","subHeaderComponent","for","defaultValue","Traditional","Embroidery","Design","params","setShowError","errorMsg","setErrorMsg","add","getByID","useParams","editProductId","getProductByID","productWithImage","isEditing","updateProduct","insertProduct","source","rowToUpdate","guid","uuidv4","weight","productName","productPrice","productWeight","productDesc","productColor","sizeList","isMerchandise","styles","border","frameBorder","allowFullScreen","position","renderContent","PrivateRoute","Component","component","adminRole","rest","render","props","from","Dashboard","setName","phoneNumber","setPhoneNumber","setError","setSuccess","errorShiping","setErrorShipping","successShipping","setSuccessShipping","street","setStreet","suite","setSuite","city","setCity","postalCode","setPostalCode","country","setCountry","setState","clickSignout","clickUpdate","alertError","alertSuccess","htmlFor","disabled","setPassword","AdminInformation","CategoryForm","selectedCategory","onDataTableSuccess","onReloadCategories","onSetModalOpen","modalOpen","setDescr","setPrintingType","setPrintingTypeList","modalTitle","setModalTitle","btnName","setBtnName","aria-labelledby","padding","autoFocus","required","categoryId","updateCategory","createCategory","CategoryDataTable","setSelectedCategory","filterText","setFilterText","setModalOpen","actionsBtns","ignoreRowClick","allowOverflow","button","loadCategories","toLowerCase","includes","clickDelete","deleteCategory","onDataTableError","defaultSortField","aria-describedby","borderRadius","FilterComponent","Categories","ProductForm","onReloadProducts","setEmail","setRole","local","setLocal","emailPaypal","setEmailPaypal","setPrice","setWeight","setQty","setCategory","setColorList","setSizeList","formData","setFormData","imgInputRef","useRef","FormData","categoryData","colorList","set","accept","files","data-example-id","editor","ClassicEditor","config","toolbar","getData","current","createProduct","ProductDataTable","loadProducts","productData","deleteProduct","ariaDescribedby","Products","ViewForm","selectedView","numberOfViews","onReloadViews","mainView","setMainView","imgBaseInputRef","imgShadowsInputRef","imgHighlightsInputRef","step","fileExtension","split","pop","checked","viewId","productView","updateView","createView","ProductViewDataTable","views","setViews","setSelectedView","loadViews","getViews","viewData","newDataArray","forEach","unshift","deleteView","ProductViews","paddingLeft","paddingRight","option","FullCart","Product2","Checkout","setNumberOfItems","redirectToPayment","setRedirectToPayment","orderId","setOrderId","shippingFee","currentProduct","setCurrentProduct","priceBill","setPriceBill","trFee","setTrFee","term","setTerm","setGoodService","setAtmosphere","setDish","setTasty","porcent","setPorcent","clientToken","instance","valueStar","setValueStar","setDescrReview","currentData","worker","variable","vars","search","substring","pair","getQueryVariable","confirmEmail","phone","addressLine1","addressLine2","setErrorFieldMessages","getProduct","total","_numberOfItems","totalWeight","parseInt","ceil","onClickPorcent","porcentNumber","onSubmitForm","errors","hasErrors","prevState","append","order","createOrder","message","renderProducts","currentProduct0","renderShippingForm","autoComplete","backgroundColor","accept-charset","action","inactiveColor","renderCheckoutCart","maxLength","renderRedirect","productDetail","Payment","setTotal","setShippingFee","redirectToMain","setRedirectToMain","currentOrder","setCurrentOrder","noPayment","setNoPayment","setData","showBlockSuccessUIModalRef","hideBlockSuccessUIModalRef","showBlockErrorUIModalRef","hideBlockErrorUIModalRef","getToken","onClickPay","nonce","requestPaymentMethod","paymentData","processPayment","paymentMethodNonce","click","open","updateOrderStatus","getOrderWorker","clickClose","_subtotal","_shippingFee","parseFloat","orderWorker","renderPaymentDetails","onBlur","authorization","onInstance","data-backdrop","data-keyboard","sessionData","redirecTo","OrderItemDataTable","orderItems","setOrderItems","selectedOrderItem","setSelectedOrderItem","selectedOrderItemReview","setSelectedOrderItemReview","element","minWidth","product_id","loadOrders","orderID","getOrderItems","newOrderItems","selectedOrderItemCBReview","selectedOrderItemCB","selectCurrentOrderItem","selectCurrentOrderItemReview","paginationPerPage","noHeader","selectableRowsHighlight","OrderForm","selectedOrder","descrReview","closeModalButton","clickSubmitReview","orderItem","product_obj","borderBottom","customer_name","customer_addressLine1","customer_email","customer_addressLine2","customer_phone","customer_city","customer_zipCode","customer_state","renderFPDIframe","cols","rows","OrderDataTable","setOrders","setSelectedOrder","getOrders","orderData","Orders","Routes","exact","TraditionalSP","HtvSP","Sublimation","Engraving","Merchandise","UserDashboard","UserConfirm","AdminUserInformation","OrderList","initDB","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3a98e756.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// Core Imports\nimport React from 'react';\n\n// TODO: Explanation\nconst  Breadcrumb = ({currentPage}) => (\n   <div className=\"ht__bradcaump__area\">\n       <div className=\"ht__bradcaump__wrap\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-xs-12\">\n                        <div className=\"bradcaump__inner text-center\">\n                            <h2 className=\"bradcaump-title\">{currentPage}</h2>\n                           \n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div> \n    </div>\n);\n\nexport default Breadcrumb;","const Config = \n{\n    API: process.env.REACT_APP_API_URL,\n    FPD_URL: process.env.REACT_APP_FPD_URL,\n    BASE_FPD_URL: process.env.REACT_APP_FPD_BASE_URL,\n    HOME_URL: process.env.REACT_APP_HOME_URL,\n    PASADENA_INFO: {\n        address: 'TiptipTop\\'s Address',\n        contact_email: 'info@tiptiptop.com',\n        contact_phone: '+1 123 456 78910',\n        social_network: {\n            facebook: 'https://facebook.com',\n            instagram: 'https://instagram.com',\n            twitter: 'https://twitter.com',\n        }\n    },\n    DB_CONFIG: {\n\n        name: 'TiptiptopCart',\n        version: 1,\n        objectStoresMeta: [\n            {\n                store: 'cart',\n                storeConfig: { keyPath: 'id', autoIncrement: true },\n                storeSchema: [\n                    { name: 'name', keypath: 'name', options: { unique: false } },\n                    { name: 'guid', keypath: 'guid', options: { unique: true } },\n                    { name: 'product', keypath: 'product', options: { unique: false } },\n                    { name: 'productType', keypath: 'productType', options: { unique: false } },\n                    { name: 'size', keypath: 'size', options: { unique: false } },\n                    { name: 'color', keypath: 'color', options: { unique: false } },\n                    { name: 'price', keypath: 'price', options: { unique: false } },\n                    { name: 'description', keypath: 'description', options: { unique: false } },\n                    { name: 'image', keypath: 'image', options: { unique: false } },\n                    { name: 'qty', keypath: 'qty', options: { unique: false } },\n                    { name: 'availableSizes', keypath: 'availableSizes', options: { unique: false } },\n                    { name: 'weight', keypath: 'weight', options: { unique: false } }\n                ]\n            }\n        ]\n\n    },\n\n    US_STATES: [\n        { code: 'AL', name: 'Alabama' },\n        { code: 'AK', name: 'Alaska' },\n        { code: 'AZ', name: 'Arizona' },\n        { code: 'AR', name: 'Arkansas' },\n        { code: 'CA', name: 'California' },\n        { code: 'CO', name: 'Colorado' },\n        { code: 'CT', name: 'Connecticut' },\n        { code: 'DE', name: 'Delaware' },\n        { code: 'DC', name: 'District Of Columbia' },\n        { code: 'FL', name: 'Florida' },\n        { code: 'GA', name: 'Georgia' },\n        { code: 'HI', name: 'Hawaii' },\n        { code: 'ID', name: 'Idaho' },\n        { code: 'IL', name: 'Illinois' },\n        { code: 'IN', name: 'Indiana' },\n        { code: 'IA', name: 'Iowa' },\n        { code: 'KS', name: 'Kansas' },\n        { code: 'KY', name: 'Kentucky' },\n        { code: 'LA', name: 'Louisiana' },\n        { code: 'ME', name: 'Maine' },\n        { code: 'MD', name: 'Maryland' },\n        { code: 'MA', name: 'Massachusetts' },\n        { code: 'MI', name: 'Michigan' },\n        { code: 'MN', name: 'Minnesota' },\n        { code: 'MS', name: 'Mississippi' },\n        { code: 'MO', name: 'Missouri' },\n        { code: 'MT', name: 'Montana' },\n        { code: 'NE', name: 'Nebraska' },\n        { code: 'NV', name: 'Nevada' },\n        { code: 'NH', name: 'New Hampshire' },\n        { code: 'NJ', name: 'New Jersey' },\n        { code: 'NM', name: 'New Mexico' },\n        { code: 'NY', name: 'New York' },\n        { code: 'NC', name: 'North Carolina' },\n        { code: 'ND', name: 'North Dakota' },\n        { code: 'OH', name: 'Ohio' },\n        { code: 'OK', name: 'Oklahoma' },\n        { code: 'OR', name: 'Oregon' },\n        { code: 'PA', name: 'Pennsylvania' },\n        { code: 'RI', name: 'Rhode Island' },\n        { code: 'SC', name: 'South Carolina' },\n        { code: 'SD', name: 'South Dakota' },\n        { code: 'TN', name: 'Tennessee' },\n        { code: 'TX', name: 'Texas' },\n        { code: 'UT', name: 'Utah' },\n        { code: 'VT', name: 'Vermont' },\n        { code: 'VA', name: 'Virginia' },\n        { code: 'WA', name: 'Washington' },\n        { code: 'WV', name: 'West Virginia' },\n        { code: 'WI', name: 'Wisconsin' },\n        { code: 'WY', name: 'Wyoming' },\n    ],\n    \n    COLORS: [\n        { name: 'Grey', hexCode: '5E5F5F' },\n        { name: 'Black', hexCode: '1C1C1C' },\n        { name: 'Light Green', hexCode: '8EEBC1' },\n        { name: 'White', hexCode: 'FFFFFF' },\n        { name: 'Navy Blue', hexCode: '152958' },\n        { name: 'Vintage Black', hexCode: '222222' },\n        { name: 'Brunt Orange', hexCode: 'E78848' },\n        { name: 'Pink', hexCode: 'E09B8E' },\n        { name: 'Red', hexCode: 'C1000A' },\n        { name: 'Team Purple', hexCode: '552583' },\n        { name: 'Marron', hexCode: '4F1111' },\n        { name: 'Green', hexCode: '114C2A' },\n        { name: 'Yellow', hexCode: 'F3CC30' },\n    ],\n\n    SIZES: [\n        { code: 'S', name: 'Small' },\n        { code: 'M', name: 'Medium' },\n        { code: 'L', name: 'Large' },\n        { code: 'XL', name: 'Extra-Large' },\n        { code: 'XXL', name: 'Extra-Extra-Large' },\n    ],\n\n    COLORS_INIT: {\n        '5E5F5F': false,\n        '1C1C1C': false,\n        '8EEBC1': false,\n        'FFFFFF': false,\n        '152958': false,\n        '222222': false,\n        'E78848': false,\n        'E09B8E': false,\n        'C1000A': false,\n        '552583': false,\n        '4F1111': false,\n        '114C2A': false,\n        'F3CC30': false\n    },\n\n    SIZES_INIT: {\n        'S': false,\n        'M': false,\n        'L': false,\n        'XL': false,\n        'XXL': false,\n    },\n\n    ORDER_STATUS: {\n        'pending_payment': 'pending_payment',\n        'open': 'open',\n        'hold': 'hold',\n        'processed': 'processed',\n        'shipped': 'shipped',\n        'completed': 'completed',\n        'canceled' : 'canceled'\n    }\n}\n\nexport default Config;","// Core Imports\nimport React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport Config from '../config'\n\n// TODO: Explanation\nconst Footer = ({history}) => {\n\n    // Main render\n    return (\n        <footer className=\"htc__foooter__area gray-bg mt--40\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"footer__container clearfix\">\n                         \n                        <div className=\"col-md-3 col-lg-4 col-sm-6\">\n                            <div className=\"ft__widget\">\n                                <h2 className=\"ft__title\">\n                                    <Link className=\"\" to=\"/\">TipTipTop</Link>\n                                </h2>\n                                <div className=\"footer-address\">\n                                    <ul>\n                                        <li>\n                                            <div className=\"address-icon\">\n                                                <i className=\"zmdi zmdi-pin\"></i>\n                                            </div>\n                                            <div className=\"address-text\">\n                                                <p>{Config.PASADENA_INFO.address}</p>\n                                            </div>\n                                        </li>\n                                        <li>\n                                            <div className=\"address-icon\">\n                                                <i className=\"zmdi zmdi-email\"></i>\n                                            </div>\n                                            <div className=\"address-text\">\n                                                <a href={`mailto:${Config.PASADENA_INFO.contact_email}`}>{Config.PASADENA_INFO.contact_email}</a>\n                                            </div>\n                                        </li>\n                                        <li>\n                                            <div className=\"address-icon\">\n                                                <i className=\"zmdi zmdi-phone-in-talk\"></i>\n                                            </div>\n                                            <div className=\"address-text\">\n                                                <p>{Config.PASADENA_INFO.contact_phone}</p>\n                                            </div>\n                                        </li>\n                                    </ul>\n                                </div>\n                                <ul className=\"social__icon\">\n                                    <li><a href={Config.PASADENA_INFO.social_network.twitter}><i className=\"zmdi zmdi-twitter\"></i></a></li>\n                                    <li><a href={Config.PASADENA_INFO.social_network.instagram}><i className=\"zmdi zmdi-instagram\"></i></a></li>\n                                    <li><a href={Config.PASADENA_INFO.social_network.facebook}><i className=\"zmdi zmdi-facebook\"></i></a></li>\n                                    <li><a href={Config.PASADENA_INFO.social_network.facebook}><i className=\"zmdi zmdi-google-plus\"></i></a></li>\n                                </ul>\n                            </div>\n                        </div>\n                    \n                        <div className=\"col-md-3 col-lg-4 col-sm-6 smt-30 xmt-30\">\n                            <div className=\"ft__widget\">\n                                <h2 className=\"ft__title\">Categories</h2>\n                                <ul className=\"footer-categories\">\n                                    <li><Link to=\"/screen-printing/traditional\">Restaurants</Link></li>\n                                    <li><Link to=\"/screen-printing/htv\">NightClubs</Link></li>\n                                    <li><Link to=\"/sublimation\">Parking</Link></li>\n                                    <li><Link to=\"/embroidery\">Hotels</Link></li>\n                                    <li><Link to=\"/engraving\">Airports</Link></li>\n                                    <li><Link to=\"/merchandise\">Malls</Link></li>\n                                </ul>\n                            </div>\n                        </div>\n                      \n                        <div className=\"col-md-3 col-lg-4 col-sm-6 smt-30 xmt-30\">\n                            <div className=\"ft__widget\">\n                                <h2 className=\"ft__title\">Information</h2>\n                                <ul className=\"footer-categories\">\n                                    <li><a href={`mailto:${Config.PASADENA_INFO.contact_email}`}>Contact Us</a></li>\n                                    <li><a>Terms & Conditions</a></li>\n                                    <li><a>Returns & Exchanges</a></li>\n                                    <li><a>Shipping & Delivery</a></li>\n                                    <li><a>Privacy Policy</a></li>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n        \n                <div className=\"htc__copyright__area\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12 col-lg-12 col-sm-12 col-xs-12\">\n                            <div className=\"copyright__inner\">\n                                <div className=\"copyright\">\n                                    <p>© 2021 <Link className=\"\" to=\"/\">TipTipTop</Link> ...</p>\n                                </div>\n                                <ul className=\"footer__menu\">\n                                    <li><Link className=\"\" to=\"/\">Home</Link></li>\n                                    <li><a href={`mailto:${Config.PASADENA_INFO.contact_email}`}>Contact Us</a></li>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            \n            </div>\n        </footer>\n    );\n\n};\n\nexport default withRouter(Footer);","// Core Imports\nimport React, {useEffect, useState, useCallback} from 'react';\nimport { Link, withRouter } from 'react-router-dom';\n\nconst isActive = (history,path) => {\n\n    if (history.location.pathname === path)\n    {\n        return {color : \"#ff4136\"};\n    }\n}\n\n// TODO: Explanation\nconst Menu = ({history}) => {\n\n    const [cartHasItems, setCartHasItems] = useState(localStorage.getItem('cartHasItems'));\n\n    useEffect(() => {\n\n        setInterval(() => {\n\n            let _cartHasItems = localStorage.getItem('cartHasItems');\n\n            if (_cartHasItems && _cartHasItems != cartHasItems)\n            {\n                setCartHasItems(_cartHasItems);\n            }\n\n        }, 1500);\n\n    }, []);\n\n    const onLocalStorageChange = useCallback(event => {\n        \n        if (event.key && event.key === 'cartHasItems' && event.oldValue !== event.newValue)\n        {\n            setCartHasItems(event.newValue);\n        }\n\n    }, []);\n\n    useEffect(() => {\n\n        window.addEventListener(\"storage\", onLocalStorageChange);\n        return () => window.removeEventListener(\"storage\", onLocalStorageChange);\n\n    }, [onLocalStorageChange]);\n\n    // Main Render\n    return (\n        <header id=\"header\" className=\"htc-header header--3 bg__white\">\n            <div id=\"sticky-header-with-topbar\" className=\"mainmenu__area sticky__header\">\n                <div className=\"container\">\n                    <div className=\"row\">\n\n                        <div className=\"col-md-2 col-lg-2 col-sm-3 col-xs-3\">\n                            <div className=\"logo\">\n                                <Link className=\"\" to=\"/\">\n                                    <img src={window.location.origin +\"/images/logo/tiptiptop_logo.png\"} alt=\"logo\" style= {{ height:\"80px\", maxHeight: \"100%\"}}/>\n                                </Link>\n                            </div>\n                        </div>\n                        \n                        <div className=\"col-md-8 col-lg-8 col-sm-6 col-xs-6\">\n                            <nav className=\"mainmenu__nav hidden-xs hidden-sm\">\n                                <ul className=\"main__menu\">\n                                    \n                                    <li className=\"drop\">\n                                        \n                                       \n                                    </li>\n\n                                   \n                                </ul>\n                            </nav>\n                            \n                        </div>\n                \n                        <div className=\"col-md-2 col-sm-4 col-xs-3\">  \n                            <ul className=\"menu-extra\">\n                                <li><Link style={isActive(history,\"/auth\")} to=\"/auth\"><span className=\"ti-user\"></span></Link></li>\n                               \n                            </ul>\n                        </div>\n                    </div>\n                    <div className=\"mobile-menu-area\"></div>\n                </div>\n            </div>\n    \n        </header>\n    );\n\n};\n\nexport default withRouter(Menu);","// Core Imports\nimport React, { useState, useEffect } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useIndexedDB } from 'react-indexed-db';\nimport * as R from 'ramda';\n\nimport Config from '../../config'\n\n// Quick access side cart\nconst Product = ({ product, delCallback, editCallback }) => {\n\n    // Initial state\n    const [productQty, setProductQty] = useState(0);\n    const [productSize, setProductSize] = useState('');\n    const { update } = useIndexedDB('cart');\n\n    // This is needed to update initially the qty correctly\n    useEffect(() => setProductQty(product.qty), [product.qty]);\n    useEffect(() => setProductSize(product.size), [product.size]);\n\n    const deleteProductFromCart = () => {\n\n        // TODO: Maybe show a warning?\n\n        delCallback(product.id);\n    }\n\n    const onChangeQty = (event) => {\n\n        let newValue = event.target.value;\n\n        if (newValue > 0)\n        {\n            setProductQty(newValue);\n\n            if (editCallback)\n            {\n                editCallback(product, newValue, 'qty');\n            }\n        }\n    }\n\n    const changeProductSize = (event) => {\n\n        let newValue = event.target.value;\n        product.size = newValue;\n\n        update(product).then(\n\n            // Accept\n            () => {\n\n                setProductSize(newValue);\n                window.postMessage('updateCart', '*');\n                localStorage.setItem('cartLastUpdate', Date.now());\n            },\n\n            // Reject\n            error => {\n\n                console.log(error);\n            }\n        );\n\n    }\n\n    const renderSizeSelector = () => {\n\n        let sizes = R.filter(size => size === true, product.availableSizes);\n\n        return (\n            <select className=\"select-size\" onChange={changeProductSize} value={productSize}>\n                {sizes && Object.keys(sizes).map(size => <option key={size} value={size}>{size}</option>)}\n            </select>\n        );\n    }\n\n    // Main Render\n    return (\n        \n        <div className=\"checkout-single-product\">\n\n            <div className=\"shp__pro__thumb\">\n                <a href={product.category ? `/design/${product.productType}/edit/${product.id}/print/${product.category.printingType._id}` : '#'} className=\"product-img-link\"></a>\n                <img src={product.image} alt=\"product images\" className=\"image-product-cart\"/>\n            </div>\n\n            <div className=\"shp__pro__details\" style={{zIndex:100}}>\n                <a href={product.category ? `/design/${product.productType}/edit/${product.id}/print/${product.category.printingType._id}` : '#'} className=\"checkout-name\">{product.name}</a>\n\n                <div className=\"row\" style={{ marginTop: 5 }}>\n                    <div className=\"col-sm-6\" style={{display: 'flex'}}>\n                        <span className=\"quantity\">Quantity: </span>\n                        <input className=\"inline-product-qty\" type=\"number\" value={productQty} onChange={onChangeQty} />\n                    </div>\n                    <div className=\"col-sm-6\" style={{display: 'flex'}}>\n                        <span className=\"quantity\">Size: </span>\n                        {renderSizeSelector()}\n                    </div>\n                </div>\n                <div className=\"row\" style={{ marginTop: 5 }}>\n                    <div className=\"col-sm-6\" style={{display: 'flex'}}>\n                        <span className=\"quantity\">Price: </span>\n                        <span className=\"shp__price\" style={{ marginLeft: 5, fontWeight: 500 }}>${product.price}</span>\n                    </div>\n                </div>\n            </div>\n            <div className=\"remove__btn\">\n                <button className=\"link-button\" title=\"Remove this item\" onClick={() => deleteProductFromCart()}><i className=\"zmdi zmdi-close\"></i></button>\n            </div>\n            \n        </div>\n    );\n};\n\nexport default Product;","// Core Imports\nimport React, { useEffect, useState, useCallback }  from 'react';\nimport { useIndexedDB } from 'react-indexed-db';\n\n// Custom Component Imports\nimport Product from '../sideCart/Product'\n\n// Misc Imports\nimport Config from '../../config'\n\n// Quick access side cart\nconst SideCart = () => {\n\n    // Initial state\n    const [cart, setCart] = useState();\n    const [subtotal, setSubtotal] = useState(0);\n    const [cartLastUpdate, setCartLastUpdate] = useState(localStorage.getItem('cartLastUpdate'));\n    const { getAll, update, deleteRecord } = useIndexedDB('cart');\n\n    // Events --------------------------------------------------------------------------------------\n\n    const onLocalStorageChange = useCallback(event => {\n\n        console.log('SideCart@onLocalStorageChange');\n        \n        if (event.key && event.key === 'cartLastUpdate' && event.oldValue !== event.newValue)\n        {\n            updateCart();\n        }\n\n    }, []);\n\n    // This receives the product from the iframe\n    const onMessageReceived = useCallback(event => {\n\n        console.log('siteCart@onMessageReceived()');\n        if (event.data === 'updateCart' && event.origin === Config.HOME_URL)\n        {\n            let storageCartLastUpdate = localStorage.getItem('cartLastUpdate');\n\n            if (storageCartLastUpdate !== null && storageCartLastUpdate !== cartLastUpdate)\n            {\n                setTimeout(() => {\n\n                    updateCart();\n                    setCartLastUpdate(storageCartLastUpdate);\n    \n                }, 750);\n            }\n        }\n        else\n        {\n            if (event.origin !== Config.BASE_FPD_URL) return;\n\n            setTimeout(() => {\n\n                updateCart();\n\n            }, 750);\n        }\n\n    }, []);\n\n    // Delete item from cart\n    const onDeleteProduct = useCallback(id => {\n\n        console.log('onDeleteProduct ' + id);\n\n        if (id)\n        {\n            deleteRecord(id).then(\n                \n                // Accept\n                event => {\n                    console.log('Deleted product form cart!');\n                    updateCart();\n                    window.postMessage('updateCart', '*');\n                    localStorage.setItem('cartLastUpdate', Date.now());\n                },\n\n                // Reject\n                error => {\n                    // TODO: Maybe, if there is a server-side persisting of the cart,\n                    // retrieve it and update the local storage? This must be confirmed.\n                    // TODO: Process error here\n                    console.log(error);\n                }\n            );\n        }\n\n    }, []);\n\n    const onEditProduct = useCallback((product, newValue, field) => {\n\n        console.log('onEditProduct ' + product.id);\n\n        if (true)\n        {\n            product[field] = newValue;\n\n            update(product).then(\n\n                // Accept\n                () => {\n                    console.log('Product Updated successfully!.');\n                    window.postMessage('updateCart', '*');\n                    localStorage.setItem('cartLastUpdate', Date.now());\n                    updateCart();\n                },\n\n                // Reject\n                error => {\n\n                    console.log(error);\n                }\n            );\n        }\n    });\n\n    // END Events ----------------------------------------------------------------------------------\n\n    // React Effects -------------------------------------------------------------------------------\n\n    useEffect(() => updateCart(), []);\n\n    useEffect(() => {\n\n        window.addEventListener(\"message\", onMessageReceived);\n        return () => window.removeEventListener(\"message\", onMessageReceived);\n\n    }, [onMessageReceived]);\n\n    useEffect(() => {\n\n        window.addEventListener(\"storage\", onLocalStorageChange);\n        return () => window.removeEventListener(\"storage\", onLocalStorageChange);\n\n    }, [onLocalStorageChange]);\n\n    // END React Effects ---------------------------------------------------------------------------\n\n    // Methods -------------------------------------------------------------------------------------\n\n    // Update the items and information in the cart.\n    const updateCart = () => {\n\n        getAll().then(\n            \n            // Accept\n            cart => {\n\n                let subtotal = 0;\n\n                // Calculate the current subtotal\n                for(var i = 0; i < cart.length; i++)\n                {\n                    subtotal += cart[i].price * cart[i].qty;\n                }\n\n                setCart(cart);\n                setSubtotal(subtotal);\n                localStorage.setItem('cartHasItems', cart.length > 0);\n            },\n\n            // Reject\n            error => {\n                // TODO: Maybe, if there is a server-side persisting of the cart,\n                // retrieve it and update the local storage? This must be confirmed.\n                // TODO: Process error here\n                console.log(error);\n            }\n        );\n    }\n\n    // END Methods ---------------------------------------------------------------------------------\n\n    // Render Methods ------------------------------------------------------------------------------\n\n    // Render all current items in the cart\n    const renderProducts = () => {\n\n        if (cart && cart.length > 0)\n        {\n            return cart.map(product => {\n\n                let productSimple = {\n\n                    id: product.id,\n                    title: product.name,\n                    qty: product.qty,\n                    productType: product.productType,\n                    price: product.price,\n                    image: product.image,\n                }\n\n                return(\n                    <div key={product.id} className=\"checkout__cart__wrap\" style={{ borderColor: '#ddd' }}>\n                        <Product product={product} editCallback={onEditProduct} delCallback={onDeleteProduct} />\n                    </div>\n                )\n            })\n        }\n        else\n        {\n            return (\n                <>\n                    <ul style={{ paddingTop: 22, paddingBottom: 22}}>\n                        <li style={{ fontSize: 18, textAlign: 'center'}}>Cart is empty <span className=\"ti-face-sad\"></span>!</li>\n                    </ul>\n                    <ul className=\"shopping__btn\">\n                        <li><a href=\"/screen-printing/traditional\">Go to Shop</a></li>\n                    </ul>\n                </>\n            );\n        }\n    }\n\n    // Render totals section\n    const renderTotals = () => {\n        if (cart && cart.length > 0)\n        {\n            return (\n                <>\n                    <ul className=\"shoping__total\">\n                        <li className=\"subtotal\">Subtotal:</li>\n                        <li className=\"total__price\">${subtotal.toFixed(2)}</li>\n                    </ul>\n                    <ul className=\"shopping__btn\">\n                        <li><a href=\"/cart\">View Cart</a></li>\n                        <li className=\"shp__checkout\"><a href=\"/checkout\">Checkout</a></li>\n                    </ul>\n                </>\n            );\n        }\n        else return null;\n    }\n\n    // END Render Methods --------------------------------------------------------------------------\n\n    // Main Render\n    return (\n        <div className=\"shopping__cart\">\n            <div className=\"shopping__cart__inner\">\n                <div className=\"offsetmenu__close__btn\">\n                    <button className=\"link-button\"><i className=\"zmdi zmdi-close\"></i></button>\n                </div>\n                <div className=\"our-important-note\">\n                    {renderProducts()}\n                </div>\n                {renderTotals()}\n            </div>\n        </div>\n    );\n};\n\nexport default SideCart;","// Core Imports\nimport  { useEffect } from 'react';\n\n// TODO: Explanation\nconst useScript = url => {\n\n  useEffect(() => {\n\n    const script = document.createElement('script');\n    script.src = url;\n    document.body.appendChild(script);\n    \n    return () => {\n        document.body.removeChild(script);\n    }\n\n  }, [url]);\n};\n\nexport default useScript;\n","// Core Imports\nimport React from 'react';\n\n// Custom Component Imports\nimport Breadcrumb from './Breadcrumb';\nimport Footer from './Footer';\nimport Menu from './Menu';\nimport SideCart from '../cart/sideCart'\n\n// Function Imports\nimport useScript from '../utils/customHooks';\n\n// TODO: Explanation\n// TODO: title and description params are not being used\nconst Layout = ({\n    title = \"Title\", \n    description = \"Descrition\", \n    currentPage = \"Current\", \n    className,\n    children,\n    showBreadcrumb = true,\n}) => {\n\n    useScript(window.location.origin+'/js/main.js');\n\n    // Main Render\n    return (\n        <>\n            <Menu />\n            {console.log('children',children)}\n            {showBreadcrumb && <Breadcrumb currentPage={currentPage} />}\n            <div className={className}>\n                <div className=\"body__overlay\"></div>\n                <div className=\"offset__wrapper\">\n                    <SideCart />\n                </div>\n                {children}\n            </div>\n            <Footer/>\n        </>  \n    );\n};\n\nexport default Layout;","import Config from '../config';\n\n//SIGNUP API REQUEST\nexport const signup = user => {\n\n    return fetch(`${Config.API}/signup`,\n    {\n        method: 'POST',\n        headers:\n        {\n            Accept: 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(user)\n    })\n    .then(response => {\n\n        return response.json();\n\n    })\n    .catch(err => {\n\n        console.log(err);\n\n    });\n};\n\n//SIGNIN API REQUEST\nexport const signin = user => {\n\n    return fetch(`${Config.API}/signin`,\n    {\n        method: 'POST',\n        headers:\n        {\n            Accept: 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(user)\n    })\n    .then(response => {\n\n        return response.json();\n\n    })\n    .catch(err => {\n\n        console.log(err);\n\n    });\n};\n\n//SET LOCALSTORAGE JWT\nexport const authenticate = (data, next) => {\n\n    if (typeof window !== 'undefined')\n    {\n        if(!data.token)\n        {\n            data.token = JSON.parse(localStorage.getItem('jwt')).token;\n        }\n\n        localStorage.setItem('jwt', JSON.stringify(data));\n        next();\n    }\n}\n\n//GET LOCALSTORAGE\nexport const isAuthenticated = () => {\n\n    if (typeof window == 'undefined')\n    {\n        return false;\n    }\n\n    if (localStorage.getItem('jwt'))\n    {\n        return JSON.parse(localStorage.getItem('jwt'));\n    }\n    else\n    {\n        return false;\n    }\n};\n\n//UNSET LOCALSTORAGE JWT (LOGOUT)\nexport const signout = (next) => {\n\n    if (typeof window !== 'undefined')\n    {\n        localStorage.removeItem('jwt');\n        next();\n    }\n}","// Core Imports\nimport React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\n\n// Function Imports\nimport { signin, authenticate, isAuthenticated } from '../auth/functions';\n\n// TODO: Explanation\nconst Signin = (active = '') => {\n\n    // Initial state\n    const [values, setValues] = useState({\n        email: '',\n        password: '',\n        error: '',\n        loading: false,\n        redirectToReferrer: false\n    });\n\n    const { email, password, error, loading, redirectToReferrer } = values;\n    const { user } = isAuthenticated();\n\n    // Methods -------------------------------------------------------------------------------------\n    \n    const handleChange = name => event => {\n\n        setValues(\n        {\n            ...values,\n            error: false,\n            [name]: event.target.value\n        });\n    };\n\n    const redirectUser = () => {\n\n        if (redirectToReferrer)\n        {\n            \n            if (user && user.isConfirmed == false)\n            {\n                return <Redirect to=\"/user/confirm\" />\n            }\n            if (user && user.role === \"admin\" && user.isConfirmed)\n            {\n                //return <Redirect to=\"/admin/dashboard/user-information\" />\n                return <Redirect to=\"/main\" />\n            }\n            if (user && user.role === \"worker\" && user.isConfirmed)\n            {\n                //return <Redirect to=\"/user/dashboard\" />\n                return <Redirect to=\"/main\" />\n            }\n\n            else\n            {\n                return <Redirect to=\"/user/dashboard\" />\n            }\n        }\n        \n        if (isAuthenticated())\n        {\n            if (user && user.isConfirmed == false)\n            {\n                return <Redirect to=\"/user/confirm\" />\n            }\n            if (user && user.role === \"admin\" && user.isConfirmed)\n            {\n                return <Redirect to=\"/admin/dashboard/user-information\" />\n            }\n            if (user && user.role === \"worker\" && user.isConfirmed)\n            {\n                return <Redirect to=\"/user/dashboard\" />                \n            }\n\n            else\n            {\n                return <Redirect to=\"/user/dashboard\" />\n            }\n        }\n    }\n\n    // END Methods ---------------------------------------------------------------------------------\n\n    // Events --------------------------------------------------------------------------------------\n\n    const clickSubmit = event => {\n\n        event.preventDefault();\n\n        setValues({ ...values, error: false, loading: true });\n\n        signin({ email, password }).then(data => {\n            console.log('data resultante signin',data)\n            if (data.error)\n            {\n                setValues({\n                    ...values,\n                    error: data.error.description,\n                    loading: false\n                });\n            }\n            else\n            {\n                authenticate(data, () => {\n\n                    setValues({\n                        ...values,\n                        redirectToReferrer: true\n                    });\n                });\n            }\n        });\n    };\n\n    // END Events ----------------------------------------------------------------------------------\n\n    // Render Methods ------------------------------------------------------------------------------\n\n    const showLoading = () => loading && (\n        <div className=\"alert alert-info\">\n            Loading...\n        </div>\n    );\n\n    const showError = () => (\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\n            {error}\n        </div>\n    );\n\n    const signinForm = () => (\n        <div>       \n            <form className=\"login\" method=\"post\">\n                <input type=\"email\" placeholder=\"Email*\" onChange={handleChange('email')} value={email}></input>\n                <input type=\"password\" placeholder=\"Password*\" onChange={handleChange('password')} value={password}></input>\n            </form>\n            <div className=\"tabs__checkbox\">\n                {showLoading()}\n                {showError()}\n            </div>\n            <div className=\"tabs__checkbox\">\n                <span className=\"forget\"><a href=\"javascript:void(0)\">Forget Pasword?</a></span>\n            </div>\n\n            <div className=\"htc__login__btn mt--30\">\n                <button onClick={clickSubmit} >Login</button>\n            </div>\n            <div><br></br></div>\n        </div>        \n    );\n\n    // END Render Methods --------------------------------------------------------------------------\n\n    // Main Render\n    return (\n        <div>\n            {signinForm()}\n            {redirectUser()}\n        </div>\n    );\n};\n\nexport default Signin;","// Core Imports\nimport React from 'react';\n\n// Custom Component Imports\nimport Layout from '../core/Layout';\nimport Signup from '../user/Signup';\nimport Signin from '../user/Signin';\n\n// TODO: Explanation\nconst Auth = () => {\n\n    // Render Methods ------------------------------------------------------------------------------\n\n    const section = () => (\n\n        <div className=\"htc__login__register bg__white ptb--90\" >\n            <div className=\"container boxlogin\">\n                <div className=\"row\">\n                    <div>\n                    <br></br>\n                    </div>\n                \n                    <div className=\"col-md-6 col-md-offset-3\">\n                        <ul className=\"login__register__menu\" role=\"tablist\">\n                            <li role=\"presentation\" className=\"login active\"><a href=\"#login\" role=\"tab\" data-toggle=\"tab\">Login</a></li>\n                           \n                        </ul>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-md-6 col-md-offset-3\">\n                        <div className=\"htc__login__register__wrap\">\n                            <div id=\"login\" role=\"tabpanel\" className={`single__tabs__panel tab-pane active`}>\n                                <Signin/>\n                            </div>\n                            \n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n\n    // END Render Methods --------------------------------------------------------------------------\n\n    // Main render\n    return (\n        <Layout\n            title=\"Signin Page\"\n            description=\"Ecommerce\"\n            currentPage=\"Login & Register\"\n            showBreadcrumb = {false}\n        >\n            {section()}\n        </Layout>\n    );\n\n};\n\nexport default Auth;","// Core Imports\nimport React, { Fragment } from 'react';\n\n// Custom Component Imports\nimport Layout from './Layout';\n\n// TODO: Explanation\nconst Home = () => {\n\n    // Render Methods ------------------------------------------------------------------------------\n\n    const main = () => (\n\n        <Fragment>\n            <div className=\"slider__container\">\n                <div className=\"slider__activation__wrap owl-carousel owl-theme\">\n                    <div >\n                        <div className=\"container\">\n                            <div className=\"row\">\n                                <div className=\"col-md-12 col-lg-12 col-sm-12 col-xs-12\">\n                                    <div className=\"slider__inner\">\n                                        <h1><div style={{ color: 'black'}}>Tip Tip</div><span className=\"text--theme\"> Top</span></h1>\n                                        <div className=\"slider__btn\">\n                                            <a className=\"htc__btn\" href=\"javascript:void(0)\"><div style={{ color: 'black'}}>The easiest way to tip and save cash in your pocket</div></a>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                       \n                               \n                </div>\n            </div>\n        </Fragment>\n    );\n\n    // END Render Methods --------------------------------------------------------------------------\n\n    // Main Render\n    return (\n        <Layout \n            title=\"Home Page\"\n            description=\"Ecommerce\"\n            showBreadcrumb={false}\n        >\n            {main()}\n        </Layout>\n    );\n};\n\nexport default Home;","// Core Imports\nimport React, { Fragment } from 'react';\n\n// TODO: Explanation\nconst Alert = ({ success, onSuccess, error, onError }) => {\n\n    // Render Methods ------------------------------------------------------------------------------\n\n    const alertError = () => (\n        <div className=\"alert alert-danger col-xs-12 col-sm-offset-3 col-sm-6 col-lg-offset-3 col-lg-6\" style={{ display: error ? '' : 'none' }}>\n            {error}\n            <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={closeAlert}>\n                <span aria-hidden=\"true\">&times;</span>\n            </button>\n        </div>\n    );\n\n    const alertSuccess = () => (\n        <div className=\"alert alert-info col-xs-12 col-sm-offset-3 col-sm-6 col-lg-offset-3 col-lg-6\" style={{ display: success ? '' : 'none' }}>\n            <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={closeAlert}>\n                <span aria-hidden=\"true\">&times;</span>\n            </button>\n            {success}\n        </div>\n    );    \n\n    const closeAlert = e => {\n        e.preventDefault();\n        onError(false);\n        onSuccess && onSuccess(false);        \n    }\n\n    // END Render Methods --------------------------------------------------------------------------\n\n    // Main Render\n    return (\n        <Fragment>\n            {alertSuccess()}\n            {alertError()} \n        </Fragment>\n    );\n}\n\nexport default Alert;","import Config from './config';\n\n\n// CATEGORIES\nexport const createCategory = (token, category) => {\n\n    return fetch(`${Config.API}/categories`,\n    {\n        method: 'POST',\n        headers:\n        {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            'x-access-token': token\n        },\n        body: JSON.stringify(category)\n    })\n    .then(response => {\n\n        return response.json();\n    })\n    .catch(err => {\n\n        console.log(err);\n    });\n};\n\nexport const getCategories = (printingType) => {\n\n    const URI = printingType ? `${Config.API}/categories?printingType=${printingType}` : `${Config.API}/categories`;\n\n    return fetch(URI,\n    {\n        method: 'GET'       \n    })\n    .then(response => {\n\n        return response.json();\n    })\n    .catch(err => {\n\n        console.log(err);\n    });\n};\n\nexport const updateCategory = (categoryId, token, category) => {\n\n    return fetch(`${Config.API}/categories/${categoryId}`,\n    {\n        method: \"PUT\",\n        headers:\n        {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'x-access-token': token\n        },\n        body: JSON.stringify(category)\n    })\n    .then(response => {\n\n        return response.json();\n    })\n    .catch(err => console.log(err));\n};\n\nexport const deleteCategory = (token, productId) => {\n\n    return fetch(`${Config.API}/categories/${productId}`,\n    {\n        method: 'DELETE',\n        headers:\n        {\n            Accept: 'application/json',\n            'x-access-token': token\n        }\n    })\n    .then(response => {\n\n        return response.json();\n    })\n    .catch(err => {\n\n        console.log(err);\n    });\n};\n\n// PRODUCTS\nexport const createProduct = (token, product) => {\n\n    return fetch(`${Config.API}/products`,\n    {\n        method: 'POST',\n        headers:\n        {\n            Accept: 'application/json',\n            'x-access-token': token\n        },\n        body: product\n    })\n    .then(response => {\n\n        return response.json();\n    })\n    .catch(err => {\n\n        console.log(err);\n    });\n};\n\nexport const updateProduct = (productId, token, product) => {\n\n    return fetch(`${Config.API}/products/${productId}`,\n    {\n        method: \"PUT\",\n        headers:\n        {\n            Accept: 'application/json',\n            'x-access-token': token\n        },\n        body: product\n    })\n    .then(response => {\n\n        return response.json();\n    })\n    .catch(err => console.log(err));\n};\n\n////GET PRODUCT BY OWNER USER LOGIN\n\nexport const getProductByLogin = (owner_user_id) => {\n\n    const URI =  `${Config.API}/products/login/${owner_user_id}`;\n    \n    return fetch(URI,\n    {\n        method: 'GET'       \n    })\n    .then(response => {\n\n        return response.json();\n    })\n    .catch(err => {\n\n        console.log(err);\n    });\n};\n\n///////////////////////\n\nexport const getProduct = (productId) => {\n\n    const URI =  `${Config.API}/products/${productId}`;\n    \n    return fetch(URI,\n    {\n        method: 'GET'       \n    })\n    .then(response => {\n\n        return response.json();\n    })\n    .catch(err => {\n\n        console.log(err);\n    });\n};\n\nexport const getProducts = (printingType) => {\n\n    const URI = printingType ? `${Config.API}/products?printingType=${printingType}` : `${Config.API}/products`;\n    \n    return fetch(URI,\n    {\n        method: 'GET'       \n    })\n    .then(response => {\n\n        return response.json();\n    })\n    .catch(err => {\n\n        console.log(err);\n    });\n};\n\n\n\nexport const deleteProduct = (token, productId) => {\n\n    return fetch(`${Config.API}/products/${productId}`,\n    {\n        method: 'DELETE',\n        headers:\n        {\n            Accept: 'application/json',\n            'x-access-token': token\n        }\n    })\n    .then(response => {\n\n        return response.json();\n    })\n    .catch(err => {\n\n        console.log(err);\n    });\n};\n\n//RATINGS\nexport const getRatings = (productId) => {\n    const URI = `${Config.API}/rating/products/${productId}`;\n    return fetch(URI,\n    {\n        method: 'GET'       \n    })\n    .then(response => {\n\n        return response.json();\n    })\n    .catch(err => {\n        console.log(err);\n    });\n};\n\nexport const createRating = (token, ratings) => {\n    return fetch(`${Config.API}/rating`, {\n        method: \"POST\",\n        headers:\n        {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'x-access-token': token\n        },\n        body: JSON.stringify(ratings)\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const deleteRating = (token, productId, userId) => {\n    return fetch(`${Config.API}/rating/products/${productId}/user/${userId}`,\n    {\n        method: 'DELETE',\n        headers:\n        {\n            Accept: 'application/json',\n            'x-access-token': token\n        }\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\n//VIEWS\nexport const createView = (token, productId, productView) => {\n\n    return fetch(`${Config.API}/products/${productId}/productViews`,\n    {\n        method: 'POST',\n        headers:\n        {\n            Accept: 'application/json',\n            'x-access-token': token\n        },\n        body: productView\n    })\n    .then(response => {\n\n        return response.json();\n    })\n    .catch(err => {\n\n        console.log(err);\n    });\n};\n\nexport const updateView = (viewId, token, productId, productView) => {\n\n    return fetch(`${Config.API}/products/${productId}/productViews/${viewId}`,\n    {\n        method: \"PUT\",\n        headers:\n        {\n            Accept: 'application/json',\n            'x-access-token': token\n        },\n        body: productView\n    })\n    .then(response => {\n\n        return response.json();\n    })\n    .catch(err => console.log(err));\n};\n\nexport const getViews = (token,productId) => {\n\n    const URI = `${Config.API}/products/${productId}/productViews`;\n    \n    return fetch(URI,\n    {\n        method: 'GET',\n        headers:\n        {\n            Accept: 'application/json',\n            'x-access-token': token\n        }\n    })\n    .then(response => {\n\n        return response.json();\n    })\n    .catch(err => {\n\n        console.log(err);\n    });\n};\n\nexport const deleteView = (token,productId, viewId) => {\n\n    return fetch(`${Config.API}/products/${productId}/productViews/${viewId}`,\n    {\n        method: 'DELETE',\n        headers:\n        {\n            Accept: 'application/json',\n            'x-access-token': token\n        }\n    })\n    .then(response => {\n\n        return response.json();\n    })\n    .catch(err => {\n\n        console.log(err);\n    });\n};\n\n// PRINTING TYPES\nexport const getPrintingTypes = (token) => {\n\n    return fetch(`${Config.API}/printing-types`,\n    {\n        method: 'GET'       \n    })\n    .then(response => {\n\n        return response.json();\n    })\n    .catch(err => {\n\n        console.log(err);\n    });\n};\n\n// USER\nexport const updateUser = (userId, token, user) => {\n\n    return fetch(`${Config.API}/users/${userId}`,\n    {\n        method: \"PUT\",\n        headers:\n        {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'x-access-token': token\n        },\n        body: JSON.stringify(user)\n    })\n    .then(response => {\n\n        return response.json();\n    })\n    .catch(err => console.log(err));\n};\n\nexport const getUser = (userId, token) => {\n\n    return fetch(`${Config.API}/users/${userId}`,\n    {\n        method: 'GET',\n        headers:\n        {\n            'Accept': 'application/json',\n            'x-access-token': token\n        }\n    })\n    .then(response => {\n\n        return response.json();\n    })\n    .catch(err => {\n\n        console.log(err);\n    });\n};\n\n//Orders\nexport const getOrder = (orderId) => {\n\n    return fetch(`${Config.API}/orderItems/${orderId}`,\n    {\n        method: 'GET'     \n    })\n    .then(response => {\n        return response.json();\n    })\n    .catch(err => {\n        console.log(err);\n    });\n};\n\nexport const getOrderWorker = (orderId) => {\n\n    return fetch(`${Config.API}/orders/${orderId}`,\n    {\n        method: 'GET'     \n    })\n    .then(response => {\n        return response.json();\n    })\n    .catch(err => {\n        console.log(err);\n    });\n};\n\n\nexport const getOrdersByWorker = (productId) => {\n\n    return fetch(`${Config.API}/orders/products/${productId}`,\n    {\n        method: 'GET'     \n    })\n    .then(response => {\n        return response.json();\n    })\n    .catch(err => {\n        console.log(err);\n    });\n};\n\n//Orders for Admin\nexport const getOrders = () => {\n    \n    const URI = `${Config.API}/orders`;\n        \n    return fetch(URI,\n    {\n        method: 'GET'       \n    })\n    .then(response => {   \n        return response.json();\n    })\n    .catch(err => {\n        console.log(err);\n    });\n};\n\n\n\n\n\n//Orders for Owners\nexport const getOrdersByUser = (userId, token) => {\n    \n    const URI = `${Config.API}/orders/user/${userId}`;\n        \n    return fetch(URI,\n    {\n        method: 'GET',\n        headers:\n        {\n            Accept: 'application/json',\n            'x-access-token': token\n        },\n    })\n    .then(response => {   \n        return response.json();\n    })\n    .catch(err => {\n        console.log(err);\n    });\n};\n\n\nexport const getOrderItems = (orderID) => {\n    \n    const URI = `${Config.API}/orderItems/${orderID}`;\n        \n    return fetch(URI,\n    {\n        method: 'GET'       \n    })\n    .then(response => {\n        return response.json();\n    })\n    .catch(err => {\n            console.log(err);\n    });\n};\n\nexport const createOrder = (order, token) => {\n\n    return fetch(`${Config.API}/orders`,\n    {\n        method: 'POST',\n        headers:\n        {\n            Accept: 'application/json',\n            'x-access-token': token\n        },\n        body: order\n    })\n    .then(response => {\n\n        return response.json();\n    })\n    .catch(err => {\n\n        console.log(err);\n    });\n};\n\nexport const updateOrder = (orderId, order, token) => {\n\n    return fetch(`${Config.API}/orders/${orderId}`,\n    {\n        method: 'PUT',\n        headers:\n        {\n            Accept: 'application/json',\n            'x-access-token': token\n        },\n        body: order\n    })\n    .then(response => {\n\n        return response.json();\n    })\n    .catch(err => {\n\n        console.log(err);\n    });\n};\n\nexport const updateOrderStatus = (orderId, body) => {\n\n    return fetch(`${Config.API}/orders/${orderId}/status`,\n    {\n        method: 'PUT',\n        headers:\n        {\n            Accept: 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n    })\n    .then(response => {\n        return response.json();\n    })\n    .catch(err => {\n        console.log(err);\n    });\n};\n\n//Braintree\nexport const getBraintreeClientToken = () => {\n    return fetch(`${Config.API}/braintree/getToken`,\n    {\n        method: 'GET'\n    })\n    .then(response => {\n        return response.json();\n    })\n    .catch(err => {\n        console.log(err);\n    });\n};\n\nexport const processPayment = (paymentData) => {\n    return fetch(`${Config.API}/braintree/processPayment`, {\n        method: \"POST\",\n        headers:\n        {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(paymentData)\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\n//Shipping Rates\nexport const getShippingRates = (zipCode, weight) => {\n    return fetch(`${Config.API}/shipping/rates?zipCode=${zipCode}&weight=${weight}`,\n    {\n        method: 'GET'\n    })\n    .then(response => {\n        return response.json();\n    })\n    .catch(err => {\n        console.log(err);\n    });\n};","// Core Imports\nimport React, { useEffect, useState, Fragment } from 'react';\nimport imagesLoaded from 'imagesloaded';\nimport Isotope from 'isotope-layout';\nimport { NavLink } from 'react-router-dom';\nimport QRCode from 'qrcode.react';\nimport * as R from 'ramda';\n\n///For datatable\nimport DataTable from 'react-data-table-component';\nimport moment from 'moment';\nimport Alert from '../common/Alert';\n\n// Rich Text Editor\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport ReactHtmlParser from 'react-html-parser';\nimport 'react-tabs/style/react-tabs.css';\n\n\n// API Imports\nimport { getCategories, getProducts, getRatings, deleteRating, getOrdersByWorker, getProductByLogin } from '../APICalls';\n\n// Misc Imports\nimport Config from '../config';\n\n// Selector Imports\nimport { isAuthenticated } from '../auth/functions';\n\n// TODO: Explanation\nconst ShoppingSection = ({ printingTypeId }) => {\n\n    // Initial state\n    const [loading, setLoading] = useState(true);\n    const [itemsFiltered, setItemsFiltered] = useState(0);\n    const [isotope, setIsotope] = useState(null);\n    const [filterKey, setFilterKey] = useState(\"*\");\n    const [categories, setCategories] = useState('');\n    const [products, setProducts] = useState('');\n    const [productsRatings, setProductsRatings] = useState('');\n    const [ordersByWorker, setOrdersByWorker] = useState('');\n    const [selectedProduct, setSelectedProduct] = useState({});\n    const [activeIndex, setActiveIndex] = useState(\"*\");\n    const [selectedColor, setSelectedColor] = useState('');\n    const [selectedSize, setSelectedSize] = useState('');\n    let navRef = React.createRef();\n    const { user, token } = isAuthenticated();\n    ////For datatable\n \n    const [filterStatus, setFilterStatus] = useState('all');\n    const [filteredItems, setFilteredItems] = useState('');\n    const [dataTableError, setDataTableError] = useState(false);\n    const [dataTableSuccess, setDataTableSuccess] = useState(false);\n\n    const translateStatus = (status) => {\n\n        let color = '#18cc1b';\n        let translate = '';\n\n        switch(status)\n        {\n            case 'open': translate = 'Open'; break;\n            case 'pending_payment': \n                translate = 'Pending for Payment';\n                color = '#f77700';\n            break;\n            case 'completed': \n                translate = 'Completed';\n                color = '#0d7c0f';\n            break;\n            case 'canceled': \n                translate = 'Canceled';\n                color = '#e50909';\n            break;\n        }\n\n        return (\n            <div>\n                <span style={{ color: color, fontWeight: 500 }}>{translate}</span>\n            </div>\n        )\n    }\n\n    // Initial columns configuration\n    const columns = [\n        {\n            name: 'Order Number',\n            width: '220px',\n            cell: row => <div>{row._id}</div>,\n        },\n        {\n            name: 'Status',\n            selector: 'status',\n            sortable: true,\n            cell: row => translateStatus(row.status),\n        },\n        {\n            name: 'Is Paid',\n            width: '100px',\n            selector: 'is_paid',\n            sortable: true,\n            cell: row => row.is_paid ? <div>Paid</div> : <div>Not Paid</div>\n        },\n        {\n            name: 'Order Date',\n            selector: 'order_date',\n            sortable: true,\n            cell: row => <div>{moment(row.order_date).format('DD-MM-YYYY hh:mm A')}</div>\n        },\n        {\n            name: 'Order Total',\n            selector: 'order_total',\n            sortable: true,\n            cell: row => <div>${row.order_total.toFixed(2)}</div>\n        },\n        \n    ];  \n\n    // React Effects -------------------------------------------------------------------------------\n\n    \n    \n    useEffect(() => {\n    \n        if (ordersByWorker)\n        {\n            const items = ordersByWorker.filter(item => item.status === filterStatus || filterStatus === 'all');\n            setFilteredItems(items);\n        }\n\n    }, [filterStatus, ordersByWorker]);\n\n    useEffect(() => {\n\n        getCategories(printingTypeId).then(data => {\n\n            if (data.error) {\n                //setError(data.error);\n                //TODO: mostrar mensaje de error\n            }\n            else {\n                setCategories(data);\n            }\n        });\n\n        if (user && user.role == 'admin') {\n            getProducts(printingTypeId).then(data => {\n\n                if (data.error) {\n                    //setError(data.error);\n                    //TODO: mostrar mensaje de error\n                }\n                else {\n                    setProducts(data);\n                }\n            });\n        };\n        \n        if (user && user.role == 'worker') {\n           //console.log(user._id)\n            getProductByLogin(user._id).then(data => {\n\n                if (data.error) {\n                    //setError(data.error);\n                    //TODO: mostrar mensaje de error\n                }\n                else {\n                    setProducts(data);\n                }\n            });\n        };\n        if (user  == undefined) {\n            setLoading(false);\n            //TODO\n            /*getProductByLogin(owner_user_id).then(data => {\n\n                if (data.error) {\n                    //setError(data.error);\n                    //TODO: mostrar mensaje de error\n                }\n                else {\n                    setProducts(data);\n                }\n            });*/\n        };\n\n\n\n    }, [printingTypeId]);\n\n    useEffect(() => {\n\n        if (products) {\n            //Initialize isotope only if products is defined\n            setIsotope(\n                new Isotope(\".product__list\",\n                    {\n                        itemSelector: \".single__pro\",\n                        percentPosition: true,\n                        transitionDuration: '0.5s',\n                        masonry: {\n                            columnWidth: '.single__pro',\n                        }\n                    })\n            );\n        }\n\n    }, [products]);\n\n    // handling filter key change\n    useEffect(() => {\n\n        if (isotope) {\n            filterKey === \"*\" ? isotope.arrange({ filter: `*` }) : isotope.arrange({ filter: `.${filterKey}` });\n            setItemsFiltered(isotope.filteredItems.length);\n        }\n\n    }, [isotope, filterKey]);\n\n    useEffect(() => {\n        if (\n            Object.entries(selectedProduct).length === 0) {\n            return;\n        }\n\n        updateStars(selectedProduct);\n        getRatings(selectedProduct._id).then(data => {\n            if (data.error) {\n                //setError(data.error);\n                //TODO: mostrar mensaje de error\n            }\n            else {\n                setProductsRatings(data);\n            }\n        });\n        getOrdersByWorker(selectedProduct._id).then(data => {\n            if (data.error) {\n                //setError(data.error);\n                //TODO: mostrar mensaje de error\n            }\n            else {\n                console.log('selectdProduct:', selectedProduct._id,'OrdersByWorker1111:', data.orders)\n                setOrdersByWorker(data.orders);\n            }\n        });\n\n\n    }, [selectedProduct]);\n\n    // END React Effects ---------------------------------------------------------------------------\n\n    // Methods -------------------------------------------------------------------------------------\n\n    imagesLoaded('.product__list', function () {\n        if (isotope) {\n            isotope.layout();\n            setLoading(false);\n        }\n    });\n\n\n    // END Methods ---------------------------------------------------------------------------------\n\n    // Events -------------------------------------------------------------------------------------- \n\n    const removeReview = (rating) => {\n\n        deleteRating(token, rating.product, rating.user._id).then(data => {\n            console.log('removed DATA', data)\n            if (data.error) {\n                //setError(data.error);\n                //TODO: mostrar mensaje de error\n            }\n            else {\n                getRatings(selectedProduct._id).then(data => {\n                    if (data.error) {\n                        //setError(data.error);\n                        //TODO: mostrar mensaje de error\n                    }\n                    else {\n                        setProductsRatings(data);\n                    }\n                });\n            }\n        });\n    }\n\n    const updateStars = (selectedProduct) => {\n        let rateAverage = Math.floor(selectedProduct.rateValue / selectedProduct.rateCount);\n        let diffRateAverage = 5 - rateAverage;\n        selectedProduct.starArray = [];\n        selectedProduct.diffStarArray = [];\n\n        for (let index = 0; index < rateAverage; index++) {\n            selectedProduct.starArray.push(index);\n        }\n\n        for (let index = 0; index < diffRateAverage; index++) {\n            selectedProduct.diffStarArray.push(index);\n        }\n    }\n\n    // END Events ----------------------------------------------------------------------------------\n\n    /// Render Methods ---------------------------------------------------------------------------\n\n    const renderStar = (ratings) => {\n\n        if (!ratings || ratings.rating == 0) return;\n\n        let rateAverage = Math.floor(ratings.rating);\n        let diffRateAverage = 5 - rateAverage\n        ratings.starArray = [];\n        ratings.diffStarArray = [];\n\n        for (let index = 0; index < rateAverage; index++) {\n            ratings.starArray.push(index);\n        }\n\n        for (let index = 0; index < diffRateAverage; index++) {\n            ratings.diffStarArray.push(index);\n        }\n\n        return (\n            <span>\n                {ratings && ratings.starArray.map(star => {\n                    return (\n                        <li><span className=\"zmdi zmdi-star\" style={{ color: '#f8cd35' }}></span></li>\n\n                    )\n                })}\n                {ratings && ratings.diffStarArray.map(star => {\n                    return (\n                        <li><span className=\"ti-star\" style={{ color: '#f8cd35' }}></span></li>\n                    )\n                })}\n            </span>\n        )\n    }\n\n    const actionsBtns = row => (\n        <>\n            <button \n                type=\"button\"\n                title=\"View Details\"\n                className=\"btn btn-default btn-sm btn-icon\" \n                data-toggle=\"modal\" \n                data-target=\"#orderSelectedModal\"\n                aria-label=\"view\" \n                \n            >\n                <span className=\"glyphicon glyphicon-eye-open\" aria-hidden=\"true\"></span>\n            </button>\n            &nbsp;&nbsp;\n            <button \n                type=\"button\"\n                title=\"Change Status\"\n                className=\"btn btn-default btn-sm btn-icon\" \n                data-toggle=\"modal\" \n                data-target=\"#categoryModal\"\n                aria-label=\"edit\"\n                \n            >\n                <span className=\"glyphicon glyphicon-tag\" aria-hidden=\"true\"></span>\n            </button>\n        </>\n    );\n\n    const FilterComponent = () => (\n        <>\n            <div className=\"input-group\">\n                <label for=\"filterByStatus\">Filter by Status: </label>\n                <select name=\"filterByStatus\" className=\"form-control\" defaultValue={filterStatus} onChange={e => setFilterStatus(e.target.value)}>\n                    <option value='all'>All</option>\n                    <option value='pending_payment'>Pending for Payment</option>\n                    <option value='open'>Open</option>\n                    <option value='completed'>Completed</option>\n                    <option value='canceled'>Canceled</option>\n                </select>\n            </div>\n        </>\n    );\n\n    // End Render Methods  ----------------------------------------------------------------------\n\n    // Main Render\n    return (\n        <Fragment>\n            <section className=\"htc__product__area shop__page bg__white\">\n                <div className=\"container\">\n                    <div className=\"htc__product__container\">\n                        <div className=\"row\">\n                            <div className=\"product__menu gutter-btn text-center\">\n                                <button\n                                    className={activeIndex === \"*\" ? \"is-checked\" : null}\n                                    onClick={() => {\n                                        setFilterKey(\"*\");\n                                        setActiveIndex(\"*\");\n                                    }}\n                                >\n                                    All\n                                </button>\n                                {categories && categories.map((category, i) => (\n                                    <button\n                                        key={i}\n                                        className={activeIndex === i ? \"is-checked\" : null}\n                                        onClick={() => {\n                                            setFilterKey(category.name.replace(/\\s/g, \"\"));\n                                            setActiveIndex(i);\n                                        }}\n                                    >\n                                        {category.name}\n                                    </button>\n                                ))}\n                            </div>\n                        </div>\n\n                        <div className=\"row product__list another-product-style\">\n                            {loading ?\n                                (<div className=\"row mt--60 text-center\">\n                                    <img src={window.location.origin + \"/images/icons/ajax-loader.gif\"} alt=\"loading\" />\n                                </div>) : \"\"\n                            }\n\n                            {isotope && itemsFiltered === 0 ?\n                                (<div className=\"row mt--60 mb--60 text-center\">\n                                    <span>No products to show in this category</span>\n                                </div>) : \"\"\n                            }\n\n                            {products &&\n                                products.map((product, i) => (\n                                    <div key={i} className={`${product.category.name.replace(/\\s/g, \"\")} single__pro col-lg-4 col-xl-4 col-md-4 col-sm-6 col-12`} >\n                                        <div className=\"product\" style={{ marginTop: 25 }}>\n                                            <div className=\"product__inner\">\n                                                <div className=\"pro__thumb\">\n                                                    <a\n                                                        href=\"#!\"\n                                                        data-toggle=\"modal\"\n                                                        data-target=\"#productModal\"\n                                                        className=\"text-center\"\n                                                        onClick={() => {\n                                                            setSelectedProduct(product);\n                                                        }}\n                                                    >\n                                                        <img\n                                                            src={`${Config.API}/${product.imageURL}`}\n                                                            onError={(e) => {\n                                                                e.target.onerror = null;\n                                                                //e.target.src=\"images/product/1.png\"\n                                                            }}\n                                                            alt=\"Product Image\"\n                                                            style={{ maxHeight: '120px', maxWidth: '120px', height: '100px', width: '100px' }}\n                                                        />\n                                                    </a>\n                                                </div>\n                                            </div>\n                                            <div className=\"product__details\" style={{ paddingTop: 5 }}>\n                                                <h2 style={{ fontSize: 16 }}>\n                                                    <a href=\"#!\" data-toggle=\"modal\" data-target=\"#productModal\">{product.name}</a>\n                                                </h2>\n\n                                            </div>\n                                        </div>\n                                    </div>\n                                )\n                                )}\n\n                        </div>\n\n                        <div className=\"row mt--60\">\n\n                        </div>\n\n                    </div>\n                </div>\n            </section>\n\n            <div id=\"quickview-wrapper\">\n\n                <div className=\"modal fade\" id=\"productModal\" tabIndex=\"-1\" role=\"dialog\">\n                    <div className=\"modal-dialog modal__container\" role=\"document\">\n                        <div className=\"modal-content\">\n                            <div className=\"modal-header\">\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\n                                <h4 className=\"modal-title\" id=\"myModalLabel\">Product Information</h4>\n                            </div>\n                            <div className=\"modal-body\">\n                                <div className=\"modal-product\">\n\n                                    <div className=\"product-images\">\n                                        <img\n                                            src={`${Config.API}/${selectedProduct.imageURL}`}\n                                            onError={(e) => {\n                                                e.target.onerror = null;\n                                                //e.target.src=\"images/product/1.png\"\n                                            }}\n                                            alt=\"Product Image\"\n                                            style={{ maxHeight: '300px', maxWidth: '300px' }}\n                                        />\n                                        <QRCode value={`http://52.90.192.153//checkout?worker=${selectedProduct._id}`} size=\"79\" />\n                                    </div>\n\n                                    <div className=\"product-info\">\n                                        <h1>{selectedProduct.name}</h1>\n                                        <div className=\"rating__and__review\">\n                                            {selectedProduct.rateCount > 0 &&\n                                                <ul className=\"rating\">\n                                                    {selectedProduct.starArray &&\n                                                        selectedProduct.starArray.map((product, i) => (\n                                                            <li><span className=\"zmdi zmdi-star\" style={{ color: '#f8cd35' }}></span></li>\n                                                        ))}\n                                                    {selectedProduct.diffStarArray &&\n                                                        selectedProduct.diffStarArray.map((product, i) => (\n                                                            <li><span className=\"ti-star\" style={{ color: '#f8cd35' }}></span></li>\n                                                        ))}\n                                                </ul>\n                                            }\n                                            <div className=\"reviews\">\n                                                {selectedProduct.rateCount} customer reviews\n                                            </div>\n                                        </div>\n                                        <div className=\"s-price-box\">\n                                            Category\n                                            <div><b>\n                                                {selectedProduct.category &&\n                                                    selectedProduct.category.name\n                                                }\n                                            </b> </div>\n                                        </div>\n\n\n                                        {/*<div className=\"start-designing-btn\">\n                                            <a\n                                                href='#!'\n                                                data-dismiss=\"modal\"\n                                            //onClick={() => navRef.current.click() }\n                                            >\n                                                {selectedProduct && selectedProduct.category && selectedProduct.category.printingType._id == '606dd5141d92c0793269d682' ? 'View Designing' : 'Print QR'}\n                                            </a>\n                                        </div>\n\n                                        <div className=\"start-designing-btn\">\n                                            <a\n                                                href='#!'\n                                                data-dismiss=\"modal\"\n                                            //onClick={() => navRef.current.click() }\n                                            >\n                                                {selectedProduct && selectedProduct.category && selectedProduct.category.printingType._id == '606dd5141d92c0793269d682' ? 'View Designing' : 'Add Tip'}\n                                            </a>\n                                            </div>*/}\n                                        <NavLink\n                                            ref={navRef}\n                                            to={{\n                                                pathname: `/design/${selectedProduct._id}`,\n                                                state: { selectedColor: selectedColor, selectedSize: selectedSize, selectedProduct: selectedProduct, simom: 123 }\n                                            }}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"wrapper\" style={{ marginTop: '4%' }}>\n                                <div className=\"container\">\n                                    <div className=\"row\">\n                                        <div className=\"col-md-12\" style={{ overflow: 'hidden', marginTop: '20px', width: '96.3%' }}>\n                                            <Tabs>\n                                                <TabList>\n                                                    <Tab>Description</Tab>\n                                                    <Tab>Reviews</Tab>\n                                                    <Tab>My Tip History</Tab>\n                                                </TabList>\n                                                <TabPanel className=\"ck-editor\">\n                                                    <div className=\"wrapper\" style={{ marginTop: '0%' }}>\n                                                        <div className=\"container\">\n                                                            <div className=\"row\">\n                                                                <div className=\"col-md-12\" style={{ minHeight: '25px', marginLeft: '5px', marginBottom: '30px', width: '92%', overflow: 'auto' }}>\n                                                                    {selectedProduct.descr ? ReactHtmlParser(selectedProduct.descr) : 'There is no description to display'}\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </TabPanel>\n                                                <TabPanel>\n                                                    <div className=\"wrapper\" style={{ marginTop: '0%' }}>\n                                                        <div className=\"container\">\n                                                            <div className=\"row\">\n                                                                <div className=\"col-md-12\" style={{ minHeight: '25px', overflow: 'auto', marginLeft: '5px', marginRight: '20px', width: '92%' }}>\n                                                                    {productsRatings && productsRatings.length === 0 &&\n                                                                        <div style={{ marginBottom: '30px' }}>\n                                                                            There is no reviews to display\n                                                                        </div>\n                                                                    }\n                                                                    {productsRatings &&\n                                                                        productsRatings.map((ratings, i) => (\n                                                                            <div key={i} className=\"testimonial-3-wrapper mb--30\">\n                                                                                <div className=\"testimonial-3-content\">\n                                                                                    <div className=\"testimonial-3-name\">\n                                                                                        <div>\n                                                                                            {console.log('RATINGS//////',ratings)}\n                                                                                            <span style={{ fontSize: 22, fontWeight: 600, marginBottom: '5px', textTransform: 'capitalize', color: '#5c5c5c' }}>{ratings.user ? ratings.user.name : ''}</span>\n                                                                                            {user && user.role == 'admin' &&\n                                                                                                <button\n                                                                                                    type=\"button\"\n                                                                                                    className=\"close\"\n                                                                                                    aria-label=\"Close\"\n                                                                                                    onClick={() => removeReview(ratings)}\n                                                                                                >\n                                                                                                    <span aria-hidden=\"true\">&times;</span>\n                                                                                                </button>\n                                                                                            }\n                                                                                        </div>\n                                                                                        <div className=\"rating__and__review\">\n                                                                                            <ul className=\"rating\">\n                                                                                                {renderStar(ratings)}\n                                                                                            </ul>\n                                                                                        </div>\n                                                                                    </div>\n                                                                                    <p style={{ color: '#8f8f8f', fontSize: '15px', fontWeight: 400, marginBottom: '0px' }}>\n\n                                                                                        <div>\n                                                                                            {ratings.review[0].dish == 1 &&\n                                                                                                <span class=\"col-xg-1 col-md-1 col-xs-3\" >\n                                                                                                    <img\n\n                                                                                                        src={window.location.origin + \"/images/logo/dish_inactive.png\"}\n                                                                                                        alt=\"logo\" style={{ height: \"30px\", maxHeight: \"100%\" }}\n                                                                                                    />\n                                                                                                    <span>Dish</span>\n                                                                                                </span>\n                                                                                            }\n                                                                                            {ratings.review[0].atmosphere == 1 &&\n                                                                                                <span class=\"col-xg-1 col-md-1 col-xs-3\" >\n                                                                                                    <img\n\n                                                                                                        src={window.location.origin + \"/images/logo/atmosphere_inactive.png\"}\n                                                                                                        alt=\"logo\" style={{ height: \"30px\", maxHeight: \"100%\" }}\n                                                                                                    />\n                                                                                                    <span>Atmos</span>\n                                                                                                </span>\n                                                                                            }\n                                                                                            {ratings.review[0].tasty == 1 &&\n                                                                                                <span class=\"col-xg-1 col-md-1 col-xs-3\" >\n                                                                                                    <img\n\n                                                                                                        src={window.location.origin + \"/images/logo/tasty_inactive.png\"}\n                                                                                                        alt=\"logo\" style={{ height: \"30px\", maxHeight: \"100%\" }}\n                                                                                                    />\n                                                                                                    <span>Tasty</span>\n                                                                                                </span>\n                                                                                            }\n                                                                                            {ratings.review[0].goodService == 1 &&\n                                                                                                <span class=\"col-xg-1 col-md-1 col-xs-3\" >\n                                                                                                    <img\n\n                                                                                                        src={window.location.origin + \"/images/logo/service_inactive.png\"} alt=\"logo\"\n                                                                                                        style={{ height: \"30px\", maxHeight: \"100%\" }}\n                                                                                                    />\n                                                                                                    <span>Good</span>\n                                                                                                </span>\n                                                                                            }\n                                                                                            <span>&nbsp;</span>\n                                                                                        </div>\n\n\n                                                                                    </p>\n                                                                                </div>\n                                                                            </div>\n                                                                        ))}\n                                                                </div>\n                                                            </div>\n                                                        </div>\n\n                                                    </div>\n                                                </TabPanel>\n                                                <TabPanel className=\"ck-editor\">\n                                                    <div className=\"wrapper\" style={{ marginTop: '0%' }}>\n                                                        <div className=\"container\">\n                                                            <div className=\"row\">\n                                                                <div className=\"col-md-12\" style={{ minHeight: '25px', marginLeft: '5px', marginBottom: '30px', width: '92%', overflow: 'auto' }}>\n                                                                    {ordersByWorker == '' &&\n                                                                        <div style={{ marginBottom: '30px' }}>\n                                                                            There is no reviews to display\n                                                                        </div>\n                                                                    }\n                                                                    {console.log('ordersByWorkers:::',ordersByWorker.length)}\n                                                                    {console.log('ordersByWorkers:::',ordersByWorker)}\n                                                                    {}\n                                                                    {ordersByWorker !== '' &&\n                                                                        \n                                                                            \n                                                                            <div  className=\"testimonial-3-wrapper mb--30\">\n                                                                                <div className=\"testimonial-3-content\">\n                                                                                    \n\n                                                                                <div className=\"row\">   \n                                                                                    <Alert \n                                                                                        error = {dataTableError}\n                                                                                        success = {dataTableSuccess}\n                                                                                        onError = {(value) => {setDataTableError(value)}}\n                                                                                        onSuccess = {(value) => {setDataTableSuccess(value)}}\n                                                                                    />\n                                                                                </div>\n                                                                                <DataTable\n                                                                                    columns={columns}\n                                                                                    data={filteredItems}\n                                                                                    pagination\n                                                                                    highlightOnHover\n                                                                                    pointerOnHover\n                                                                                    subHeader\n                                                                                    subHeaderComponent={[FilterComponent()]}\n                                                                                />\n\n\n\n\n\n                                                                                    \n                                                                                </div>\n                                                                            </div>\n                                                                        }\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </TabPanel>\n\n                                            </Tabs>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default ShoppingSection;\n","// Core Imports\nimport React from 'react';\n\n// Custom Component Imports\nimport ShoppingSection from './ShoppingSection';\nimport Layout from './Layout';\n\n// TODO: Explanation\nconst Traditional = () => {\n\n    // TODO: Is it printingTypeId hard-coded?\n    return (\n        <Layout \n            title=\"Workers Printing Page\"\n            description=\"Ecommerce\"\n            showBreadcrumb={false}\n        >\n            <ShoppingSection printingTypeId='5ee5a2c62055cc54dc5ecf4a' />\n        </Layout>\n    );\n};\n\nexport default Traditional;","// Core Imports\nimport React from 'react';\n\n// Custom Component Imports\nimport ShoppingSection from './ShoppingSection';\nimport Layout from './Layout';\n\n// TODO: Explanation\nconst Embroidery = () => {\n\n    // TODO: Is it printingTypeId hard-coded?\n    return (\n        <Layout \n            title=\"Screen Printing Page\"\n            description=\"Ecommerce\"\n            showBreadcrumb={false}\n        >\n            <ShoppingSection printingTypeId='5ee5a2ee2055cc54dc5ecf4b' />\n        </Layout>\n    );\n};\n\nexport default Embroidery;","// Core Imports\nimport React from 'react';\n\n// Custom Component Imports\nimport ShoppingSection from './ShoppingSection';\nimport Layout from './Layout';\n\n// TODO: Explanation\nconst Embroidery = () => {\n\n    // TODO: Is it printingTypeId hard-coded?\n    return (\n        <Layout \n            title=\"Screen Printing Page\"\n            description=\"Ecommerce\"\n            showBreadcrumb={false}\n        >\n            <ShoppingSection printingTypeId='5ee5a2f62055cc54dc5ecf4c' />\n        </Layout>\n    );\n};\n\nexport default Embroidery;","// Core Imports\nimport React from 'react';\n\n// Custom Component Imports\nimport ShoppingSection from './ShoppingSection';\nimport Layout from './Layout';\n\n// TODO: Explanation\nconst Embroidery = () => {\n\n    // TODO: Is it printingTypeId hard-coded?\n    return (\n        <Layout \n            title=\"Screen Printing Page\"\n            description=\"Ecommerce\"\n            showBreadcrumb={false}\n        >\n            <ShoppingSection printingTypeId='5ee5a3002055cc54dc5ecf4d' />\n        </Layout>\n    );\n};\n\nexport default Embroidery;","// Core Imports\nimport React from \"react\";\n\n// Custom Component Imports\nimport ShoppingSection from './ShoppingSection';\nimport Layout from './Layout';\n\n// TODO: Explanation\nconst Embroidery = () => {\n\n    // TODO: Is it printingTypeId hard-coded?\n    return (\n        <Layout \n            title=\"Screen Printing Page\"\n            description=\"Ecommerce\"\n            showBreadcrumb={false}\n        >\n            <ShoppingSection printingTypeId='5ee5a3132055cc54dc5ecf4e' />\n        </Layout>\n    );\n};\n\nexport default Embroidery;","// Core Imports\nimport React from 'react';\n\n// Custom Component Imports\nimport ShoppingSection from './ShoppingSection';\nimport Layout from './Layout';\n\n// TODO: Explanation\nconst Embroidery = () => {\n\n    // TODO: Is it printingTypeId hard-coded?\n    return (\n        <Layout \n            title=\"Screen Printing Page\"\n            description=\"Ecommerce\"\n            showBreadcrumb={false}\n        >\n            <ShoppingSection printingTypeId='606dd5141d92c0793269d682' />\n        </Layout>\n    );\n};\n\nexport default Embroidery;","// Core Imports\nimport React, { useState, useCallback, useEffect }   from 'react';\nimport { useIndexedDB } from 'react-indexed-db';\nimport { useParams } from 'react-router-dom';\nimport Iframe from 'react-iframe';\nimport { v4 as uuidv4 } from 'uuid';\n\n// Custom Component Imports\nimport Layout from '../core/Layout';\n\n// Misc Imports\nimport Config from '../config'\n\n// TODO: Explanation\nconst Design = (params) => {\n    // Initial state\n    const [showError, setShowError] = useState(false);\n    const [errorMsg, setErrorMsg] = useState('');\n    const { add, getByID, update } = useIndexedDB('cart');\n    let { productId, editProductId,  printingType} = useParams();\n\n    // Events --------------------------------------------------------------------------------------\n\n    // This receives the product from the iframe\n    const onMessageReceived = useCallback(event => {\n\n        if (event.origin !== Config.BASE_FPD_URL) return;\n\n        if (event && event.data)\n        {\n            // If a product is going to be edited, the object must be sent to FPD iframe to be able \n            // to load it and show all the layers.\n            if (event.data === \"editProduct\")\n            {\n                getProductByID(event);\n            }\n            else\n            {\n                let productWithImage = JSON.parse(event.data);\n\n                if (productWithImage.isEditing \n                    && productWithImage.isEditing === true \n                    && editProductId)\n                {\n                    updateProduct(productWithImage);\n                }\n                else\n                {\n                    insertProduct(productWithImage);\n                }\n            }\n        }\n\n    }, []);\n\n    // END Events ----------------------------------------------------------------------------------\n\n    // React Effects -------------------------------------------------------------------------------\n\n    useEffect(() => {\n\n        window.addEventListener(\"message\", onMessageReceived);\n        return () => window.removeEventListener(\"message\", onMessageReceived);\n\n    }, [onMessageReceived]);\n\n    // END React Effects ---------------------------------------------------------------------------\n\n    // Methods -------------------------------------------------------------------------------------\n\n    // Get the product to be edited in the FPD plugin. It is returned using postMessage.\n    const getProductByID = (event) => {\n\n        if (editProductId)\n        {\n            // Retrieve the product from the local database\n            getByID(editProductId).then(\n                \n                // Accept\n                row => {\n\n                    if (row === null || row === undefined || row.product === undefined || row.product === null)\n                    {\n                        setShowError(true);\n                        setErrorMsg('The product that you are trying to edit was not found.');\n                    }\n                    else\n                    {\n                        event.source.postMessage(JSON.stringify(row.product), event.origin);\n                    }\n                },\n\n                // Reject\n                error => {\n\n                    // TODO: Maybe, if there is a server-side persisting of the cart,\n                    // retrive it and update the local storage? This must be confirmed.\n                    setShowError(true);\n                    setErrorMsg('Something went wrong. Please, try again.');\n                    console.log(error);\n                }\n            );\n        }\n    }\n\n    // Update the product by ID and the changes are reflected in the cart.\n    const updateProduct = (productWithImage) => {\n\n        if (editProductId)\n        {\n            getByID(editProductId).then(\n                        \n                // Accept\n                row => {\n\n                    if (row === null || row === undefined || row.product === undefined || row.product === null)\n                    {\n                        setShowError(true);\n                        setErrorMsg('The product that you are trying to edit was not found.');\n                    }\n                    else\n                    {\n                        let rowToUpdate = {\n                            id: row.id,\n                            guid: uuidv4(),\n                            name: row.name,\n                            size: row.size,\n                            productType: row.productType,\n                            price: row.price,\n                            qty: row.qty,\n                            weight: row.weight,\n                            description: row.description,\n                            image: productWithImage.image,\n                            product: productWithImage.product\n                        }\n                        \n                        update(rowToUpdate).then(\n\n                            // Accept\n                            () => {\n                                console.log('Design Updated successfully!.');\n                                localStorage.setItem('cartLastUpdate', Date.now());\n                            },\n\n                            // Reject\n                            error => {\n\n                                // TODO: Maybe, if there is a server-side persisting of the cart,\n                                // retrive it and update the local storage? This must be confirmed.\n                                setShowError(true);\n                                setErrorMsg('Something went wrong. Please, try again.');\n                                console.log(error);\n                            }\n                        );\n                    }\n                },\n\n                // Reject\n                error => {\n\n                    // TODO: Maybe, if there is a server-side persisting of the cart,\n                    // retrive it and update the local storage? This must be confirmed.\n                    setShowError(true);\n                    setErrorMsg('Something went wrong. Please, try again.');\n                    console.log(error);\n                }\n            );\n        }\n    }\n\n    // Insert the product to the cart.\n    const insertProduct = (productWithImage) => {\n\n        let selectedSize = '';\n        let productName = '';\n        let productPrice = 0;\n        let productWeight = 0;\n        let productDesc = '';\n        let productColor = '';\n        let availableSizes = {};\n        let category = '';\n\n        if (params && params.location && params.location.state && params.location.state.selectedProduct)\n        {\n            selectedSize = params.location.state.selectedSize;\n            productName = params.location.state.selectedProduct.name;\n            productPrice = params.location.state.selectedProduct.price;\n            productWeight = params.location.state.selectedProduct.weight;\n            productDesc = params.location.state.selectedProduct.descr;\n            availableSizes = params.location.state.selectedProduct.sizeList;\n            productColor = params.location.state.selectedColor;\n            category = params.location.state.selectedProduct.category;\n        }\n\n        let row = {\n            guid: uuidv4(),\n            name: productName,\n            price: productPrice,\n            productType: productId,\n            qty: 1,\n            weight: productWeight,\n            size: selectedSize,\n            description: productDesc,\n            image: productWithImage.image,\n            product: productWithImage.product,\n            color: productColor,\n            category: category,\n            availableSizes: availableSizes,\n        }\n\n        // TODO: If user is logged, send this information to the cloud\n\n        add(row).then(\n\n            // Accept\n            event => {\n                console.log('Product added to the cart! ' + event);\n                localStorage.setItem('cartLastUpdate', Date.now());\n            },\n\n            // Reject\n            error => {\n                // TODO: Maybe, if there is a server-side persisting of the cart,\n                // retrive it and update the local storage? This must be confirmed.\n                setShowError(true);\n                setErrorMsg('Something went wrong. Please, try again.');\n                console.log(error);\n            }\n        );\n    }\n\n    // END Methods ---------------------------------------------------------------------------------\n\n    // Render Methods ------------------------------------------------------------------------------\n\n    const renderContent = () => {\n\n        let isMerchandise = params && \n        params.location && \n        params.location.state && \n        params.location.state.selectedProduct && \n        params.location.state.selectedProduct.category &&\n        params.location.state.selectedProduct.category.printingType._id == '606dd5141d92c0793269d682' ? true : false;\n\n        isMerchandise = printingType && printingType == '606dd5141d92c0793269d682' ? true : isMerchandise;\n\n        let selectedColor = 'default';\n\n        if (params && params.location && params.location.state && params.location.state.selectedColor)\n        {\n            selectedColor = params.location.state.selectedColor;\n        }\n\n        if (showError === false)\n        {\n            return (\n                <div className=\"container\">\n                    <Iframe \n                        url={Config.FPD_URL+`${isMerchandise ? 'm/' : '/'}`+`${editProductId ? 1 : 0}/${productId}/${selectedColor}`}\n                        styles={{border:\"none\", height:\"600px\"}}\n                        width=\"100%\"\n                        height=\"800px\"\n                        frameBorder=\"0\"\n                        id=\"myId\"\n                        className=\"myClassname\"\n                        allowFullScreen={true}\n                        display=\"initial\"\n                        position=\"relative\"\n                    />\n                </div>\n            )\n        }\n        else\n        {\n            return (\n                <div className=\"htc__login__register bg__white ptb--90\" >\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-xs-12\">\n                                <div className=\"bradcaump__inner text-center\">\n                                    <h2>{errorMsg}</h2>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n    }\n\n    // END Render Methods --------------------------------------------------------------------------\n\n    // Main Render\n    return (\n        <Layout \n            title = \"Screen Printing Page\"\n            description = \"Ecommerce\"\n            showBreadcrumb = {false}\n        >\n            {renderContent()}\n        </Layout>\n    );\n};\n\nexport default Design;","// Core Imports\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\n// Function Imports\nimport { isAuthenticated } from \"./functions\";\n\n//Validate restriction to admin and customer private sections\nconst PrivateRoute = ({ component: Component, adminRole, ...rest}) => (\n    <Route\n        {...rest}\n        render={ props => \n            isAuthenticated() && ((adminRole && isAuthenticated().user.role === \"admin\") || !adminRole) ? (\n                <Component {...props} />\n            ) : (\n                <Redirect\n                    to = {{\n                        pathname: \"/auth\",\n                        state: { from: props.location }\n                    }}\n                />\n            )\n        }\n    />\n);\n\nexport default PrivateRoute;","// Core Imports\nimport React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\n\nconst isActive = (history, path) => {\n\n    if (history.location.pathname === path) {\n        return \"active\";\n    }\n    else {\n        return \"\";\n    }\n}\n\n// TODO: Explanation\nconst Sidebaruser2 = ({ history }) => {\n\n    // Main render\n    return (\n\n\n        <section className=\"htc__product__area shop__page bg__white\">\n            <div className=\"container\">\n                <div className=\"htc__product__container\">\n                    <div className=\"row\">\n                        <div className=\"product__menu gutter-btn text-center\">\n                            <span\n                                className=\"is-checked\"\n\n                            >\n                                <Link className={isActive(history, \"/admin/dashboard/user-information\")} to=\"/admin/dashboard/user-information\">USER INFORMATION</Link>\n                            </span>\n                            \n\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section >\n    );\n};\n\nexport default withRouter(Sidebaruser2);\n\n\n\n\n\n\n\n\n\n","// Core Imports\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\n// Custom Component Imports\nimport Layout from '../core/Layout';\n//import OrderDataTable from './orders/OrderDataTable';\n\n// Function Imports\nimport { authenticate, isAuthenticated, signout } from '../auth/functions';\n\n// API Impports\nimport { updateUser, getUser } from '../APICalls';\n\nimport Sidebaruser2 from \"../../src/admin/Sidebaruser2\";\n\n// TODO: Delete?\n//import { useHistory } from \"react-router-dom\";\n//import { getPurchaseHistory } from \"./apiUser\";\n//import moment from \"moment\";\n\n// TODO: Explanation\nconst Dashboard = ({history}) => {\n\n    // Initial state\n    const {user, token} = isAuthenticated();\n    const [email, setEmail] = useState(user.email);\n    const [name, setName] = useState(user.name);\n    const [phoneNumber, setPhoneNumber] = useState(user.phoneNumber);\n    const [error, setError] = useState(false);\n    const [success, setSuccess] = useState(false);\n    const [errorShiping, setErrorShipping] = useState(false);\n    const [successShipping, setSuccessShipping] = useState(false);\n    const [street, setStreet] = useState('');\n    const [suite, setSuite] = useState('');\n    const [city, setCity] = useState('');\n    const [postalCode, setPostalCode] = useState('');\n    const [country, setCountry] = useState(0);\n    const [state, setState] = useState(0);\n\n    // React Effects -------------------------------------------------------------------------------\n\n    useEffect(() => {\n        getUser(user._id, token).then(data => {\n\n            if (data.error)\n            {\n                setError(data.error);\n            }\n            else\n            {\n                data.street && setStreet(data.street);\n                data.suite && setSuite(data.suite);\n                data.city && setCity(data.city);\n                data.postalCode && setPostalCode(data.postalCode);\n                data.country && setCountry(data.country);\n                data.state&& setState(data.state);\n                localStorage.setItem('currentUser', JSON.stringify(data));\n                setPhoneNumber(data.phoneNumber !== '' ? data.phoneNumber : user.phoneNumber)\n            }\n        });\n\n    }, [user, token]);\n\n    useEffect(() => {\n\n        setError(false);\n        setSuccess(false);\n\n    },[name, phoneNumber]);\n\n    useEffect(() => {\n\n        setErrorShipping(false);\n        setSuccessShipping(false);\n\n    },[street, suite, city, postalCode, country, state]);\n    \n    // END React Effects ---------------------------------------------------------------------------\n\n    // Events --------------------------------------------------------------------------------------\n\n    const closeAlert = e => {\n\n        e.preventDefault();\n        setError(false);\n        setSuccess(false);\n    }\n\n    const clickSignout = event => {\n\n        event.preventDefault();\n        localStorage.removeItem('currentUser');\n        signout(() => history.push(\"/\"));\n    };\n\n    const clickUpdate = e => {\n\n        e.preventDefault();\n\n        if (!name)\n        {\n            setError(\"User Name can't be empty\");\n            return;\n        }\n\n        // make request to api to update user\n        updateUser(user._id, token, { name, phoneNumber }).then(data => {\n\n            if (data.error)\n            {\n                setError(data.error.description);\n            }\n            else\n            {\n                authenticate({user: {...data}}, () => {\n                    setSuccess(\"User Updated\");\n                });\n            }\n        });\n    };\n\n    const clickUpdateShippingAddress = e => {\n\n        e.preventDefault();\n\n        // make request to api to update user\n        updateUser(user._id, token, { name, street, suite, city, postalCode, country, state }).then(data => {\n\n            if (data.error)\n            {\n                setErrorShipping(data.error.description);\n            }\n            else\n            {\n                setSuccessShipping(\"Shipping Address Updated\");\n            }\n        });\n    };\n\n    const isActive = (history, path) => {\n\n        if (history.location.pathname === path)\n        {\n            return \"active\";\n        }\n        else\n        {\n            return \"\";  \n        }\n    }\n\n    // END Events ----------------------------------------------------------------------------------\n\n    // Render Methods ------------------------------------------------------------------------------\n\n    const alertError = (error) => (\n        <div className=\"alert alert-danger col-xs-12 col-sm-offset-3 col-sm-6 col-lg-offset-3 col-lg-6\" style={{ display: error ? '' : 'none' }}>\n            {error}\n            <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={closeAlert}>\n                <span aria-hidden=\"true\">&times;</span>\n            </button>\n        </div>\n    );\n\n    const alertSuccess = (success) => (\n        <div className=\"alert alert-info col-xs-12 col-sm-offset-3 col-sm-6 col-lg-offset-3 col-lg-6\" style={{ display: success ? '' : 'none' }}>\n            <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={closeAlert}>\n                <span aria-hidden=\"true\">&times;</span>\n            </button>\n            {success}\n        </div>\n    );\n\n    // TODO: Move states to a constant\n    const userInfo = () => {\n        return (\n            <div className=\"container ptb--40\">\n                <div className=\"row\">\n                    {alertSuccess(success)}\n                    {alertError(error)}\n                </div>\n                <div className=\"row\">\n                <Sidebaruser2/>\n                <div><br></br></div>\n                    <div className=\"col-md-8 col-lg-8\">\n                        <div className=\"ckeckout-left-sidebar\">\n                            <div className=\"row\">\n                                <div className=\"checkout-form\">\n                                    <div className=\"col-xs-12 pb--20\">\n                                        <h2 className=\"pasadena-section-title-3\">User Information</h2>\n                                    </div>\n                                    <div className=\"pasadena-checkout-form-inner\">\n                                        <div className=\"pasadena-single-box\">\n                                            <div className=\"form-row\">\n                                                <div className=\"form-group col-xs-12 col-sm-6 col-lg-6\">\n                                                    <label htmlFor=\"name\" className=\"normal-label\">Name</label>\n                                                    <input \n                                                        type=\"text\" \n                                                        className=\"form-control \" \n                                                        id=\"name\" \n                                                        placeholder=\"Enter your name\" \n                                                        onChange={e => {\n                                                            setName(e.target.value);\n                                                        }}\n                                                        value={name}\n                                                        disabled\n                                                    />\n                                                </div>\n                                                <div className=\"form-group col-xs-12 col-sm-6 col-lg-6\">\n                                                    <label htmlFor=\"email\" className=\"normal-label\">Email</label>\n                                                    <input \n                                                        disabled=\"disabled\"\n                                                        type=\"email\" \n                                                        className=\"form-control \" \n                                                        id=\"email\" \n                                                        placeholder=\"Enter your email\" \n                                                        //onChange={handleChange('email')}\n                                                        value={email}\n                                                        disabled\n                                                    />\n                                                </div>\n                                            </div>\n                                            <div className=\"form-row\">\n                                                <div className=\"form-group col-xs-12 col-sm-6 col-lg-6\">\n                                                    <label htmlFor=\"phone_number\" className=\"normal-label\">Phone Number</label>\n                                                    <input \n                                                        type=\"text\" \n                                                        className=\"form-control \" \n                                                        id=\"phone_number\" \n                                                        placeholder=\"Enter your phone number\" \n                                                        onChange={e => {\n                                                            setPhoneNumber(e.target.value);\n                                                        }}\n                                                        value={phoneNumber}\n                                                    />\n                                                </div>\n                                                \n                                            </div>\n                                        </div>\n                                    \n                                    </div>\n                                </div>\n                            </div>\n                            \n                            <div className=\"row\">\n                                <div className=\"col-xs-6 col-sm-6 col-lg-6\">\n                                    <button type=\"button\" className=\"btn btn-danger\" onClick={clickSignout}>Signout</button>\n                                </div>\n                                <div className=\"col-xs-6 col-sm-6 col-lg-6 text-right\">\n                                    <button type=\"button\" className=\"btn btn-dark\" onClick={clickUpdate}>Save</button>\n                                </div>\n                            </div> \n                            \n                           \n                            \n                            \n                        </div>\n                    </div>\n                </div>  \n                \n                \n                {alertSuccess(successShipping)}\n                {alertError(errorShiping)}\n            </div>\n        );\n    };\n\n    // END Render Methods --------------------------------------------------------------------------\n\n    // Main Render\n    return (\n        <Layout \n            title = \"Home Page\"\n            description = \"Ecommerce\"\n            showBreadcrumb = {true}\n            currentPage = \"Worker Dashboard\"       \n        >                      \n            {userInfo()}\n        </Layout>\n    );\n\n    // TODO: Delete?\n    /*const init = (userId, token) => {\n        getPurchaseHistory(userId, token).then(data => {\n            if (data.error) {\n                console.log(data.error);\n            } else {\n                setHistory(data);\n            }\n        });\n    };*/\n\n    /*useEffect(() => {\n        init(_id, token);\n    }, []);*/\n\n    /*const userLinks = () => {\n        return (\n            <div className=\"card\">\n                <h4 className=\"card-header\">User Links</h4>\n                <ul className=\"list-group\">\n                    <li className=\"list-group-item\">\n                        <Link className=\"nav-link\" to=\"/cart\">\n                            My Cart\n                        </Link>\n                    </li>\n                    <li className=\"list-group-item\">\n                        <Link className=\"nav-link\" to={`/profile/${_id}`}>\n                            Update Profile\n                        </Link>\n                    </li>\n                </ul>\n            </div>\n        );\n    };*/\n\n    /*const purchaseHistory = history => {\n        return (\n            <div className=\"card mb-5\">\n                <h3 className=\"card-header\">Purchase history</h3>\n                <ul className=\"list-group\">\n                    <li className=\"list-group-item\">\n                        {history.map((h, i) => {\n                            return (\n                                <div>\n                                    <hr />\n                                    {h.products.map((p, i) => {\n                                        return (\n                                            <div key={i}>\n                                                <h6>Product name: {p.name}</h6>\n                                                <h6>\n                                                    Product price: ${p.price}\n                                                </h6>\n                                                <h6>\n                                                    Purchased date:{\" \"}\n                                                    {moment(\n                                                        p.createdAt\n                                                    ).fromNow()}\n                                                </h6>\n                                            </div>\n                                        );\n                                    })}\n                                </div>\n                            );\n                        })}\n                    </li>\n                </ul>\n            </div>\n        );\n    };\n\n    /*<Layout\n            title=\"Dashboard\"\n            description={`G'day ${name}!`}\n            className=\"container-fluid\"\n        >\n            <div className=\"row\">\n                <div className=\"col-3\">{userLinks()}</div>\n                <div className=\"col-9\">\n                    {userInfo()}\n                    {purchaseHistory(history)}\n                </div>\n            </div>\n        </Layout>*/\n};\n\nexport default Dashboard;","// Core Imports\nimport React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\n\n// Custom Component Imports\nimport Layout from '../core/Layout';\n//import OrderDataTable from './orders/OrderDataTable';\n\n// Function Imports\nimport { authenticate, isAuthenticated, signout } from '../auth/functions';\n\n// API Impports\nimport { updateUser, getUser } from '../APICalls';\n\n// TODO: Delete?\n//import { useHistory } from \"react-router-dom\";\n//import { getPurchaseHistory } from \"./apiUser\";\n//import moment from \"moment\";\n\n// TODO: Explanation\nconst Dashboard = ({ history }) => {\n\n    // Initial state\n    const { user, token } = isAuthenticated();\n    const [email, setEmail] = useState(user.email);\n    const [name, setName] = useState(user.name);\n    const [password, setPassword] = useState('');\n    const [password2, setPassword2] = useState('');\n    const [phoneNumber, setPhoneNumber] = useState(user.phoneNumber);\n    const [error, setError] = useState(false);\n    const [success, setSuccess] = useState(false);\n    const [errorShiping, setErrorShipping] = useState(false);\n    const [successShipping, setSuccessShipping] = useState(false);\n    const [street, setStreet] = useState('');\n    const [suite, setSuite] = useState('');\n    const [city, setCity] = useState('');\n    const [postalCode, setPostalCode] = useState('');\n    const [country, setCountry] = useState(0);\n    const [state, setState] = useState(0);\n\n    // React Effects -------------------------------------------------------------------------------\n\n    useEffect(() => {\n        getUser(user._id, token).then(data => {\n\n            if (data.error) {\n                setError(data.error);\n            }\n            else {\n                data.street && setStreet(data.street);\n                data.suite && setSuite(data.suite);\n                data.city && setCity(data.city);\n                data.postalCode && setPostalCode(data.postalCode);\n                data.country && setCountry(data.country);\n                data.state && setState(data.state);\n                localStorage.setItem('currentUser', JSON.stringify(data));\n                setPhoneNumber(data.phoneNumber !== '' ? data.phoneNumber : user.phoneNumber)\n            }\n        });\n\n    }, [user, token]);\n\n    useEffect(() => {\n\n        setError(false);\n        setSuccess(false);\n\n    }, [name, phoneNumber]);\n\n    useEffect(() => {\n\n        setErrorShipping(false);\n        setSuccessShipping(false);\n\n    }, [street, suite, city, postalCode, country, state]);\n\n    // END React Effects ---------------------------------------------------------------------------\n\n    // Events --------------------------------------------------------------------------------------\n\n    const closeAlert = e => {\n\n        e.preventDefault();\n        setError(false);\n        setSuccess(false);\n    }\n\n    const clickSignout = event => {\n\n        event.preventDefault();\n        localStorage.removeItem('currentUser');\n        signout(() => history.push(\"/\"));\n    };\n\n    const clickUpdate = e => {\n\n        e.preventDefault();\n\n        if (!name) {\n            setError(\"User Name can't be empty\");\n            return;\n        }\n\n        // make request to api to update user\n        const isConfirmed = true\n        updateUser(user._id, token, { name, phoneNumber, password, isConfirmed }).then(data => {\n\n            if (data.error) {\n                setError(data.error.description);\n            }\n            else {\n                authenticate({ user: { ...data } }, () => {\n                    //redirectUser()\n                    \n                    setSuccess(\"User Updated\");\n                });\n            }\n        });\n    };\n\n    const clickUpdateShippingAddress = e => {\n\n        e.preventDefault();\n\n        // make request to api to update user\n        updateUser(user._id, token, { name, street, suite, city, postalCode, country, state }).then(data => {\n\n            if (data.error) {\n                setErrorShipping(data.error.description);\n            }\n            else {\n                setSuccessShipping(\"Shipping Address Updated\");\n            }\n        });\n    };\n\n    const isActive = (history, path) => {\n\n        if (history.location.pathname === path) {\n            return \"active\";\n        }\n        else {\n            return \"\";\n        }\n    }\n\n    // END Events ----------------------------------------------------------------------------------\n\n    // Render Methods ------------------------------------------------------------------------------\n\n    const redirectUser = () => {\n\n        \n                return <Redirect to=\"/main\" />\n            \n    }\n\n    const alertError = (error) => (\n        <div className=\"alert alert-danger col-xs-12 col-sm-offset-3 col-sm-6 col-lg-offset-3 col-lg-6\" style={{ display: error ? '' : 'none' }}>\n            {error}\n            <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={closeAlert}>\n                <span aria-hidden=\"true\">&times;</span>\n            </button>\n        </div>\n    );\n\n    const alertSuccess = (success) => (\n        <div className=\"alert alert-info col-xs-12 col-sm-offset-3 col-sm-6 col-lg-offset-3 col-lg-6\" style={{ display: success ? '' : 'none' }}>\n            <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={closeAlert}>\n                <span aria-hidden=\"true\">&times;</span>\n            </button>\n            {success}\n        </div>\n    );\n\n    // TODO: Move states to a constant\n    const userInfo = () => {\n        return (\n            <div className=\"container ptb--40\">\n                <div className=\"row\">\n                    {alertSuccess(success)}\n                    {alertError(error)}\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-md-8 col-lg-8\">\n                        <div className=\"ckeckout-left-sidebar\">\n                            <div className=\"row\">\n                                <div className=\"checkout-form\">\n                                    <div className=\"col-xs-12 pb--20\">\n                                        <h2 className=\"pasadena-section-title-3\">User Information - Modify Password</h2>\n                                    </div>\n                                    <div className=\"pasadena-checkout-form-inner\">\n                                        <div className=\"pasadena-single-box\">\n                                            <div className=\"form-row\">\n                                                <div className=\"form-group col-xs-12 col-sm-6 col-lg-6\">\n                                                    <label htmlFor=\"name\" className=\"normal-label\">Name</label>\n                                                    <input\n                                                        type=\"text\"\n                                                        className=\"form-control \"\n                                                        id=\"name\"\n                                                        placeholder=\"Enter your name\"\n                                                        onChange={e => {\n                                                            setName(e.target.value);\n                                                        }}\n                                                        value={name}\n                                                        disabled\n                                                    />\n                                                </div>\n\n                                            </div>\n                                            <div className=\"form-row\">\n\n\n                                                <div className=\"form-group col-xs-12 col-sm-6 col-lg-6\">\n                                                    <label htmlFor=\"name\" className=\"normal-label\">Password</label>\n                                                    <input\n                                                        type=\"password\"\n                                                        className=\"form-control \"\n                                                        id=\"password\"\n                                                        placeholder=\"Enter new password\"\n                                                        onChange={e => {\n                                                            setPassword(e.target.value);\n                                                        }}\n                                                        value={password}\n                                                    />\n                                                </div>\n\n\n\n\n\n\n                                            </div>\n\n                                        </div>\n\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className=\"row\">\n                                <div className=\"col-xs-6 col-sm-6 col-lg-6\">\n                                    <button type=\"button\" className=\"btn btn-danger\" onClick={clickSignout}>Signout</button>\n                                </div>\n                                <div className=\"col-xs-6 col-sm-6 col-lg-6 text-right\">\n                                    <button type=\"button\" className=\"btn btn-dark\" onClick={clickUpdate}>Save</button>\n                                </div>\n                            </div>\n\n\n                        </div>\n                    </div>\n                </div>\n\n\n                {alertSuccess(successShipping)}\n                {alertError(errorShiping)}\n            </div>\n        );\n    };\n\n    // END Render Methods --------------------------------------------------------------------------\n\n    // Main Render\n    return (\n        <Layout\n            title=\"Home Page\"\n            description=\"Ecommerce\"\n            showBreadcrumb={false}\n            currentPage=\"My Account - Security\"\n        >\n            {userInfo()}\n        </Layout>\n    );\n\n    // TODO: Delete?\n    /*const init = (userId, token) => {\n        getPurchaseHistory(userId, token).then(data => {\n            if (data.error) {\n                console.log(data.error);\n            } else {\n                setHistory(data);\n            }\n        });\n    };*/\n\n    /*useEffect(() => {\n        init(_id, token);\n    }, []);*/\n\n    /*const userLinks = () => {\n        return (\n            <div className=\"card\">\n                <h4 className=\"card-header\">User Links</h4>\n                <ul className=\"list-group\">\n                    <li className=\"list-group-item\">\n                        <Link className=\"nav-link\" to=\"/cart\">\n                            My Cart\n                        </Link>\n                    </li>\n                    <li className=\"list-group-item\">\n                        <Link className=\"nav-link\" to={`/profile/${_id}`}>\n                            Update Profile\n                        </Link>\n                    </li>\n                </ul>\n            </div>\n        );\n    };*/\n\n    /*const purchaseHistory = history => {\n        return (\n            <div className=\"card mb-5\">\n                <h3 className=\"card-header\">Purchase history</h3>\n                <ul className=\"list-group\">\n                    <li className=\"list-group-item\">\n                        {history.map((h, i) => {\n                            return (\n                                <div>\n                                    <hr />\n                                    {h.products.map((p, i) => {\n                                        return (\n                                            <div key={i}>\n                                                <h6>Product name: {p.name}</h6>\n                                                <h6>\n                                                    Product price: ${p.price}\n                                                </h6>\n                                                <h6>\n                                                    Purchased date:{\" \"}\n                                                    {moment(\n                                                        p.createdAt\n                                                    ).fromNow()}\n                                                </h6>\n                                            </div>\n                                        );\n                                    })}\n                                </div>\n                            );\n                        })}\n                    </li>\n                </ul>\n            </div>\n        );\n    };\n\n    /*<Layout\n            title=\"Dashboard\"\n            description={`G'day ${name}!`}\n            className=\"container-fluid\"\n        >\n            <div className=\"row\">\n                <div className=\"col-3\">{userLinks()}</div>\n                <div className=\"col-9\">\n                    {userInfo()}\n                    {purchaseHistory(history)}\n                </div>\n            </div>\n        </Layout>*/\n};\n\nexport default Dashboard;","// Core Imports\nimport React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\n\nconst isActive = (history, path) => {\n\n    if (history.location.pathname === path) {\n        return \"active\";\n    }\n    else {\n        return \"\";\n    }\n}\n\n// TODO: Explanation\nconst Sidebar2 = ({ history }) => {\n\n    // Main render\n    return (\n        <section className=\"htc__product__area shop__page bg__white\">\n            <div className=\"container\">\n                <div className=\"htc__product__container\">\n                    <div className=\"row\">\n                        <div className=\"product__menu gutter-btn text-center\">\n                            <span\n                                className=\"is-checked\"\n\n                            >\n                                <Link className={isActive(history, \"/admin/dashboard/user-information\")} to=\"/admin/dashboard/user-information\">USER INFORMATION</Link>\n                            </span>\n                            <span\n                                className=\"is-checked\"\n\n                            >\n                                <Link className={isActive(history, \"/admin/dashboard/categories\")} to=\"/admin/dashboard/categories\">CATEGORIES</Link>\n                            </span>\n                            <span\n                                className=\"is-checked\"\n\n                            >\n                                <Link className={isActive(history, \"/admin/dashboard/products\")} to=\"/admin/dashboard/products\">WORKERS</Link>\n                            </span>\n                            <span\n                                className=\"is-checked\"\n\n                            >\n                                <Link className={isActive(history, \"/admin/dashboard/orders\")} to=\"/admin/dashboard/orders\">TIPS</Link>\n                            </span>\n\n\n\n\n\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section >\n\n\n    );\n};\n\nexport default withRouter(Sidebar2);\n\n\n\n\n\n\n\n\n\n","// Core Imports\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from 'react-router-dom';\n// Custom Component Imports\nimport Layout from \"../../core/Layout\";\nimport Sidebar2 from \"../Sidebar2\";\n\n// Function Imports\nimport { authenticate, isAuthenticated, signout } from \"../../auth/functions\";\n\n// API Imports\nimport { updateUser } from \"../../APICalls\";\n\n// TODO: Delete?\n//import { useHistory } from \"react-router-dom\";\n//import { getPurchaseHistory } from \"./apiUser\";\n//import moment from \"moment\";\n\n// TODO: Explanation\nconst AdminInformation = ({ history }) => {\n\n    // Init state\n    const { user, token } = isAuthenticated();\n    const [email, setEmail] = useState(user.email);\n    const [name, setName] = useState(user.name);\n    const [error, setError] = useState(false);\n    const [success, setSuccess] = useState(false);\n\n    // React Effects -------------------------------------------------------------------------------\n\n    useEffect(() => {\n\n        setError(false);\n        setSuccess(false);\n\n    }, [name]);\n\n    // END React Effects ---------------------------------------------------------------------------\n\n    // Events --------------------------------------------------------------------------------------\n\n    const closeAlert = e => {\n\n        e.preventDefault();\n        setError(false);\n        setSuccess(false);\n    }\n\n    const clickSignout = event => {\n\n        event.preventDefault();\n        localStorage.removeItem('currentUser');\n        signout(() => {\n            history.push('/');\n        });\n    };\n\n    const clickUpdate = e => {\n\n        e.preventDefault();\n        setError(false);\n\n        if (!name) {\n            setError(\"User Name can't be empty\");\n            return;\n        }\n\n        // make request to api to update user\n        updateUser(user._id, token, { name }).then(data => {\n\n            if (data.error) {\n                setError(data.error.description);\n            }\n            else {\n                authenticate({ user: { ...data } }, () => {\n                    setSuccess(\"User Updated\");\n                });\n            }\n        });\n    };\n\n    // END Events ----------------------------------------------------------------------------------\n\n    // Render Methods ------------------------------------------------------------------------------\n\n    const alertError = () => (\n        <div className=\"alert alert-danger col-xs-12 col-sm-offset-3 col-sm-6 col-lg-offset-3 col-lg-6\" style={{ display: error ? '' : 'none' }}>\n            {error}\n            <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={closeAlert}>\n                <span aria-hidden=\"true\">&times;</span>\n            </button>\n        </div>\n    );\n\n    const alertSuccess = () => (\n        <div className=\"alert alert-info col-xs-12 col-sm-offset-3 col-sm-6 col-lg-offset-3 col-lg-6\" style={{ display: success ? '' : 'none' }}>\n            <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={closeAlert}>\n                <span aria-hidden=\"true\">&times;</span>\n            </button>\n            {success}\n        </div>\n    );\n\n    const adminMenu = () => {\n        return (\n            <section className=\"htc__product__area shop__page bg__white\">\n                <div className=\"container\">\n                    <div className=\"htc__product__container\">\n                        <div className=\"row\">\n                            <div className=\"product__menu gutter-btn text-center\">\n                                menu centrado\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        );\n    }\n\n    const adminInfo = () => {\n        return (\n            <div className=\"container ptb--40\">\n\n                <div className=\"row\">\n                    <Sidebar2 />\n                    <div className=\"col-xs-12 col-sm-9 col-lg-9 dashboard-container\">\n                        <h4 className=\"section-title-4\">USER INFORMATION</h4>\n                        <div className=\"pasadena-single-box\">\n                            <div className=\"form-row\">\n                                <div className=\"form-group col-xs-12 col-sm-6 col-lg-6\">\n                                    <label htmlFor=\"name\" className=\"normal-label\">Name</label>\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control \"\n                                        id=\"name\"\n                                        placeholder=\"Enter your name\"\n                                        onChange={e => {\n                                            setName(e.target.value);\n                                        }}\n                                        value={name}\n                                    />\n                                </div>\n                                <div className=\"form-group col-xs-12 col-sm-6 col-lg-6\">\n                                    <label htmlFor=\"email\" className=\"normal-label\">Email</label>\n                                    <input\n                                        disabled=\"disabled\"\n                                        type=\"email\"\n                                        className=\"form-control \"\n                                        id=\"email\"\n                                        placeholder=\"Enter your email\"\n                                        /*onChange={e => {\n                                            setEmail(e.target.value);\n                                        }}*/\n                                        value={email}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-xs-6 col-sm-6 col-lg-6\">\n                                <button type=\"button\" className=\"btn btn-danger dashboard-container-button\" onClick={clickSignout}>Signout</button>\n                            </div>\n                            <div className=\"col-xs-6 col-sm-6 col-lg-6 text-right\">\n                                <button type=\"button\" className=\"btn btn-dark dashboard-container-button\" onClick={clickUpdate}>Save</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    {alertSuccess()}\n                    {alertError()}\n                </div>\n            </div>\n        );\n    };\n\n    // END Render Methods --------------------------------------------------------------------------\n\n    // TODO: Delete?\n    /*const purchaseHistory = history => {\n        return (\n            <div className=\"card mb-5\">\n                <h3 className=\"card-header\">Purchase history</h3>\n                <ul className=\"list-group\">\n                    <li className=\"list-group-item\">\n                        {history.map((h, i) => {\n                            return (\n                                <div>\n                                    <hr />\n                                    {h.products.map((p, i) => {\n                                        return (\n                                            <div key={i}>\n                                                <h6>Product name: {p.name}</h6>\n                                                <h6>\n                                                    Product price: ${p.price}\n                                                </h6>\n                                                <h6>\n                                                    Purchased date:{\" \"}\n                                                    {moment(\n                                                        p.createdAt\n                                                    ).fromNow()}\n                                                </h6>\n                                            </div>\n                                        );\n                                    })}\n                                </div>\n                            );\n                        })}\n                    </li>\n                </ul>\n            </div>\n        );\n    };\n\n    /*<Layout\n            title=\"Dashboard\"\n            description={`G'day ${name}!`}\n            className=\"container-fluid\"\n        >\n            <div className=\"row\">\n                <div className=\"col-3\">{userLinks()}</div>\n                <div className=\"col-9\">\n                    {adminInfo()}\n                    {purchaseHistory(history)}\n                </div>\n            </div>\n        </Layout>*/\n\n    // Main render\n    return (\n        <Layout\n            title=\"Home Page\"\n            description=\"Ecommerce\"\n            showBreadcrumb={true}\n            currentPage=\"Admin Dashboard\"\n        >\n            \n            {adminInfo()}\n\n        </Layout>\n    );\n};\n\nexport default AdminInformation;","// Core Imports\nimport React, { useState, useEffect, Fragment } from \"react\";\n\n// Custom Component Imports\nimport Alert from '../../common/Alert';\n\n// Selector Imports\nimport { isAuthenticated } from \"../../auth/functions\";\n\n// API Imports\nimport { createCategory, getPrintingTypes, updateCategory } from \"../../APICalls\";\n\n// TODO: Explanation\nconst CategoryForm = ({ \n        selectedCategory,\n        onDataTableSuccess,\n        onReloadCategories,\n        onSetModalOpen,\n        modalOpen\n    }) => {\n\n    // Init state\n    const [name, setName] = useState('');\n    const [descr, setDescr] = useState('');\n    const [printingType, setPrintingType] = useState('');\n    const [printingTypeList, setPrintingTypeList] = useState('');\n    const [modalTitle, setModalTitle] = useState('New Category');\n    const [btnName, setBtnName] = useState('Add');\n    const [error, setError] = useState(false);\n  \n    const { token } = isAuthenticated();\n\n    // React Effects -------------------------------------------------------------------------------\n\n    useEffect(() => {\n\n        getPrintingTypes().then(data => {\n\n            if (data.error)\n            {\n                setError(data.error);\n            }\n            else\n            {\n                setPrintingTypeList(data);\n            }\n        });       \n    }, []);\n\n    useEffect(() => {\n\n        if (selectedCategory)\n        {\n            setName(selectedCategory.name);\n            setDescr(selectedCategory.descr);\n            setPrintingType(selectedCategory.printingType._id);\n            setModalTitle(\"Edit Category\");\n            setBtnName(\"Save\");\n        }\n        else\n        {\n            setName('');\n            setDescr('');\n            setPrintingType('');\n            setModalTitle(\"Add New Category\");\n            setBtnName(\"Add\");\n        }\n    },[selectedCategory]);\n\n    useEffect(() => {\n\n        setError(false);  \n\n    },[name,descr,printingType]);\n\n    // END React Effects ---------------------------------------------------------------------------\n\n    // Events --------------------------------------------------------------------------------------\n\n    const clickSubmit = e => {\n\n        e.preventDefault();\n        setError(false);\n\n        if (!name || printingType === 0)\n        {\n            setError(\"Missing required fields\");\n            return;\n        }\n\n        if (selectedCategory)\n        {\n            // make request to api to update category\n            updateCategory(selectedCategory._id, token, { name, descr, printingType }).then(data => {\n\n                if (data.error)\n                {\n                    setError(data.error.description);\n                    onDataTableSuccess(false);\n                }\n                else\n                {\n                    setName(\"\");\n                    setDescr(\"\");\n                    setPrintingType(0);\n                    onDataTableSuccess(\"Category Updated\");\n                    onReloadCategories();\n                    onSetModalOpen(false);\n                }\n            });\n\n        }\n        else\n        {\n            // make request to api to create category\n            createCategory(token, { name, descr, printingType }).then(data => {\n\n                if (data.error)\n                {\n                    setError(data.error.description);\n                    onDataTableSuccess(false);\n                }\n                else\n                {\n                    setName(\"\");\n                    setDescr(\"\");\n                    setPrintingType(0);\n                    onDataTableSuccess(\"Category Created\");\n                    onReloadCategories();\n                    onSetModalOpen(false);\n                }\n            });\n        }        \n    };\n\n    // END Events ----------------------------------------------------------------------------------\n\n    // Main render\n    return (\n        <Fragment> \n            <div class=\"modal-backdrop fade in\" style={{ display: modalOpen ? '' : 'none' }}></div>\n            <div className={`modal fade in`} id=\"categoryModal\" role=\"dialog\" aria-labelledby=\"myModalLabel\" style={{ display: modalOpen ? 'block' : 'none' }}>\n                <div className=\"modal-dialog modal-lg\" role=\"document\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <button \n                                type=\"button\" \n                                className=\"close\" \n                                onClick={() => onSetModalOpen(false)}\n                            >\n                                <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                            <h4 className=\"modal-title\" id=\"myModalLabel\">{modalTitle}</h4>\n                        </div>\n                        <div className=\"modal-body\" style={{padding:'30px'}}>\n                        <div className=\"row\">   \n                            <Alert \n                                error = {error}\n                                onError = {(value) => {setError(value)}}\n                            />\n                        </div>\n                            <div className=\"form-row row\">\n                                <div className={`form-group col-xs-12 col-sm-6 col-lg-6`}>\n                                    <label htmlFor=\"name\" className=\"normal-label\">Category Name</label>\n                                    <input \n                                        type=\"text\" \n                                        className=\"form-control \" \n                                        id=\"name\" \n                                        placeholder=\"Enter category name\" \n                                        onChange={e => setName(e.target.value)}\n                                        value={name}\n                                        autoFocus\n                                        required\n                                    />\n                                </div>\n                                <div className=\"form-group col-xs-12 col-sm-6 col-lg-6\">\n                                    <label htmlFor=\"descr\" className=\"normal-label\">Category Description</label>\n                                    <input \n                                        type=\"text\" \n                                        className=\"form-control \" \n                                        id=\"descr\" \n                                        placeholder=\"Enter category description\" \n                                        onChange={e => setDescr(e.target.value)}\n                                        value={descr}\n                                    />\n                                </div>\n                            \n                            </div>\n                            \n                        </div>\n                        <div className=\"modal-footer\">\n                            <button \n                                type=\"button\" \n                                className=\"btn btn-default\" \n                                onClick={() => onSetModalOpen(false)}\n                            >\n                                Cancel\n                            </button>\n                            <button \n                                type=\"button\" \n                                className=\"btn btn-dark\"\n                                onClick={clickSubmit}\n                            >\n                                {btnName}\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    );\n}\n\nexport default CategoryForm;","// Core Imports\nimport React, { useState, useEffect, Fragment } from 'react';\nimport DataTable from 'react-data-table-component';\n\n// Custom Component Imports\nimport CategoryForm from './CategoryForm';\nimport Alert from '../../common/Alert'\n\n// Selector Imports\nimport { isAuthenticated } from '../../auth/functions';\n\n// API Imports\nimport { getCategories, deleteCategory } from '../../APICalls';\n\n// TODO: Explanation\nconst CategoryDataTable = () => {\n\n    // Init state\n    const [categories, setCategories] = useState(0);\n    const [selectedCategory, setSelectedCategory] = useState('');\n    const [filterText, setFilterText] = useState('');\n    const [filteredItems, setFilteredItems] = useState('');\n    const [modalOpen, setModalOpen] = useState(false);\n    const [dataTableError, setDataTableError] = useState(false);\n    const [dataTableSuccess, setDataTableSuccess] = useState(false);\n\n    const { token } = isAuthenticated();\n\n    // Initial columns configuration\n    const columns = [\n       \n        {\n            name: 'Name',\n            selector: 'name',\n            sortable: true\n        },\n        {\n            name: 'Description',\n            selector: 'descr',\n            sortable: true\n        },{\n            name: 'Actions',\n            cell: row => actionsBtns(row),\n            ignoreRowClick: true,\n            allowOverflow: true,\n            button: true\n        }        \n    ];\n\n    // React Effects -------------------------------------------------------------------------------\n\n    useEffect(() => {\n\n        loadCategories();\n\n    }, []);\n\n    useEffect(() => {\n\n        if (categories)\n        {\n            const items = categories.filter(item => item.name && item.name.toLowerCase().includes(filterText.toLowerCase()));\n            setFilteredItems(items);\n        }\n\n    },[filterText,categories]);\n\n    // END React Effects ---------------------------------------------------------------------------\n\n    // Methods -------------------------------------------------------------------------------------\n\n    const loadCategories = () =>{\n\n        getCategories().then(data => {\n\n            if (data.error)\n            {\n                //TODO: set error on loading categories list\n                //setError(data.error);\n            }\n            else\n            {\n                setCategories(data);\n            }\n        });\n    }\n\n    // END Methods ---------------------------------------------------------------------------------\n\n    // Events --------------------------------------------------------------------------------------\n\n    const clickDelete = categoryId => {\n\n        deleteCategory(token, categoryId).then(data => {\n\n            if (data.error)\n            {\n                setDataTableError(data.error.description);\n            }\n            else\n            {\n                loadCategories();\n                setDataTableSuccess(\"Category Deleted\");\n            }\n        });\n    }\n\n    // END Events ----------------------------------------------------------------------------------\n\n    // Render Methods ------------------------------------------------------------------------------\n\n    const actionsBtns = row => (\n        <>\n            <button \n                type=\"button\"\n                className=\"btn btn-default btn-sm btn-icon\" \n                data-toggle=\"modal\" \n                data-target=\"#deleteModal\"\n                aria-label=\"remove\" \n                onClick={() => setSelectedCategory(row)}>\n                <span className=\"glyphicon glyphicon-trash\" aria-hidden=\"true\"></span>\n            </button>\n            &nbsp;&nbsp;\n            <button \n                type=\"button\"\n                className=\"btn btn-default btn-sm btn-icon\" \n                aria-label=\"edit\" \n                onClick={() => {\n                    setSelectedCategory(row);\n                    setModalOpen(true);\n                }}>\n                <span className=\"glyphicon glyphicon-pencil\" aria-hidden=\"true\"></span>\n            </button>\n        </>\n    );\n\n    const modalDeleteConfirm = () => {\n        return(\n            <div className=\"modal fade\" id=\"deleteModal\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\n                <div className=\"modal-dialog\" role=\"document\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\n                            <h4 className=\"modal-title\" id=\"myModalLabel\">Delete Confirmation</h4>\n                        </div>\n                        <div className=\"modal-body\">\n                            {selectedCategory && `Do you want to delete category ${selectedCategory.name}?`}\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button  type=\"button\" className=\"btn btn-default\"  data-dismiss=\"modal\">Cancel</button>\n                            <button \n                                type=\"button\" \n                                className=\"btn btn-dark\"\n                                data-dismiss=\"modal\"\n                                onClick={() => clickDelete(selectedCategory._id)}\n                            >\n                                Delete\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    const FilterComponent = ( filterText ) => (            \n        <div className=\"\">\n            <div className=\"input-group\">                \n                <input \n                    type=\"text\" \n                    className=\"form-control\" \n                    placeholder=\"Name\" \n                    aria-describedby=\"sizing-addon2\"\n                    value={filterText} \n                    onChange={e => setFilterText(e.target.value)}\n                    style={{borderRadius:'0'}} \n                />\n                <span className=\"input-group-addon\" id=\"sizing-addon2\" style={{borderRadius:'0'}}>Search</span>\n            </div>\n        </div>\n    );\n\n    const BtnNew = () => (\n        <div className=\"\">\n            <div className=\"text-right\">\n                <button \n                    type=\"button\" \n                    className=\"btn btn-dark dashboard-container-button\" \n                    onClick={() => {\n                        setSelectedCategory(null);\n                        setModalOpen(true);\n                    }}\n                    aria-label=\"new\" \n                >\n                    New Category\n                </button>\n            </div>\n        </div> \n    );\n\n    // END Render Methods --------------------------------------------------------------------------\n\n    // Main Render\n    return (\n        <Fragment> \n            {modalDeleteConfirm()}\n            <CategoryForm \n                selectedCategory={selectedCategory}      \n                onDataTableError = {(value) => setDataTableError(value)}\n                onDataTableSuccess = {(value) => setDataTableSuccess(value)}\n                onReloadCategories = {() => loadCategories()}\n                onSetModalOpen = {(value) => setModalOpen(value)}\n                modalOpen={modalOpen}\n            />\n            <div className=\"row\">\n                <Alert \n                    error = {dataTableError}\n                    success = {dataTableSuccess}\n                    onError = {(value) => {setDataTableError(value)}}\n                    onSuccess = {(value) => {setDataTableSuccess(value)}}\n                />\n            </div>\n            <DataTable\n                columns={columns}\n                data={filteredItems}\n                defaultSortField=\"name\"\n                pagination\n                highlightOnHover\n                pointerOnHover\n                subHeader\n                subHeaderComponent={[BtnNew(), FilterComponent()]}\n            />\n        </Fragment>\n    );  \n}\n\nexport default CategoryDataTable;","// Core Imports\nimport React, { Fragment } from 'react';\n\n// Custom Component Imports\nimport CategoryDataTable from './CategoryDataTable';\nimport Layout from '../../core/Layout';\nimport Sidebar2 from '../Sidebar2';\n\n// TODO: Explanation\nconst Categories = ({history}) => {\n\n    // Render Methods ------------------------------------------------------------------------------\n\n    const categoryInfo = () => {\n        return (\n            <Fragment>\n                <div className=\"container ptb--40\">\n                    <div className=\"row\">\n                        <Sidebar2/>\n                    </div>\n                    <div className=\"row\">\n                        <CategoryDataTable />\n                    </div>\n                </div>\n            </Fragment>\n        );\n    };\n\n    // END Render Methods --------------------------------------------------------------------------\n\n    // Main Render\n    return (\n        <Layout \n            title = \"Home Page\"\n            description = \"Ecommerce\"\n            showBreadcrumb = {true}\n            currentPage = \"Admin Dashboard\"\n        >      \n            {categoryInfo()}\n        </Layout>\n    );\n};\n\nexport default Categories;","// Core Imports\nimport React, { useState, useEffect, useRef, Fragment } from \"react\";\n\n// Custom Component Imports\nimport Alert from '../../common/Alert';\n\n// Rich Text Editor\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\n// Function Imports\nimport { isAuthenticated } from \"../../auth/functions\";\n\n// API Imports\nimport { createProduct, getCategories, updateProduct } from \"../../APICalls\";\n\n// Misc Imports\nimport Config from '../../config';\n\n// TODO: Explanation\nconst ProductForm = ({\n    selectedProduct,\n    onDataTableSuccess,\n    onReloadProducts,\n    onSetModalOpen,\n    modalOpen\n}) => {\n\n\n\n    // Initial State\n    const [name, setName] = useState('');\n    const [descr, setDescr] = useState('');\n    const [phoneNumber, setPhoneNumber] = useState('');\n    const [email, setEmail] = useState('');\n    const [role, setRole] = useState('');\n    const [local, setLocal] = useState('');\n    const [emailPaypal, setEmailPaypal] = useState('');\n    const [password, setPassword] = useState('');\n    const [price, setPrice] = useState('');\n    const [weight, setWeight] = useState('');\n    const [qty, setQty] = useState('');\n    const [category, setCategory] = useState('');\n    const [categories, setCategories] = useState('');\n    const [colorList, setColorList] = useState({});\n    const [sizeList, setSizeList] = useState({});\n    const [formData, setFormData] = useState('');\n    const [modalTitle, setModalTitle] = useState('New Product');\n    const [btnName, setBtnName] = useState('Add');\n    const [error, setError] = useState(false);\n    const imgInputRef = useRef(null);\n    const colors = Config.COLORS;\n    const sizes = Config.SIZES;\n\n\n    const { token } = isAuthenticated();\n\n    // React Effects -------------------------------------------------------------------------------\n\n    useEffect(() => {\n\n        setFormData(new FormData());\n\n        getCategories().then(categoryData => {\n\n            if (categoryData.error) {\n                setError(categoryData.error);\n            }\n            else {\n                setCategories(categoryData);\n            }\n        });\n\n        setColorList(Config.COLORS_INIT);\n        setSizeList(Config.SIZES_INIT);\n\n    }, []);\n\n    useEffect(() => {\n        setError(false);\n\n    }, [name, descr, price, qty, category, weight]);\n\n    useEffect(() => {\n\n        if (selectedProduct) {\n            setName(selectedProduct.name);\n            setEmail(selectedProduct.email);\n            setPhoneNumber(selectedProduct.phoneNumber);\n            setRole(selectedProduct.role);\n            setLocal(selectedProduct.local);\n            setEmailPaypal(selectedProduct.emailPaypal);\n            setPassword(selectedProduct.password);\n            setDescr(selectedProduct.descr);\n            setPrice(selectedProduct.price);\n            setWeight(selectedProduct.weight);\n            setQty(selectedProduct.qty);\n            setCategory(selectedProduct.category._id);\n            setColorList(selectedProduct.colorList || Config.COLORS_INIT);\n            setSizeList(selectedProduct.sizeList || Config.SIZES_INIT);\n            setModalTitle(\"Edit Worker\");\n            setBtnName(\"Save\");\n            formData.set('colorList', JSON.stringify(selectedProduct.colorList));\n            formData.set('sizeList', JSON.stringify(selectedProduct.sizeList));\n        }\n        else {\n            setName('');\n            setEmail('');\n            setPhoneNumber('');\n            setRole('');\n            setLocal('');\n            setEmailPaypal('');\n            setPassword('');\n            setDescr('');\n            setPrice('');\n            setWeight('');\n            setQty('');\n            setCategory(0);\n            setColorList(Config.COLORS_INIT);\n            setSizeList(Config.SIZES_INIT);\n            setModalTitle(\"Add New Worker\");\n            setBtnName(\"Add\");\n        }\n\n    }, [selectedProduct]);\n\n    // END React Effects ---------------------------------------------------------------------------\n\n    // Events --------------------------------------------------------------------------------------\n\n    const handleChangeDescr = (e, editor) => {\n        const data = editor.getData();\n        formData.set('descr', data);\n    }\n\n    const clickSubmit = e => {\n\n        e.preventDefault();\n        setError(false);\n\n        if (selectedProduct) {\n            updateProduct(selectedProduct._id, token, formData).then(data => {\n\n                if (data.error) {\n                    setError(data.error.description);\n                    onDataTableSuccess(false);\n                }\n                else {\n                    setName('');\n                    imgInputRef.current.value = null;\n                    setEmail('');\n                    setPhoneNumber('');\n                    setRole('');\n                    setLocal('');\n                    setEmailPaypal('');\n                    setDescr('');\n                    setPassword('');\n                    setPrice('');\n                    setWeight('');\n                    setCategory(0);\n                    setColorList(Config.COLORS_INIT);\n                    setSizeList(Config.SIZES_INIT);\n                    setQty('');\n                    setFormData(new FormData());\n                    onDataTableSuccess(\"Product Updated\");\n                    onReloadProducts();\n                    onSetModalOpen(false);\n                }\n            });\n        }\n        else {\n            createProduct(token, formData).then(data => {\n\n                if (data.error) {\n                    setError(data.error.description);\n                    onDataTableSuccess(false);\n                }\n                else {\n                    setName('');\n                    imgInputRef.current.value = null;\n                    setEmail('');\n                    setPhoneNumber('');\n                    setRole('');\n                    setLocal('');\n                    setEmailPaypal('');\n                    setPassword('');\n                    setDescr('');\n                    setPrice('');\n                    setWeight('');\n                    setCategory(0);\n                    setColorList(Config.COLORS_INIT);\n                    setSizeList(Config.SIZES_INIT);\n                    setQty('');\n                    setFormData(new FormData());\n                    onDataTableSuccess(\"User/Worker Created\");\n                    onReloadProducts();\n                    onSetModalOpen(false);\n                }\n            });\n        }\n    };\n\n    const setProductCategory = e => {\n\n        setCategory(e.target.value);\n\n        for (const i in categories) {\n            if (categories[i]._id === e.target.value) {\n                formData.set('printingType', categories[i].printingType._id);\n            }\n        }\n\n        formData.set('category', e.target.value);\n        formData.set('qty', 1);\n        formData.set('price', 1);\n        formData.set('weight', 1);\n    }\n\n    const onChangeColorSelected = (hexCode) => {\n\n        let selectedColors = colorList;\n        selectedColors[hexCode] = !selectedColors[hexCode];\n        setColorList((prevState) => ({ ...prevState, selectedColors }));\n        formData.set('colorList', JSON.stringify(colorList));\n    }\n\n    const onChangeSizeSelected = (code) => {\n\n        let selectedSizes = sizeList;\n        selectedSizes[code] = !selectedSizes[code];\n        setSizeList((prevState) => ({ ...prevState, selectedSizes }));\n        formData.set('sizeList', JSON.stringify(sizeList));\n    }\n\n    const renderColorSelector = () => {\n\n        if (colors && colors.length > 0) {\n            return (\n                <div className=\"select__color\">\n                    <ul className=\"color__list\" style={{ marginLeft: '0px' }}>\n                        {colors.map((color) => {\n\n                            return (\n                                <li key={color.hexCode} className=\"\">\n                                    <div\n                                        title={color.name}\n                                        style={\n                                            {\n                                                background: `#${color.hexCode} none repeat scroll 0 0`,\n                                                border: colorList[color.hexCode] ? 'solid red 2px' : 'solid #DDD 2px'\n                                            }\n                                        }\n                                        onClick={() => onChangeColorSelected(color.hexCode)}\n                                    >\n                                    </div>\n                                </li>\n                            )\n                        })}\n                    </ul>\n                </div>\n            )\n        }\n        else return null;\n    }\n\n    const renderSizesSelector = () => {\n\n        if (sizes && sizes.length > 0) {\n            return (\n                <div className=\"select__size\" style={{ margin: 0 }}>\n                    <ul className=\"color__list\" style={{ marginLeft: '0px' }}>\n                        {\n                            sizes.map((size) => {\n\n                                return (\n                                    <li key={size.code} className=\"\">\n                                        <div\n                                            title={size.name}\n                                            style={\n                                                {\n                                                    border: sizeList[size.code] ? 'solid red 2px' : 'solid #DDD 2px'\n                                                }\n                                            }\n                                            onClick={() => onChangeSizeSelected(size.code)}\n                                        >\n                                            {size.code}\n                                        </div>\n                                    </li>\n                                )\n                            })\n                        }\n                    </ul>\n                </div>\n            )\n        }\n        else return null;\n    }\n\n    // END Events ----------------------------------------------------------------------------------\n\n    // Main Render\n    return (\n        <Fragment>\n            <div class=\"modal-backdrop fade in\" style={{ display: modalOpen ? '' : 'none' }}></div>\n            <div className={`modal fade in`} id=\"categoryModal\" role=\"dialog\" aria-labelledby=\"myModalLabel\" style={{ display: modalOpen ? 'block' : 'none' }}>\n                <div className=\"modal-dialog modal-lg\" role=\"document\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <button\n                                type=\"button\"\n                                className=\"close\"\n                                onClick={() => {\n                                    onSetModalOpen(false);\n                                }}\n                            >\n                                <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                            <h4 className=\"modal-title\" id=\"myModalLabel\">{modalTitle}</h4>\n                        </div>\n                        <div className=\"modal-body\" style={{ padding: '30px', minHeight: '550px', 'overflow-y': 'auto', maxHeight: '600px' }}>\n                            <div className=\"row\">\n                                <Alert\n                                    error={error}\n                                    onError={(value) => { setError(value) }}\n                                />\n                            </div>\n                            <div className=\"form-row row\">\n                                <div className={`form-group col-xs-12 col-sm-6 col-lg-6`}>\n                                    <label htmlFor=\"name\" className=\"normal-label\">Name</label>\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control \"\n                                        id=\"name\"\n                                        placeholder=\"Enter name\"\n                                        onChange={e => {\n                                            setName(e.target.value);\n                                            formData.set('name', e.target.value);\n                                        }}\n                                        value={name}\n                                        autoFocus\n                                        required\n                                    />\n                                </div>\n\n                                <div className=\"form-group col-xs-12 col-sm-6 col-lg-6\">\n                                    <label htmlFor=\"image\" className=\"normal-label\">Worker Image</label>\n                                    <input\n                                        type=\"file\"\n                                        className=\"form-control input-file\"\n                                        id=\"image\"\n                                        accept=\"image/*\"\n                                        placeholder=\"Enter worker image\"\n                                        ref={imgInputRef}\n                                        onChange={e => {\n                                            formData.set('image', e.target.files[0]);\n                                        }}\n                                    />\n                                </div>\n\n                            </div>\n\n                            <div className=\"form-row row\">\n\n                                <div className=\"form-group col-xs-12 col-sm-3 col-lg-6\">\n                                    <label htmlFor=\"email\" className=\"normal-label\">Email</label>\n                                    <input\n                                        type=\"email\"\n                                        className=\"form-control \"\n                                        id=\"email\"\n                                        placeholder=\"Email*\"\n                                        onChange={e => {\n                                            setEmail(e.target.value);\n                                            formData.set('email', e.target.value);\n                                        }}\n                                        value={email}\n                                        autoFocus\n                                        required\n                                    />\n                                </div>\n\n\n\n\n                                <div className=\"form-group col-xs-12 col-sm-6 col-lg-6\">\n                                    <label htmlFor=\"phone_number\" className=\"normal-label\">Phone Number</label>\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control \"\n                                        id=\"phone_number\"\n                                        placeholder=\"Enter your phone number\"\n                                        onChange={e => {\n                                            setPhoneNumber(e.target.value);\n                                            formData.set('phoneNumber', e.target.value);\n                                        }}\n                                        value={phoneNumber}\n                                    />\n                                </div>\n\n\n\n\n                            </div>\n\n                            <div className=\"form-row row\">\n\n                                <div className=\"form-group col-xs-12 col-sm-3 col-lg-6\">\n                                    <label htmlFor=\"category\" className=\"normal-label\"> Category</label>\n                                    <div className=\"select-option\">\n                                        <select\n                                            id=\"category\"\n                                            className=\"form-control\"\n                                            onChange={setProductCategory}\n                                            value={category}\n                                        >\n                                            <option value={0} >Select Category</option>\n                                            {categories && categories.map((category, i) => (\n                                                <option key={i} value={category._id}>\n                                                    {`${category.name}`}\n                                                </option>\n                                            ))}\n                                        </select>\n                                    </div>\n                                </div>\n\n                                <div className=\"form-group col-xs-12 col-sm-6 col-lg-6\">\n                                    <label htmlFor=\"image\" className=\"normal-label\">Local</label>\n                                    <div className=\"select-option\">\n                                        <select\n                                            id=\"local\"\n                                            className=\"form-control\"\n                                            onChange={e => {\n                                                setLocal(e.target.value);\n                                                formData.set('local', e.target.value);\n                                            }}\n                                            value={local}\n                                        >\n                                            <option value=\"\">Select Local</option>\n                                            <option key=\"downtowndisney\" value=\"downtowndisney\">Downtown Disney Rest.</option>\n                                            <option key=\"magickingdom\" value=\"magickingdom\">Magic Kingdom Rest.</option>\n                                            <option key=\"magickingdom\" value=\"magickingdom\">Universal Resort</option>\n                                            <option key=\"marriottrenaissance\" value=\"marriottrenaissance\">Marriott Renaissance</option>\n                                        </select>\n                                    </div>\n                                </div>\n                            </div>\n\n\n\n\n                            <div className=\"form-row row\">\n\n                                <div className=\"form-group col-xs-12 col-sm-3 col-lg-6\">\n                                    <label htmlFor=\"emailPaypal\" className=\"normal-label\">Paypal Account</label>\n                                    <input\n                                        type=\"email\"\n                                        className=\"form-control \"\n                                        id=\"emailPaypal\"\n                                        placeholder=\"Email for Paypal*\"\n                                        onChange={e => {\n                                            setEmailPaypal(e.target.value);\n                                            formData.set('emailPaypal', e.target.value);\n                                        }}\n                                        value={emailPaypal}\n                                        autoFocus\n                                        required\n                                    />\n\n                                </div>\n\n\n                                <div className=\"form-group col-xs-12 col-sm-6 col-lg-6\">\n                                    <label htmlFor=\"image\" className=\"normal-label\">Role</label>\n                                    <div className=\"select-option\">\n                                        <select\n                                            id=\"role\"\n                                            className=\"form-control\"\n                                            onChange={e => {\n                                                setRole(e.target.value);\n                                                formData.set('role', e.target.value);\n                                            }}\n                                            value={role}\n                                        >\n                                            <option value=\"\">Select Role</option>\n                                            <option key=\"admin\" value=\"admin\">Admin</option>\n                                            <option key=\"worker\" value=\"worker\">Worker</option>\n                                        </select>\n                                    </div>\n                                </div>\n\n                            </div>\n\n                            <div className=\"form-row row\">\n\n                                <div className=\"form-group col-xs-12 col-sm-3 col-lg-3\">\n                                    <label htmlFor=\"password\" className=\"normal-label\">Password</label>\n                                    <input\n                                        type=\"password\"\n                                        className=\"form-control \"\n                                        id=\"password\"\n                                        onChange={e => {\n                                            setPassword(e.target.value);\n                                            formData.set('password', e.target.value);\n                                        }}\n                                        value={password}\n                                        autoFocus\n                                        required\n                                    />\n                                </div>\n\n                            </div>\n\n\n                            <div className=\"form-row row\">\n                                <div className=\"form-group col-xs-12 col-sm-12 col-lg-12\">\n                                    <label htmlFor=\"descr\" className=\"normal-label\">Description</label>\n                                    <div className=\"ck-editor\" data-example-id=\"textarea-form-control\">\n                                        <CKEditor\n                                            editor={ClassicEditor}\n                                            config={{\n                                                toolbar: [\n                                                    'heading',\n                                                    'bold',\n                                                    'italic',\n                                                    'blockQuote',\n                                                    'bulletedList',\n                                                    'numberedList',\n                                                    '|',\n                                                    'undo',\n                                                    'redo'\n                                                ]\n                                            }}\n                                            data={descr}\n                                            onChange={handleChangeDescr}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n\n\n\n\n\n\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button\n                                type=\"button\"\n                                className=\"btn btn-default\"\n                                onClick={() => {\n                                    onSetModalOpen(false);\n                                }}\n                            >Cancel</button>\n                            <button\n                                type=\"button\"\n                                className=\"btn btn-dark\"\n                                onClick={clickSubmit}\n                            >{btnName}</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default ProductForm;","// Core Imports\nimport React, { useState, useEffect, Fragment } from \"react\";\nimport DataTable from 'react-data-table-component';\nimport { Link } from 'react-router-dom';\n\n// Custom Component Imports\nimport ProductForm from './ProductForm';\nimport Alert from '../../common/Alert';\n\n// Function Imports\nimport { isAuthenticated } from \"../../auth/functions\";\n\n// API Imports\nimport { getProducts, deleteProduct } from \"../../APICalls\";\n\n// TODO: Explanation\nconst ProductDataTable = () => {\n\n    // Inti state\n    const [products, setProducts] = useState('');\n    const [selectedProduct, setSelectedProduct] = useState('');\n    const [filterText, setFilterText] = useState('');\n    const [filteredItems, setFilteredItems] = useState('');\n    const [modalOpen, setModalOpen] = useState(false);\n    const [dataTableError, setDataTableError] = useState(false);\n    const [dataTableSuccess, setDataTableSuccess] = useState(false);\n\n    const { token } = isAuthenticated();\n\n    // Initial columns configuration\n    const columns = [\n       \n        {\n            name: 'Category',\n            sortable: true,\n            cell: row => <div>{row.category.name}</div>\n        },\n        {\n            name: 'Name',\n            selector: 'name',\n            sortable: true\n        },\n       \n        {\n            name: 'Actions',\n            cell: row => actionsBtns(row),\n            ignoreRowClick: true,\n            allowOverflow: true,\n            button: true\n        }       \n    ];  \n\n    // React Effects -------------------------------------------------------------------------------\n\n    useEffect(() => {\n\n        loadProducts();\n\n    }, []);   \n    \n    useEffect(() => {\n        \n        if (products)\n        {\n            const items = products.filter(item => item.name && item.name.toLowerCase().includes(filterText.toLowerCase()));\n            setFilteredItems(items);\n        }\n\n    },[filterText,products]);\n\n    // END React Effects ---------------------------------------------------------------------------\n\n    // Methods -------------------------------------------------------------------------------------\n\n    const loadProducts = () => {\n\n        getProducts().then(productData => {\n\n            if (productData.error)\n            {\n                //setError(productData.error);\n            }\n            else\n            {\n                setProducts(productData);\n            }\n        });\n    }\n\n    // END Methods ---------------------------------------------------------------------------------\n\n    // Events --------------------------------------------------------------------------------------\n\n    const clickDelete = productId => {\n\n        deleteProduct(token, productId).then(data => {\n\n            if (data.error)\n            {\n                setDataTableError(data.error.description);\n            }\n            else\n            {\n                loadProducts();\n                setDataTableSuccess(\"Worker Deleted\");\n            }\n        });\n    }\n\n    // END Events ----------------------------------------------------------------------------------\n\n    // Render Methods ------------------------------------------------------------------------------\n\n    const actionsBtns = row => (\n        <>\n            <button \n                type=\"button\"\n                className=\"btn btn-default btn-sm btn-icon\" \n                data-toggle=\"modal\" \n                data-target=\"#deleteModal\"\n                aria-label=\"remove\" \n                onClick={() => {\n                    setSelectedProduct(row);\n                }}>\n                <span className=\"glyphicon glyphicon-trash\" aria-hidden=\"true\"></span>\n            </button>\n            &nbsp;&nbsp;\n            <button \n                type=\"button\"\n                className=\"btn btn-default btn-sm btn-icon\" \n                aria-label=\"edit\" \n                onClick={() => {\n                    setSelectedProduct(row);\n                    setModalOpen(true);\n                }}>\n                <span className=\"glyphicon glyphicon-pencil\" aria-hidden=\"true\"></span>\n            </button>\n           \n        </>\n    );\n\n    const BtnNew = () => (\n        <div className=\"\">\n            <div className=\"text-right\">\n                <button \n                    type=\"button\" \n                    className=\"btn btn-dark dashboard-container-button\" \n                    onClick={() => {\n                        setSelectedProduct(null);\n                        setModalOpen(true);\n                    }}\n                    aria-label=\"new\" \n                >New Worker</button>\n            </div>\n        </div> \n    );\n\n    const modalDeleteConfirm = () => {\n        return(\n            <div className=\"modal fade\" id=\"deleteModal\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\n                <div className=\"modal-dialog\" role=\"document\">\n                    <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\n                        <h4 className=\"modal-title\" id=\"myModalLabel\">Delete Confirmation</h4>\n                    </div>\n                    <div className=\"modal-body\">\n                        {selectedProduct && `Do you want to delete worker ${selectedProduct.name}?`}\n                    </div>\n                    <div className=\"modal-footer\">\n                        <button \n                            type=\"button\" \n                            className=\"btn btn-default\" \n                            data-dismiss=\"modal\"\n                        >Cancel</button>\n                        <button \n                            type=\"button\" \n                            className=\"btn btn-dark\"\n                            data-dismiss=\"modal\"\n                            onClick={() => {\n                                clickDelete(selectedProduct._id);\n                            }}\n                        >Delete</button>\n                    </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    const FilterComponent = ( filterText ) => (\n        <>\n          <div className=\"input-group\">\n                <input \n                    type=\"text\" \n                    className=\"form-control\" \n                    placeholder=\"Worker Name\" \n                    ariaDescribedby=\"sizing-addon2\"\n                    value={filterText} \n                    onChange={e => setFilterText(e.target.value)}\n                    style={{borderRadius:'0'}} \n                />\n                <span className=\"input-group-addon\" id=\"sizing-addon2\" style={{borderRadius:'0'}} >Search</span>\n            </div>\n        </>\n    );\n\n    // END Render Methods --------------------------------------------------------------------------\n\n    // Main render\n    return (\n        <Fragment>  \n            {modalDeleteConfirm()}\n            <ProductForm \n                selectedProduct={selectedProduct}\n                onDataTableError = {(value) => setDataTableError(value)}\n                onDataTableSuccess = {(value) => setDataTableSuccess(value)}\n                onReloadProducts = {() => loadProducts()}\n                onSetModalOpen = {(value) => setModalOpen(value)}\n                modalOpen={modalOpen}\n            />\n            <div className=\"row\">   \n                <Alert \n                    error = {dataTableError}\n                    success = {dataTableSuccess}\n                    onError = {(value) => {setDataTableError(value)}}\n                    onSuccess = {(value) => {setDataTableSuccess(value)}}\n                />\n            </div>\n            <DataTable\n                columns={columns}\n                data={filteredItems}\n                defaultSortField=\"printingType\"\n                pagination\n                highlightOnHover\n                pointerOnHover\n                subHeader\n                subHeaderComponent={[BtnNew(),FilterComponent()]}\n            />\n        </Fragment>\n    );\n}\n\nexport default ProductDataTable;","// Core Imports\nimport React, { Fragment } from \"react\";\n\n// Custom Component Imports\nimport ProductDataTable from './ProductDataTable';\nimport Layout from \"../../core/Layout\";\nimport Sidebar2 from \"../Sidebar2\";\n\n// TODO: Explanation\nconst Products = (props) => {\n\n    // Render Methods ------------------------------------------------------------------------------\n\n    const productManagenmentSection = () => {\n        return (\n            <Fragment>  \n                <div className=\"container ptb--40\">\n                    <div className=\"row\">\n                        <Sidebar2/>\n                    </div>\n                    <div className=\"row\">\n                        <ProductDataTable />\n                    </div>\n                </div>   \n            </Fragment>\n        );\n    };\n\n    // END Render Methods --------------------------------------------------------------------------\n\n    // Main render\n    return (\n        <Layout \n            title = \"Home Page\"\n            description = \"Ecommerce\"\n            showBreadcrumb = {true}\n            currentPage = \"Admin Dashboard\"\n        >\n            {productManagenmentSection()}\n        </Layout>\n    );\n};\n\nexport default Products;","// Core Imports\nimport React, { useState, useEffect, useRef, Fragment } from \"react\";\n\n// Custom Component Imports\nimport Alert from '../../common/Alert';\n\n// Function Imports\nimport { isAuthenticated } from \"../../auth/functions\";\n\n// API Imports\nimport { createView, updateView } from \"../../APICalls\";\n\n// TODO: Explanation\nconst ViewForm = ({ \n        productId,\n        selectedView,\n        numberOfViews,\n        onDataTableSuccess,\n        onReloadViews,\n        onSetModalOpen,\n        modalOpen,\n    }) => {\n\n    // Initial State\n    const [name, setName] = useState('');\n    const [price, setPrice] = useState('');\n    const [mainView, setMainView] = useState(false);\n    const [formData, setFormData] = useState(new FormData());\n    const [modalTitle, setModalTitle] = useState('New View');\n    const [btnName, setBtnName] = useState('Add');\n    const [error, setError] = useState(false);\n    const imgInputRef = useRef(null);\n    const imgBaseInputRef = useRef(null);\n    const imgShadowsInputRef = useRef(null);\n    const imgHighlightsInputRef = useRef(null);\n\n    const { token } = isAuthenticated();\n\n    // React Effects -------------------------------------------------------------------------------\n\n    useEffect(() => {\n\n        setError(false);\n\n    },[name, price, mainView]);\n\n    useEffect(() => {\n\n        if (selectedView)\n        {\n            setName(selectedView.name);\n            setPrice(selectedView.price);\n            setModalTitle(\"Edit View\");\n            setBtnName(\"Save\");\n            setMainView(selectedView._id == selectedView.product.mainView);\n        }\n        else\n        {\n            setName('');\n            setPrice('');\n            setModalTitle(\"Add New Modal\");\n            setBtnName(\"Add\");\n            setMainView(false);\n        }\n\n    },[selectedView]);\n\n    // END React Effects ---------------------------------------------------------------------------\n\n\n    // Event Methods -------------------------------------------------------------------------------\n\n    const clickSubmit = e => {\n\n        e.preventDefault();\n        setError(false);\n        formData.set('product', productId);\n\n        if (selectedView)\n        {\n            updateView(selectedView._id, token, productId, formData).then(data => { \n\n                if (data.error)\n                {\n                    setError(data.error.description);\n                    onDataTableSuccess(false);\n                }\n                else\n                {\n                    setName('');\n                    setPrice('');\n\n                    if(imgInputRef.current)\n                    {\n                        imgInputRef.current.value = null;\n                    }\n\n                    if(imgBaseInputRef.current)\n                    {\n                        imgBaseInputRef.current.value = null;\n                    }\n\n                    if (imgShadowsInputRef.current)\n                    {\n                        imgShadowsInputRef.current.value = null;\n                    }\n\n                    if(imgHighlightsInputRef.current)\n                    {\n                        imgHighlightsInputRef.current.value = null;\n                    }\n\n                    setFormData(new FormData());\n                    onDataTableSuccess(\"View Updated\");\n                    onReloadViews(mainView ? selectedView._id : null);\n                    onSetModalOpen(false);\n                    setMainView(false);\n                }\n            });\n        }\n        else\n        {\n            createView(token, productId, formData).then(data => { \n                \n                if (data.error)\n                {\n                    setError(data.error.description);\n                    onDataTableSuccess(false);\n                }\n                else\n                {\n                    setName('');\n                    setPrice('');\n\n                    if(imgInputRef.current)\n                    {\n                        imgInputRef.current.value = null;\n                    }\n\n                    if(imgBaseInputRef.current)\n                    {\n                        imgBaseInputRef.current.value = null;\n                    }\n\n                    if(imgShadowsInputRef.current)\n                    {\n                        imgShadowsInputRef.current.value = null;\n                    }\n\n                    if(imgHighlightsInputRef.current)\n                    {\n                        imgHighlightsInputRef.current.value = null;\n                    }\n                    \n                    setFormData(new FormData());\n                    onDataTableSuccess(\"View Created\");\n                    onReloadViews(mainView ? data._id : null);\n                    onSetModalOpen(false);\n                    setMainView(false);\n                }\n            });\n        }   \n    };\n\n    // END Event Methods ---------------------------------------------------------------------------\n\n    // Main Render\n    return (\n        <Fragment> \n            <div class=\"modal-backdrop fade in\" style={{ display: modalOpen ? '' : 'none' }}></div>\n            <div className={`modal fade in`} id=\"categoryModal\" role=\"dialog\" aria-labelledby=\"myModalLabel\" style={{ display: modalOpen ? 'block' : 'none' }}>\n                <div className=\"modal-dialog modal-lg\" role=\"document\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <button \n                                type=\"button\" \n                                className=\"close\" \n                                onClick={() => {\n                                    onSetModalOpen(false);\n                                }}\n                            >\n                                <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                            <h4 className=\"modal-title\" id=\"myModalLabel\">{modalTitle}</h4>\n                        </div>\n                        <div className=\"modal-body\" style={{padding:'30px'}}>\n                        <div className=\"row\">\n                            <Alert \n                                error = {error}\n                                onError = {(value) => {setError(value)}}\n                            />\n                        </div>\n                            <div className=\"form-row row\">\n                                <div className={`form-group col-xs-12 col-sm-8 col-lg-8`}>\n                                    <label htmlFor=\"name\" className=\"normal-label\">View Name</label>\n                                    <input \n                                        type=\"text\" \n                                        className=\"form-control input-file\" \n                                        id=\"name\" \n                                        placeholder=\"Enter View name\" \n                                        onChange={e => {\n                                            setName(e.target.value);\n                                            formData.set('name', e.target.value);\n                                        }}\n                                        value={name}\n                                        autoFocus\n                                        required\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <div className=\"form-group col-xs-12 col-sm-4 col-lg-4\">\n                                        <label htmlFor=\"price\" className=\"normal-label\">Price</label>\n                                        <input \n                                            type=\"number\" \n                                            className=\"form-control input-file\" \n                                            id=\"price\" \n                                            step=\"any\" \n                                            placeholder=\"Enter view price\" \n                                            onChange={e => {\n                                                setPrice(e.target.value);\n                                                formData.set('price', e.target.value);\n                                            }}\n                                            value={price}\n                                        />\n                                    </div>                            \n                                                        \n                                </div>\n\n                                <div className=\"form-group col-xs-12 col-sm-6 col-lg-6\">\n                                    <label htmlFor=\"image\" className=\"normal-label\">View Image Preview</label>\n                                    <input \n                                        type=\"file\" \n                                        className=\"form-control input-file\" \n                                        id=\"image\" \n                                        accept=\"image/*\"\n                                        placeholder=\"Enter view image preview\"\n                                        ref={imgInputRef}\n                                        onChange={e => {\n                                            let fileExtension = e.target.files[0].name.split('.').pop();\n                                            formData.set('image', e.target.files[0],`preview.${fileExtension}`);                                      \n                                        }}\n                                    />\n                                </div>\n\n                                <div className=\"form-group col-xs-12 col-sm-6 col-lg-6\">\n                                    <label htmlFor=\"imageBase\" className=\"normal-label\">View Image Base</label>\n                                    <input \n                                        type=\"file\" \n                                        className=\"form-control input-file\" \n                                        id=\"imageBase\" \n                                        accept=\"image/*\"\n                                        placeholder=\"Enter view image base\"\n                                        ref={imgBaseInputRef}\n                                        onChange={e => {\n                                            let fileExtension = e.target.files[0].name.split('.').pop();\n                                            formData.set('imageBase', e.target.files[0],`base.${fileExtension}`);                                      \n                                        }}\n                                    />\n                                </div>\n\n                                <div className=\"form-group col-xs-12 col-sm-6 col-lg-6\">\n                                    <label htmlFor=\"imageShadows\" className=\"normal-label\">View Image Shadows</label>\n                                    <input \n                                        type=\"file\" \n                                        className=\"form-control input-file\" \n                                        id=\"imageShadows\" \n                                        accept=\"image/*\"\n                                        placeholder=\"Enter view image shadows\"\n                                        ref={imgShadowsInputRef}\n                                        onChange={e => {\n                                            let fileExtension = e.target.files[0].name.split('.').pop();\n                                            formData.set('imageShadows', e.target.files[0],`shadows.${fileExtension}`);\n                                        }}\n                                    />\n                                </div>\n\n                                <div className=\"form-group col-xs-12 col-sm-6 col-lg-6\">\n                                    <label htmlFor=\"imageHighlights\" className=\"normal-label\">View Image Highlights</label>\n                                    <input \n                                        type=\"file\" \n                                        className=\"form-control input-file\" \n                                        id=\"imageHighlights\" \n                                        accept=\"image/*\"\n                                        placeholder=\"Enter view image highlights\"\n                                        ref={imgHighlightsInputRef}\n                                        onChange={e => {\n                                            let fileExtension = e.target.files[0].name.split('.').pop();\n                                            formData.set('imageHighlights', e.target.files[0],`highlights.${fileExtension}`);                                    \n                                        }}\n                                    />\n                                </div>\n                                \n                                <div className=\"checkbox form-group col-xs-6 col-sm-6 col-lg-6\">\n                                    <label className=\"checkbox\" style={{\"padding-left\": \"0px\"}}>\n                                        Set this as main view\n                                        <input \n                                            style={{\"margin-left\": \"10px\", \"margin-top\": \"5px\"}}\n                                            type=\"checkbox\" \n                                            checked={mainView}\n                                            name=\"mainView\"\n                                            onChange={e => {\n                                                setMainView(e.target.checked);                                         \n                                                formData.set('mainView', e.target.checked);\n                                            }}\n                                            disabled={selectedView && selectedView._id == selectedView.product.mainView}\n                                        />                                        \n                                    </label>\n                                </div>\n                            </div> \n                        </div>\n                        <div className=\"modal-footer\">\n                            <button \n                                type=\"button\" \n                                className=\"btn btn-default\" \n                                onClick={() => {\n                                    onSetModalOpen(false);\n                                }}  \n                            >Cancel</button>\n                            <button \n                                type=\"button\" \n                                className=\"btn btn-dark\"\n                                onClick={clickSubmit}\n                            >{btnName}</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default ViewForm;","// Core Imports\nimport React, { useState, useEffect, Fragment } from \"react\";\nimport DataTable from 'react-data-table-component';\n\n// Custom Component Imports\nimport Alert from '../../common/Alert';\nimport ViewForm from './ViewForm.js';\n\n// Function Imports\nimport { isAuthenticated } from \"../../auth/functions\";\n\n// API Imports\nimport { getViews, deleteView } from \"../../APICalls\";\n\n// TODO: Explanation\nconst ProductViewDataTable = (props) => {\n\n    let { productId } = props;\n\n    // Initial State\n    const [views, setViews] = useState('');\n    const [selectedView, setSelectedView] = useState('');\n    const [filterText, setFilterText] = useState('');\n    const [filteredItems, setFilteredItems] = useState('');\n    const [modalOpen, setModalOpen] = useState(false);\n    const [dataTableError, setDataTableError] = useState(false);\n    const [dataTableSuccess, setDataTableSuccess] = useState(false);\n    const { token } = isAuthenticated();\n\n    // Initial columns configuration\n    const columns = [\n        {\n            name: 'Name',\n            selector: 'name',\n            sortable: true\n        },\n        {\n            name: 'Price',\n            selector: 'price',\n            sortable: true\n        },\n        {\n            name: 'Main View',\n            cell: row => (\n                <div style={{ marginLeft: 20 }}>\n                    <input type=\"checkbox\" checked={row.product.mainView == row._id} />\n                </div>\n            ),\n        },\n        {\n            name: 'Actions',\n            cell: row => actionsBtns(row),\n            ignoreRowClick: true,\n            allowOverflow: true,\n            button: true\n        }\n    ];\n\n    // React Effects -------------------------------------------------------------------------------\n\n    useEffect(() => {\n\n        loadViews();\n\n    }, []);\n\n    useEffect(() => {\n\n        if (views)\n        {\n            const items = views.filter(item => item.name && item.name.toLowerCase().includes(filterText.toLowerCase()));\n            setFilteredItems(items);\n        }\n\n    },[filterText,views]);\n\n    // END React Effects ---------------------------------------------------------------------------\n    \n    // Methods -------------------------------------------------------------------------------------\n\n    const loadViews = () => {\n\n        getViews(token, productId).then(viewData => {\n            \n            if (viewData.error)\n            {\n                //setError(viewData.error);\n            }\n            else\n            {\n                let newDataArray = [];\n\n                viewData.forEach(productView => {\n                                    \n                    if (productView._id == productView.product.mainView)\n                    {\n                        newDataArray.unshift(productView);\n                    }\n                    else\n                    {\n                        newDataArray.push(productView);\n                    }\n                });\n\n                setViews(newDataArray);\n            }\n        });\n    }\n\n    // END Methods ---------------------------------------------------------------------------------\n    \n    // Event Methods -------------------------------------------------------------------------------\n\n    const clickDelete = viewId => {\n\n        deleteView(token,productId, viewId).then(data => {\n\n            if (data.error)\n            {\n                setDataTableError(data.error.description);\n            }\n            else\n            {\n                loadViews();\n                setDataTableSuccess(\"View Deleted\");\n            }\n        });\n    }\n\n    // END Event Methods ---------------------------------------------------------------------------\n\n    // Render Methods ------------------------------------------------------------------------------\n\n    const actionsBtns = row => (\n        <>\n            <button \n                type=\"button\"\n                className=\"btn btn-default btn-sm btn-icon\" \n                data-toggle=\"modal\" \n                data-target=\"#deleteModal\"\n                aria-label=\"remove\" \n                onClick={() => {\n                    setSelectedView(row);\n                }}>\n                <span className=\"glyphicon glyphicon-trash\" aria-hidden=\"true\"></span>\n            </button>\n            &nbsp;&nbsp;\n            <button \n                type=\"button\"\n                className=\"btn btn-default btn-sm btn-icon\" \n                aria-label=\"edit\" \n                onClick={() => {\n                    setSelectedView(row);\n                    setModalOpen(true);\n                }}>\n                <span className=\"glyphicon glyphicon-pencil\" aria-hidden=\"true\"></span>\n            </button>\n        </>\n    );\n\n    const BtnNew = () => (\n        <div className=\"\">\n            <div className=\"text-right\">\n                <button \n                    type=\"button\" \n                    className=\"btn btn-dark dashboard-container-button\" \n                    onClick={() => {\n                        setSelectedView(null);\n                        setModalOpen(true);\n                    }}\n                    aria-label=\"new\" \n                >New Product View</button>\n            </div>\n        </div> \n    );\n\n    const modalDeleteConfirm = () => {\n        return(\n            <div className=\"modal fade\" id=\"deleteModal\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\n                <div className=\"modal-dialog\" role=\"document\">\n                    <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\n                        <h4 className=\"modal-title\" id=\"myModalLabel\">Delete Confirmation</h4>\n                    </div>\n                    <div className=\"modal-body\">\n                        {selectedView && `Do you want to delete view ${selectedView.name}?`}\n                    </div>\n                    <div className=\"modal-footer\">\n                        <button \n                            type=\"button\" \n                            className=\"btn btn-default\" \n                            data-dismiss=\"modal\"\n                        >Cancel</button>\n                        <button \n                            type=\"button\" \n                            className=\"btn btn-dark\"\n                            data-dismiss=\"modal\"\n                            onClick={() => {\n                                clickDelete(selectedView._id);\n                            }}\n                        >Delete</button>\n                    </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    const FilterComponent = ( filterText ) => (\n        <>\n          <div className=\"input-group\">\n                <input \n                    type=\"text\" \n                    className=\"form-control\" \n                    placeholder=\"View Name\" \n                    ariaDescribedby=\"sizing-addon2\"\n                    value={filterText} \n                    onChange={e => setFilterText(e.target.value)}\n                    style={{borderRadius:'0'}} \n                />\n                <span className=\"input-group-addon\" id=\"sizing-addon2\" style={{borderRadius:'0'}} >Search</span>\n            </div>\n        </>\n    );\n\n    // END Render Methods --------------------------------------------------------------------------\n\n    // Main render\n    return (\n        <Fragment>  \n            {modalDeleteConfirm()}\n            <ViewForm \n                productId={productId}\n                selectedView={selectedView}\n                numberOfViews={views.length}\n                onDataTableError = {(value) => setDataTableError(value)}\n                onDataTableSuccess = {(value) => setDataTableSuccess(value)}\n                onReloadViews = {() => loadViews()}\n                onSetModalOpen = {(value) => setModalOpen(value)}\n                modalOpen={modalOpen}\n            />\n            <div className=\"row\">\n                <Alert \n                    error = {dataTableError}\n                    success = {dataTableSuccess}\n                    onError = {(value) => {setDataTableError(value)}}\n                    onSuccess = {(value) => {setDataTableSuccess(value)}}\n                />\n            </div>\n            <DataTable\n                columns={columns}\n                data={filteredItems}\n                defaultSortField=\"printingType\"\n                pagination\n                highlightOnHover\n                pointerOnHover\n                subHeader\n                subHeaderComponent={[BtnNew(),FilterComponent()]}\n            />\n        </Fragment>\n    );\n}\n\nexport default ProductViewDataTable;","// Core Imports\nimport React, { Fragment } from 'react';\nimport { useParams } from 'react-router-dom';\n\n// Custom Component Imports\nimport ProducViewtDataTable from '../ProductViews/ProductViewDataTable';\nimport Layout from '../../core/Layout';\n\n// TODO: Explanation\nconst ProductViews = () => {\n\n    let { id } = useParams();\n\n    // Render Methods ------------------------------------------------------------------------------\n\n    const productViewManagenmentSection = () => {\n\n        return (\n            <Fragment>  \n                <div className=\"container ptb--40\">   \n                    <div className=\"row\">\n                        <ProducViewtDataTable productId={id} />\n                    </div>\n                </div>\n            </Fragment>\n        );\n    };\n\n    // END Render Methods --------------------------------------------------------------------------\n\n    // Main Render\n    return (\n        <Layout \n            title = \"Home Page\"\n            description = \"Ecommerce\"\n            showBreadcrumb = {true}\n            currentPage = \"Admin Dashboard\"       \n        >      \n            {productViewManagenmentSection()}\n        </Layout>\n    );\n};\n\nexport default ProductViews;","// Core Imports\nimport React, { useState, useEffect } from 'react';\n\nimport Config from '../../config'\n\n// Quick access side cart\nconst Product = ({ product, delCallback, editCallback }) => {\n\n    // Initial state\n    const [productQty, setProductQty] = useState(0);\n    const [productSize, setProductSize] = useState('');\n\n    // This is needed to update initially the qty correctly\n    useEffect(() => setProductQty(product.qty), [product.qty]);\n\n    const deleteProductFromCart = () => {\n\n        // TODO: Maybe show a warning?\n\n        if (delCallback)\n        {\n            delCallback(product.id);\n        }\n    }\n\n    const onChangeQty = (event) => {\n\n        let newValue = event.target.value;\n\n        if (newValue > 0)\n        {\n            setProductQty(newValue);\n\n            if (editCallback)\n            {\n                editCallback(product, newValue, 'qty');\n            }\n        }\n    }\n\n    const changeProductSize = (event) => {\n\n        let newValue = event.target.value;\n        product.size = newValue;\n\n        setProductSize(newValue);\n\n        if (editCallback)\n        {\n            editCallback(product, newValue, 'size');\n        }\n    }\n\n    const renderSizeSelector = () => {\n\n        return (\n            <select className=\"select-size\" style={{ height:40, width: 65, paddingLeft: 10, paddingRight: 5 }} onChange={changeProductSize} value={product.size}>\n                {Config.SIZES.map(option => <option key={option.code} value={option.code}>{option.code}</option>)}\n            </select>\n        );\n    }\n\n    // Main Render\n    return (\n        <tr>\n            <td className=\"product-thumbnail\">\n                <a href={`/design/${product.productType}/edit/${product.id}/print/${product.category.printingType._id}`}>\n                    <img className=\"image-product-cart-full\" src={product.image} alt=\"product images\" />\n                </a>\n            </td>\n            <td className=\"product-name\"><a href={`/design/${product.productType}/edit/${product.id}/print/${product.category.printingType._id}`}>{product.name}</a></td>\n            <td className=\"product-price\"><span className=\"amount\">${product.price}</span></td>\n            <td className=\"product-quantity\"><input type=\"number\" value={productQty} onChange={onChangeQty} /></td>\n            <td className=\"product-size\">{renderSizeSelector()}</td>\n            <td className=\"product-subtotal\">${(product.price * productQty).toFixed(2)}</td>\n            <td className=\"product-remove\"><a href=\"javascript:void(0)\" title=\"Remove this item\" onClick={deleteProductFromCart}><i className=\"zmdi zmdi-close\"></i></a></td>\n        </tr>\n    );\n};\n\nexport default Product;","// Core Imports\nimport React, { useEffect, useState, useCallback }  from 'react';\nimport { useIndexedDB } from 'react-indexed-db';\n\n// Custom Component Imports\nimport Product from './Product'\n\n// Custom Component Imports\nimport Layout from '../../core/Layout';\n\n// Misc Imports\nimport Config from '../../config'\n\nconst FullCart = () => {\n\n    // Initial state\n    const [cart, setCart] = useState();\n    const [subtotal, setSubtotal] = useState(0);\n    const [cartLastUpdate, setCartLastUpdate] = useState(localStorage.getItem('cartLastUpdate'));\n    const { getAll, deleteRecord, update } = useIndexedDB('cart');\n\n    // Events --------------------------------------------------------------------------------------\n\n    const onLocalStorageChange = useCallback(event => {\n\n        console.log('FullCart@onLocalStorageChange');\n\n        if (event.key && event.key === 'cartLastUpdate' && event.oldValue !== event.newValue)\n        {\n            updateCart();\n        }\n\n    }, []);\n\n    // This receives the product from the iframe\n    const onMessageReceived = useCallback(event => {\n\n        console.log('FullCart@onMessageReceived()');\n\n        if (event.data === 'updateCart' && event.origin === Config.HOME_URL)\n        {\n            let storageCartLastUpdate = localStorage.getItem('cartLastUpdate');\n\n            if (storageCartLastUpdate !== null && storageCartLastUpdate !== cartLastUpdate)\n            {\n                setTimeout(() => {\n\n                    updateCart();\n                    setCartLastUpdate(storageCartLastUpdate);\n    \n                }, 750);\n            }\n        }\n        else\n        {\n            if (event.origin !== Config.BASE_FPD_URL) return;\n\n            setTimeout(() => {\n\n                updateCart();\n\n            }, 750);\n        }\n\n    }, []);\n\n    // Delete item from cart\n    const onDeleteProduct = useCallback(id => {\n\n        console.log('onDeleteProduct ' + id);\n\n        if (id)\n        {\n            deleteRecord(id).then(\n                \n                // Accept\n                event => {\n                    console.log('Deleted product form cart!');\n                    updateCart();\n                    window.postMessage('updateCart', '*');\n                    localStorage.setItem('cartLastUpdate', Date.now());\n                },\n\n                // Reject\n                error => {\n                    // TODO: Maybe, if there is a server-side persisting of the cart,\n                    // retrieve it and update the local storage? This must be confirmed.\n                    // TODO: Process error here\n                    console.log(error);\n                }\n            );\n        }\n\n    }, []);\n\n    const onEditProduct = useCallback((product, newValue, field) => {\n\n        console.log('onEditProduct ' + product.id);\n\n        if (true)\n        {\n            product[field] = newValue;\n\n            update(product).then(\n\n                // Accept\n                () => {\n                    console.log('Product Updated successfully!.');\n                    window.postMessage('updateCart', '*');\n                    localStorage.setItem('cartLastUpdate', Date.now());\n                    updateCart();\n                },\n\n                // Reject\n                error => {\n\n                    console.log(error);\n                }\n            );\n        }\n    });\n\n    // END Events ----------------------------------------------------------------------------------\n\n    // React Effects -------------------------------------------------------------------------------\n\n    useEffect(() => updateCart(), []);\n\n    useEffect(() => {\n\n        window.addEventListener(\"message\", onMessageReceived);\n        return () => window.removeEventListener(\"message\", onMessageReceived);\n\n    }, [onMessageReceived]);\n\n    useEffect(() => {\n\n        window.addEventListener(\"storage\", onLocalStorageChange);\n        return () => window.removeEventListener(\"storage\", onLocalStorageChange);\n\n    }, [onLocalStorageChange]);\n\n    // END React Effects ---------------------------------------------------------------------------\n\n    // Methods -------------------------------------------------------------------------------------\n\n    // Update the items and information in the cart.\n    const updateCart = () => {\n\n        getAll().then(\n            \n            // Accept\n            cart => {\n\n                let subtotal = 0;\n\n                // Calculate the current subtotal\n                for(var i = 0; i < cart.length; i++)\n                {\n                    subtotal += cart[i].price * cart[i].qty;\n                }\n\n                setCart(cart);\n                setSubtotal(subtotal);\n                localStorage.setItem('cartHasItems', cart.length > 0);\n\n            },\n\n            // Reject\n            error => {\n                // TODO: Maybe, if there is a server-side persisting of the cart,\n                // retrieve it and update the local storage? This must be confirmed.\n                // TODO: Process error here\n                console.log(error);\n            }\n        );\n    }\n\n    // END Methods ---------------------------------------------------------------------------------\n\n    // Render Methods ------------------------------------------------------------------------------\n\n    // Render all current items in the cart\n    const renderProducts = () => {\n\n        if (cart && cart.length > 0)\n        {\n            return cart.map(product => {\n\n                return(\n                    <Product key={product.id} product={product} editCallback={onEditProduct} delCallback={onDeleteProduct} />\n                )\n            })\n        }\n        else\n        {\n            return null;\n        }\n    }\n\n    const renderContent = () => {\n\n        if (cart && cart.length > 0)\n        {\n            return (\n                <div className=\"cart-main-area ptb--60 bg__white\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12 col-sm-12 col-xs-12\">\n                                <div className=\"table-content table-responsive\">\n                                    <table>\n                                        <thead>\n                                            <tr>\n                                                <th className=\"product-thumbnail\">Preview</th>\n                                                <th className=\"product-name\">Product</th>\n                                                <th className=\"product-price\">Price</th>\n                                                <th className=\"product-quantity\">Quantity</th>\n                                                <th className=\"product-size\">Size</th>\n                                                <th className=\"product-subtotal\">Total</th>\n                                                <th className=\"product-remove\">Remove</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {renderProducts()}\n                                        </tbody>\n                                    </table>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-md-3\">\n                                        <ul className=\"shopping__btn\">\n                                            <li><a href=\"/screen-printing/traditional\">Keep Shopping</a></li>\n                                        </ul>\n                                        {/*<div className=\"coupon\">\n                                            <h3>Coupon</h3>\n                                            <p>Enter your coupon code if you have one.</p>\n                                            <input type=\"text\" placeholder=\"Coupon code\" />\n                                            <input type=\"submit\" value=\"Apply Coupon\" />\n                                        </div>*/}\n                                    </div>\n                                    <div className=\"col-md-3 col-md-offset-6\">\n                                        <div className=\"our-important-note\">\n                                            <ul className=\"shoping__total\" style={{ border: 0, paddingTop: 0}}>\n                                                <li className=\"subtotal\">Sub-Total:</li>\n                                                <li className=\"total__price\" style={{ fontSize: 20 }}>${subtotal.toFixed(2)}</li>\n                                            </ul>\n                                            <ul className=\"shopping__btn\">\n                                                <li className=\"shp__checkout\">\n                                                    <a href=\"/checkout\">Proceed to Checkout</a>\n                                                </li>\n                                            </ul>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n        else\n        {\n            return (\n                <div className=\"cart-main-area ptb--60 bg__white\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-4 col-md-offset-4\">\n                                <ul style={{ paddingTop: 22, paddingBottom: 22}}>\n                                    <li style={{ fontSize: 22, textAlign: 'center'}}>Cart is empty <span className=\"ti-face-sad\"></span>!</li>\n                                </ul>\n                                <ul className=\"shopping__btn\">\n                                    <li><a href=\"/screen-printing/traditional\">Go to Shop</a></li>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n    }\n\n    // END Render Methods --------------------------------------------------------------------------\n\n    // Main Render\n    return (\n        <Layout \n            title = \"Screen Printing Page\"\n            description = \"Ecommerce\"\n            showBreadcrumb = {false}\n        >\n            {renderContent()}\n        </Layout>\n    );\n};\n\nexport default FullCart;","// Core Imports\nimport React from 'react';\n\n// Custom Component Imports\nimport Breadcrumb from './Breadcrumb';\nimport Footer from './Footer';\n\nimport SideCart from '../cart/sideCart'\n\n// Function Imports\nimport useScript from '../utils/customHooks';\n\n// TODO: Explanation\n// TODO: title and description params are not being used\nconst Layout = ({\n    title = \"Title\", \n    description = \"Descrition\", \n    currentPage = \"Current\", \n    className,\n    children,\n    showBreadcrumb = true,\n}) => {\n\n    useScript(window.location.origin+'/js/main.js');\n\n    // Main Render\n    return (\n        <>            \n            {showBreadcrumb && <Breadcrumb currentPage={currentPage} />}\n            <div className={className}>\n                <div className=\"body__overlay\"></div>\n                <div className=\"offset__wrapper\">\n                    \n                </div>\n                {children}\n            </div>\n            \n        </>  \n    );\n};\n\nexport default Layout;","// Core Imports\nimport React, { useState, useEffect } from 'react';\nimport { useIndexedDB } from 'react-indexed-db';\n\nimport Config from '../config'\n\n//Product 2\n\nconst Product2 = ({ product, delCallback, editCallback }) => {\n    \n    // Initial state\n    const [productQty, setProductQty] = useState(0);\n    const [productSize, setProductSize] = useState('');\n    const { update } = useIndexedDB('cart');\n\n    // This is needed to update initially the qty correctly\n    useEffect(() => setProductQty(product.qty), [product.qty]);\n    useEffect(() => setProductSize(product.size), [product.size]);\n  \n\n    const deleteProductFromCart = () => {\n\n        // TODO: Maybe show a warning?\n\n        delCallback(product._id);\n    }\n\n    const onChangeQty = (event) => {\n\n        let newValue = event.target.value;\n\n        if (newValue > 0)\n        {\n            setProductQty(newValue);\n\n            if (editCallback)\n            {\n                editCallback(product, newValue, 'qty');\n            }\n        }\n    }\n\n    const changeProductSize = (event) => {\n\n        let newValue = event.target.value;\n        product.size = newValue;\n\n        update(product).then(\n\n            // Accept\n            () => {\n\n                setProductSize(newValue);\n                window.postMessage('updateCart', '*');\n                localStorage.setItem('cartLastUpdate', Date.now());\n            },\n\n            // Reject\n            error => {\n\n                console.log(error);\n            }\n        );\n\n    }\n\n    const renderSizeSelector = () => {\n\n        return (\n            <select className=\"select-size\" onChange={changeProductSize} value={productSize}>\n                {Config.SIZES.map(option => <option key={option.code} value={option.code}>{option.code}</option>)}\n            </select>\n        );\n    }\n\n    // Main Render\n    return (\n        <div className=\"checkout-single-product\">\n            \n            <div className=\"shp__pro__thumb\">\n                \n                \n                <img src={`${Config.API}/${product.imageURL}`}  onError={(e)=>{\n                                                                e.target.onerror = null; \n                                                                //e.target.src=\"images/product/1.png\"\n                                                            }}\n                                                            alt=\"Wroker Imagen\"\n                                                            style={{maxHeight: '80px'}} />\n            </div>\n            <div className=\"shp__pro__details\" style={{zIndex:100}}>\n                <span className=\"checkout-name\">{product.name}</span>\n\n                \n            </div>\n            \n            \n        </div>\n    );\n};\n\n\n\n\nexport default Product2;","// Core Imports\nimport React, { useState, useCallback, useEffect, useRef } from 'react';\nimport { useIndexedDB } from 'react-indexed-db';\nimport PhoneInput from 'react-phone-number-input/input'\nimport { createOrder, updateOrder, getShippingRates, getProduct } from '../APICalls'\nimport { createRating } from \"../APICalls\";\nimport { Redirect } from 'react-router-dom';\n\n\n// Custom Component Imports\nimport Layout from '../core/Layout2';\nimport Product2 from './Product2';\nimport BeautyStars from 'beauty-stars';\n\n// Function Imports\nimport { isAuthenticated } from '../auth/functions';\n\n// Misc Imports\nimport Config from '../config'\n\n// TODO: Explanation\n\n\n\nconst getQueryVariable = (variable) => {\n    var query = window.location.search.substring(1);\n    //console.log(query)//\"app=article&act=news_content&aid=160990\"\n    var vars = query.split(\"&\");\n    //console.log(vars) //[ 'app=article', 'act=news_content', 'aid=160990' ]\n    for (var i = 0; i < vars.length; i++) {\n        var pair = vars[i].split(\"=\");\n        //console.log(pair)//[ 'app', 'article' ][ 'act', 'news_content' ][ 'aid', '160990' ] \n        if (pair[0] == variable) {\n            //console.log('pair1',pair[1]);\n            return pair[1];\n        }\n    }\n    return (false);\n}\n\n\n\n\n\nconst Checkout = (params) => {\n\n    // Initial state\n    const { user, token } = isAuthenticated();\n    const [cart, setCart] = useState();\n    const [numberOfItems, setNumberOfItems] = useState(0);\n    const [subtotal, setSubtotal] = useState(0);\n    const [cartLastUpdate, setCartLastUpdate] = useState(localStorage.getItem('cartLastUpdate'));\n    const [redirectToPayment, setRedirectToPayment] = useState(0);\n    const [orderId, setOrderId] = useState(localStorage.getItem('orderId'));\n    const [postalCode, setPostalCode] = useState('');\n    const [shippingFee, setShippingFee] = useState(0);\n    const [weight, setWeight] = useState(0);\n    const { getAll, deleteRecord, update } = useIndexedDB('cart');\n    const [currentProduct, setCurrentProduct] = useState('');\n    const [currentOrder, setCurrentOrder] = useState('');\n    const [price, setPrice] = useState(0);\n    const [priceBill, setPriceBill] = useState('');\n    const [trFee, setTrFee] = useState(0);\n    const [term, setTerm] = useState(0);\n    const [goodService, setGoodService] = useState(0);\n    const [atmosphere, setAtmosphere] = useState(0);\n    const [dish, setDish] = useState(0);\n    const [tasty, setTasty] = useState(0);\n    const [porcent, setPorcent] = useState(10);\n    const [data, setData] = useState({\n        loading: false,\n        success: false,\n        clientToken: null,\n        error: '',\n        instance: {},\n        address: ''\n    });\n    const [valueStar, setValueStar] = useState(0);\n    const [selectedOrderItemReview, setSelectedOrderItemReview] = useState({});\n    const [descrReview, setDescrReview] = useState('');\n    const [error, setError] = useState(false);\n\n    let currentData = localStorage.getItem('jwt') ? JSON.parse(localStorage.getItem('jwt')) : '';\n    // console.log('currentData', localStorage);\n\n    let worker = getQueryVariable('worker');\n    console.log('worker:', worker);\n\n    const [shippingInfo, setShippingInfo] = useState(\n        {\n            name: currentData !== '' ? currentData.user.name : '',\n            email: currentData !== '' ? currentData.user.email : '',\n            confirmEmail: currentData !== '' ? currentData.user.email : '',\n            phone: currentData !== '' ? currentData.phoneNumber : '',\n            addressLine1: currentData !== '' ? currentData.street : '',\n            city: currentData !== '' ? currentData.city : '',\n            state: currentData !== '' ? currentData.state : '',\n            postalCode: '',\n            country: currentData !== '' ? currentData.name : '',\n        }\n    );\n\n    const [errorFieldMessages, setErrorFieldMessages] = useState(\n        {\n            name: null,\n            email: null,\n            confirmEmail: null,\n            phone: null,\n            addressLine1: null,\n            addressLine2: null,\n            city: null,\n            state: null,\n            postalCode: null,\n        }\n    );\n\n    const showBlockSuccessUIModalReviewRef = useRef(null);\n    const hideBlockSuccessUIModalReviewRef = useRef(null);\n\n    // Events --------------------------------------------------------------------------------------\n\n    const clickSubmitReview = e => {\n        e.preventDefault();\n        setError(false);\n        if (valueStar > 0 && descrReview != '') {\n            createRating(token, {\n                rating: valueStar,\n                review: descrReview,\n                product: currentOrder.order.product_id,\n                user: user._id\n            }).then(data => {\n                if (data.message == 'The rating already exist') {\n                    setError(data.message);\n                    return\n                }\n                if (data.error) {\n                    setError(data.error.description);\n                    console.log('error', error)\n                }\n                else {\n                    /// showBlockSuccessUIModalRef.current.click();\n                    setValueStar(0);\n                    setDescrReview('');\n                    //setSuccess(\"Review Created\");\n                }\n            })\n        }\n        else {\n            setError(\"Must indicate a value for the rating / description\");\n            return\n        }\n    };\n\n\n\n    const onLocalStorageChange = useCallback(event => {\n\n        console.log('Checkout@onLocalStorageChange');\n\n        if (event.key && event.key === 'cartLastUpdate' && event.oldValue !== event.newValue) {\n            updateCart();\n        }\n\n    }, []);\n\n    // This receives the product from the iframe\n    const onMessageReceived = useCallback(event => {\n\n        console.log('Checkout@onMessageReceived()');\n\n        if (event.data === 'updateCart' && event.origin === Config.HOME_URL) {\n            let storageCartLastUpdate = localStorage.getItem('cartLastUpdate');\n\n            if (storageCartLastUpdate !== null && storageCartLastUpdate !== cartLastUpdate) {\n                setTimeout(() => {\n\n                    updateCart();\n                    setCartLastUpdate(storageCartLastUpdate);\n\n                }, 750);\n            }\n        }\n        else {\n            if (event.origin !== Config.BASE_FPD_URL) return;\n\n            setTimeout(() => {\n\n                updateCart();\n\n            }, 750);\n        }\n\n    }, []);\n\n    // Delete item from cart\n    const onDeleteProduct = useCallback(id => {\n\n        console.log('onDeleteProduct ' + id);\n\n        if (id) {\n            deleteRecord(id).then(\n\n                // Accept\n                event => {\n                    console.log('Deleted product form cart!');\n                    updateCart();\n                    window.postMessage('updateCart', '*');\n                    localStorage.setItem('cartLastUpdate', Date.now());\n                },\n\n                // Reject\n                error => {\n                    // TODO: Maybe, if there is a server-side persisting of the cart,\n                    // retrieve it and update the local storage? This must be confirmed.\n                    // TODO: Process error here\n                    console.log(error);\n                }\n            );\n        }\n\n    }, []);\n\n    const onEditProduct = useCallback((product, newValue, field) => {\n\n        console.log('onEditProduct ' + product.id);\n\n        if (true) {\n            product[field] = newValue;\n\n            update(product).then(\n\n                // Accept\n                () => {\n                    console.log('Product Updated successfully!.');\n                    window.postMessage('updateCart', '*');\n                    localStorage.setItem('cartLastUpdate', Date.now());\n                    updateCart();\n                },\n\n                // Reject\n                error => {\n\n                    console.log(error);\n                }\n            );\n        }\n    });\n\n    // END Events ----------------------------------------------------------------------------------\n\n    // React Effects -------------------------------------------------------------------------------\n\n    useEffect(() => {\n        updateCart();\n\n\n\n    }, []);\n\n    useEffect(() => {\n\n        window.addEventListener(\"message\", onMessageReceived);\n\n        getProduct(worker).then(data => {\n\n            if (data.error) {\n                //setError(data.error);\n                //TODO: mostrar mensaje de error\n            }\n            else {\n                console.log('data de product', data);\n                setCurrentProduct(data);\n                //return data;\n            }\n        });\n\n\n        return () => window.removeEventListener(\"message\", onMessageReceived);\n\n\n    }, [onMessageReceived]);\n\n    useEffect(() => {\n        window.addEventListener(\"storage\", onLocalStorageChange);\n        return () => window.removeEventListener(\"storage\", onLocalStorageChange);\n\n    }, [onLocalStorageChange]);\n\n    /*useEffect(() => {\n        getQueryVariable('id');\n        if (postalCode === undefined || postalCode.length < 5) \n        {\n            setShippingFee(0);\n            return;\n        }\n\n        getShippingRates(postalCode, weight).then(data => {\n            if( data !==undefined && data.rate !== undefined){\n                setShippingFee(data.rate);\n            }\n            else\n            {\n                setShippingFee(0);\n            }\n        });\n    }, [postalCode]);\n    \n    useEffect(() => {\n        getQueryVariable('id');\n        if (weight !== undefined && weight > 0)\n        {\n            getShippingRates(postalCode, weight).then(data => {\n                if( data !==undefined && data.rate !== undefined){\n                    setShippingFee(data.rate);\n                }\n                else\n                {\n                    setShippingFee(0);\n                }\n            });\n        }\n    }, [weight]);*/\n\n    useEffect(() => {\n        localStorage.setItem('shippingFee', shippingFee);\n    }, [shippingFee]);\n\n    // END React Effects ---------------------------------------------------------------------------\n\n    // Methods -------------------------------------------------------------------------------------\n\n    // Update the items and information in the cart.\n    const updateCart = () => {\n\n        getAll().then(\n\n            // Accept\n            cart => {\n                let total = 0;\n                let _numberOfItems = 0;\n                let totalWeight = 0;\n\n                // Calculate the current total\n                for (var i = 0; i < cart.length; i++) {\n                    total += cart[i].price * parseInt(cart[i].qty);\n                    _numberOfItems += parseInt(cart[i].qty);\n                    totalWeight += parseInt(cart[i].qty) * cart[i].weight;\n\n                }\n\n                setWeight(Math.ceil(totalWeight));\n                setCart(cart);\n                setSubtotal(total);\n                setNumberOfItems(_numberOfItems);\n                localStorage.setItem('cartHasItems', _numberOfItems > 0);\n            },\n\n            // Reject\n            error => {\n\n                // TODO: Maybe, if there is a server-side persisting of the cart,\n                // retrieve it and update the local storage? This must be confirmed.\n                // TODO: Process error here\n                console.log(error);\n            }\n        );\n    }\n\n    const onChangeText = e => {\n\n        const { name, value } = e.target\n\n        if (name === 'postalCode') {\n            setPostalCode(value);\n        }\n\n        setShippingInfo(prevState => ({\n            ...prevState,\n            [name]: value\n        }));\n\n        if (errorFieldMessages[name] !== '' || errorFieldMessages[name] !== null) {\n            setErrorFieldMessages(prevState => ({\n                ...prevState,\n                [name]: null\n            }));\n        }\n    }\n\n    const onChangePhoneNumber = value => {\n        setShippingInfo(prevState => ({\n            ...prevState,\n            phone: value\n        }));\n\n        if (errorFieldMessages.phone !== '' || errorFieldMessages.phone !== null) {\n            setErrorFieldMessages(prevState => ({\n                ...prevState,\n                phone: null\n            }));\n        }\n    }\n\n    const onClickTrFee = () => {\n        if (trFee == 0) {\n            setTrFee(1);\n        }\n        else {\n            setTrFee(0);\n        }\n        \n    }\n\n    const onClickTerm = () => {\n        if (term == 0) {\n            setTerm(1);\n        }\n        else {\n            setTerm(0);\n        }\n        \n    }\n\n\n    const onClickGoodService = () => {\n        if (goodService == 0) {\n            setGoodService(1);\n        }\n        else {\n            setGoodService(0);\n        }\n        \n    }\n\n    const onClickAtmosphere = () => {\n        if (atmosphere == 0) {\n            setAtmosphere(1);\n        }\n        else {\n            setAtmosphere(0);\n        }\n        \n    }\n\n    const onClickDish = () => {\n        if (dish == 0) {\n            setDish(1);\n        }\n        else {\n            setDish(0);\n        }\n        \n    }\n\n    const onClickTasty = () => {\n        if (tasty == 0) {\n            setTasty(1);\n        }\n        else {\n            setTasty(0);\n        }\n        \n    }\n\n    const onClickPorcent = (porcentNumber) => {\n        if (porcentNumber == 10) {\n            setPorcent(10);\n            if (priceBill > 0) { setPrice((priceBill * 0.10).toFixed(2)) }\n        }\n        if (porcentNumber == 15) {\n            setPorcent(15);\n            if (priceBill > 0) { setPrice((priceBill * 0.15).toFixed(2)) }\n        }\n        if (porcentNumber == 20) {\n            setPorcent(20);\n            if (priceBill > 0) { setPrice((priceBill * 0.20).toFixed(2)) }\n        }\n        \n    }\n\n\n\n\n    \n\n    const onChangeSelectedState = e => {\n\n        e.preventDefault();\n\n        if (e && e.target) {\n            const { name, value } = e.target\n\n            setShippingInfo(prevState => ({\n                ...prevState,\n                [name]: value\n            }));\n\n            if (errorFieldMessages[name] !== '' || errorFieldMessages[name] !== null) {\n                setErrorFieldMessages(prevState => ({\n                    ...prevState,\n                    [name]: null\n                }));\n            }\n        }\n    }\n\n    const showErrorMsg = (field) => {\n\n        if (errorFieldMessages[field]) {\n            return <label className=\"checkout-field-error-msg\">{errorFieldMessages[field]}</label>\n        }\n        else return null;\n    }\n\n    const onSubmitForm = () => {\n\n        let errors = {\n            name: null,\n            email: null,\n            phone: null,\n            addressLine1: null,\n            city: null,\n            state: null,\n            postalCode: null,\n        }\n\n        let hasErrors = false;\n        \n\n        if (price == 0) {\n            errors.name = 'Please, enter amount in the bill';\n            hasErrors = true;\n        }\n\n        if (term == 0) {\n            errors.name = 'Please, accept terms...';\n            hasErrors = true;\n        }\n\n        if (trFee == 0) {\n            errors.name = 'Please, accept fees...';\n            hasErrors = true;\n        }\n\n        \n\n\n        setErrorFieldMessages(prevState => ({\n            ...prevState,\n            ...errors\n        }));\n\n        if (!hasErrors) {\n\n            let formData = new FormData();\n            console.log('currentProduct for JSON', currentProduct);\n            //formData.append('name', shippingInfo.name);\n            //formData.append('phone', shippingInfo.phone);\n            //formData.append('email', shippingInfo.email);\n            //formData.append('addressLine1', shippingInfo.addressLine1);\n            //formData.append('city', shippingInfo.city);\n            //formData.append('state', shippingInfo.state);\n            //formData.append('postalCode', shippingInfo.postalCode);\n            formData.append('price', price);\n            formData.append('term', term);\n            formData.append('trFee', trFee);\n            formData.append('dish', dish);\n            formData.append('atmosphere', atmosphere);\n            formData.append('tasty', tasty);\n            formData.append('goodService', goodService);\n            formData.append('porcent', porcent);\n            formData.append('valueStar', valueStar);\n            formData.append('product_id', currentProduct._id);\n            formData.append('product', JSON.stringify(currentProduct));\n\n\n            createOrder(formData, token).then(data => {\n                setTimeout(() => {\n                    \n                    setOrderId(data._id);\n                    setError(false);\n                    if (valueStar > 0) {\n                        let newReview = {dish: dish, tasty: tasty, goodService:goodService, atmosphere: atmosphere};\n                        createRating(token, {\n                        rating: valueStar,\n                        review: newReview,\n                        product: currentProduct._id,\n                        user: user ? user._id : '61bea35a889ca550650d4fff'\n                        }).then(data => {\n                            if (data.message == 'The rating already exist') {\n                                setError(data.message);\n                                return\n                            }\n                            if (data.error) {\n                                setError(data.error.description);\n                                console.log('error', error)\n                            }\n                            else {\n                                /// showBlockSuccessUIModalRef.current.click();\n                                setValueStar(0);\n                                setDescrReview('');\n                                //setSuccess(\"Review Created\");\n                                }\n                        })\n                    }\n                    localStorage.setItem('orderId', data._id);\n                    setRedirectToPayment(true);\n                }, 1500);\n            });\n\n\n\n\n        }\n    }\n\n    // END Methods ---------------------------------------------------------------------------------\n\n    // Render Methods ------------------------------------------------------------------------------\n\n    const renderRedirect = () => {\n        if (redirectToPayment) {\n            return <Redirect to={{ pathname: \"/payment\", orderId: orderId }} />\n        }\n    }\n\n    // Render all current items in the cart\n    const renderProducts = () => {\n        let currentProduct0 = [];\n\n        if (currentProduct) {\n            currentProduct0.push(currentProduct);\n            console.log('currentProduct0', currentProduct0)\n            return currentProduct0.map(product => {\n\n                return (\n                    <div key={product._id} className=\"checkout__cart__wrap\">\n                        <Product2 product={product} editCallback={onEditProduct} delCallback={onDeleteProduct} />\n                    </div>\n                )\n            })\n        }\n        else {\n            return (<span>...</span>);\n        }\n    }\n\n    const renderFormField = (type, fieldName, onChangeCb, placeholder, props) => {\n\n        const hasError = errorFieldMessages[fieldName] !== '' && errorFieldMessages[fieldName] !== null;\n        const className = hasError ? 'checkout-field-error' : '';\n\n        if (type !== 'tel' && type !== 'select') {\n            return (\n                <input type={type} name={fieldName} className={className} value={shippingInfo[fieldName]} onChange={onChangeCb} placeholder={placeholder} {...props} />\n            );\n        }\n        else if (type === 'tel') {\n            return (\n                <PhoneInput name={fieldName} value={shippingInfo[fieldName]} onChange={onChangeCb} placeholder={placeholder} {...props} />\n            );\n        }\n        else if (type === 'select') {\n            return (\n\n                <select name={fieldName} className={className} value={shippingInfo[fieldName]} onChange={onChangeCb}>\n                    <option value='default'>{props.defaultOption}</option>\n                    {props.options.map(row => <option key={row[props.key]} value={row[props.key]}>{row[props.value]}</option>)}\n                </select>\n            );\n        }\n        else return null;\n\n    }\n\n    const renderFormFieldContainer = (type, fieldName, labelName, onChangeCb, placeholder, props) => {\n\n        const errorStyle = errorFieldMessages[fieldName] ? { marginBottom: 4 } : {};\n\n        return (\n            <div className=\"single-checkout-box-div\" style={errorStyle}>\n                <label htmlFor={fieldName} className=\"normal-label\">{labelName}</label>\n                {renderFormField(type, fieldName, onChangeCb, placeholder, props)}\n                {showErrorMsg(fieldName)}\n            </div>\n        );\n    }\n\n    const renderShippingForm = () => {\n\n        return (\n            <form className=\"pasadena-checkout-form-inner\" autoComplete=\"off\">\n\n                <div className=\"input-checkout-container col-xg-12 col-md-12 col-xs-12\">\n                    <div \n                        class=\"botonbill col-xg-4 col-md-4 col-xs-4\" \n                        onClick={() => onClickPorcent(10)}\n                        style={{ backgroundColor: porcent == 10 ? 'gray' : 'white' }}\n                    >  \n                        <b><span>10%</span></b>\n                    </div>\n                    <div \n                        class=\"botonbill col-xg-4 col-md-4 col-xs-4\"\n                        onClick={() => onClickPorcent(15)}\n                        style={{ backgroundColor: porcent == 15 ? 'gray' : 'white' }}\n                    >\n                         <b><span>15%</span></b> \n                    </div>\n                    <div \n                        class=\"botonbill col-xg-4 col-md-4 col-xs-4\"\n                        onClick={() => onClickPorcent(20)}\n                        style={{ backgroundColor: porcent == 20 ? 'gray' : 'white' }}\n                    >\n                        <b><span>20%</span></b> \n                    </div>\n                </div>\n\n                <div className=\"itiptiptop-amount-tip\">\n                    \n                <div className=\"tiptiptop-amount-tip font-white font-18\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{price}$ <span className=\"label2\">Tip amount</span></div>\n                </div>\n\n                <div>\n                    <input type=\"text\" disabled className=\"label2 bg_tip\" name=\"ratelabel\" value=\"Rate your experience\"></input>\n                </div>\n                <div>\n                    <div className=\"col-md-12\">\n                        <br></br>\n                        <div>\n                            <div className=\"row\" id=\"post-review-box\" >\n                                <div className=\"col-md-12 col-xs-12\">\n                                    <div class=\"col-xg-1 col-md-1 col-xs-1\">&nbsp;</div>\n                                    <form accept-charset=\"UTF-8\" action=\"\" method=\"post\" class=\"col-xg-8 col-md-8 col-xs-8\">\n\n                                        <div className=\"text-right\">\n\n                                            <div className=\"well-sm\">\n                                                <BeautyStars\n                                                    value={valueStar}\n                                                    size={'16px'}\n                                                    inactiveColor={'#cccccc'}\n                                                    onChange={valueStar => setValueStar(valueStar)}\n                                                />\n                                            </div>\n\n                                            <input id=\"ratings-hidden\" name=\"rating\" type=\"hidden\" />\n\n\n                                        </div>\n\n                                    </form>\n                                    <div class=\"col-xg-2 col-md-2 col-xs-2\">&nbsp;</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"bg_tip\">\n                    &nbsp;\n                </div>\n\n                <div className=\"input-checkout-container col-xg-12 col-md-12 col-xs-12 bg_tip\">\n                    <span class=\"col-xg-1 col-md-1 col-xs-3\" >\n                        <img \n                            onClick={() => onClickDish()}\n                            src={window.location.origin + \"/images/logo/dish_inactive.png\"} \n                            alt=\"logo\" style={{ height: \"30px\", maxHeight: \"100%\" }} \n                        />\n                        <span style={{ color: dish == 0 ? 'black' : 'white' }}>Dish</span>\n                    </span>\n                    <span class=\"col-xg-1 col-md-1 col-xs-3\" >\n                        <img \n                            onClick={() => onClickAtmosphere()}\n                            src={window.location.origin + \"/images/logo/atmosphere_inactive.png\"} \n                            alt=\"logo\" style={{ height: \"30px\", maxHeight: \"100%\" }} \n                        />\n                        <span style={{ color: atmosphere == 0 ? 'black' : 'white' }}>Atmos</span>\n                    </span>\n                    <span class=\"col-xg-1 col-md-1 col-xs-3\" >\n                        <img \n                            onClick={() => onClickTasty()}\n                            src={window.location.origin + \"/images/logo/tasty_inactive.png\"} \n                            alt=\"logo\" style={{ height: \"30px\", maxHeight: \"100%\" }} \n                        />\n                        <span style={{ color: tasty == 0 ? 'black' : 'white' }}>Tasty</span>\n                    </span>\n                    <span class=\"col-xg-1 col-md-1 col-xs-3\" >\n                        <img \n                            onClick={() => onClickGoodService()}\n                            src={window.location.origin + \"/images/logo/service_inactive.png\"} alt=\"logo\" \n                            style={{ height: \"30px\", maxHeight: \"100%\" }} \n                        />\n                        <span style={{ color: goodService == 0 ? 'black' : 'white' }}>Good</span>\n                    </span>\n                </div>\n\n        \n\n\n            </form>\n        );\n\n    }\n\n    const renderShippingDetails = () => {\n\n        return (\n\n            <div className=\"checkout-form\">\n\n                <div className=\"row\">\n\n                    <div className=\"col-md-2 col-lg-2 col-sm-3 col-xs-4\">\n                        <div className=\"logo\">\n\n                            <img src={window.location.origin + \"/images/logo/tiptiptop_logo.png\"} alt=\"logo\" style={{ height: \"100px\", maxHeight: \"100%\" }} />\n\n                        </div>\n                    </div>\n\n                    <div className=\"col-md-8 col-lg-8 col-sm-6 col-xs-3\">\n                        <nav className=\"mainmenu__nav hidden-xs hidden-sm\">\n                            <ul className=\"main__menu\">\n\n                                <li className=\"drop\">\n\n\n                                </li>\n\n\n                            </ul>\n                        </nav>\n\n                    </div>\n\n                    <div className=\"col-md-2 col-sm-4 col-xs-5\">\n                        <ul className=\"logo\">\n                            {renderProducts()}\n\n                        </ul>\n                    </div>\n                </div>\n                <div className=\"mobile-menu-area\"></div>\n\n\n\n\n\n                <div className=\"tiptiptop-amount-bill\"><br></br>Amount in the bill: <input className=\"input-amount-bill\"\n                    type=\"text\"\n                    id=\"priceBill\"\n                    \n                    onChange={e => {\n\n                        setPriceBill(e.target.value);\n                        if (porcent == 10) { setPrice((e.target.value * 0.10).toFixed(2)); }\n                        if (porcent == 15) { setPrice((e.target.value * 0.15).toFixed(2)); }\n                        if (porcent == 20) { setPrice((e.target.value * 0.20).toFixed(2)); }\n\n                    }}\n                    value={priceBill}\n                    style={{ fontSize: 20, textAlign: \"right\", color: \"white\" }} maxLength=\"7\" size=\"7\" /> <span className=\"font-white\">$</span></div>\n\n\n\n                {renderShippingForm()}\n            </div>\n        );\n    }\n\n    const renderCheckoutCart = () => {\n\n        const strItem = numberOfItems > 1 ? 'items' : 'item';\n\n        return (\n            <>\n                <div className=\"our-important-note bg_tip\">\n\n                    <div className=\"input-checkout-container col-xg-12 col-md-12 col-xs-12 bg_tip\">\n                        &nbsp;\n                    </div>\n\n\n                    <div className=\"col-xs-1\"></div>\n                    <ul className=\"shopping__btn col-xs-9\">\n                        <li className=\"shp__checkout\">\n                            <b><a href=\"javascript:void(0)\" onClick={onSubmitForm}>{`Proceed to payment`}</a></b>\n                        </li>\n\n                    </ul>\n                    <div className=\"col-xs-2\"></div>\n                </div>\n                <div>\n                    <div className=\"tiptiptop-bottom-tip\"><br></br><br></br>&nbsp;</div>\n                </div>\n                <div>\n                    <br></br>\n                    <img \n                        class=\"col-xg-3 col-md-3 col-xs-3\" \n                        onClick={() => onClickTrFee()}\n                        src={trFee == 0 ? window.location.origin + \"/images/logo/option_inactive.png\" : window.location.origin + \"/images/logo/option_active.png\"} \n                        alt=\"logo\" \n                        style={{ width: \"45px\", height: \"12px\", marginTop: \"7px\" }} \n                    />\n                    I want to take transactional fee (0.5$). So waiter can receive the full amount.\n                </div>\n                <div>\n                    <img class=\"col-xg-3 col-md-3 col-xs-3\" \n                    onClick={() => onClickTerm()}\n                    src={term == 0 ? window.location.origin + \"/images/logo/option_inactive.png\" : window.location.origin + \"/images/logo/option_active.png\"} \n                    alt=\"logo\" style={{ width: \"45px\", height: \"12px\", marginTop: \"7px\" }} />\n                    I agree with Terms of use and Personal data processing policy.\n                </div>\n\n                {/*\n                <div className=\"puick-contact-area mt--60\">\n                    <h2 className=\"section-title-3\">Quick Contract</h2>\n                    <a href=\"phone:+8801722889963\">+012 345 678 102 </a>\n                </div>\n                */}\n            </>\n        );\n    }\n\n    const renderContent = () => {\n        /* if (cart && cart.length > 0)\n         {*/\n\n        return (\n            <section className=\"our-checkout-area ptb--10 bg__white\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 col-lg-8\">\n                            <div className=\"ckeckout-left-sidebar\">\n                                {renderShippingDetails()}\n                                {renderCheckoutCart()}\n                            </div>\n                        </div>\n                        \n                    </div>\n                </div>\n            </section>\n        );\n        /*}\n        else\n        {\n            return (\n                <div className=\"cart-main-area ptb--60 bg__white\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-4 col-md-offset-4\">\n                                <ul style={{ paddingTop: 22, paddingBottom: 22}}>\n                                    <li style={{ fontSize: 22, textAlign: 'center'}}>Cart is empty <span className=\"ti-face-sad\"></span>!</li>\n                                </ul>\n                                <ul className=\"shopping__btn\">\n                                    <li><a href=\"/screen-printing/traditional\">Go to Shop</a></li>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            );\n        }*/\n    }\n\n    // END Render Methods --------------------------------------------------------------------------\n\n    // Main Render\n    return (\n        <Layout\n            title=\"Main TiptipTop Page\"\n            description=\"Ecommerce\"\n            showBreadcrumb={false}\n        >\n            {renderContent()}\n            {renderRedirect()}\n        </Layout>\n    );\n};\n\nexport default Checkout;","// Core Imports\nimport React, { useState, useEffect } from 'react';\nimport { useIndexedDB } from 'react-indexed-db';\n\nimport Config from '../config'\n\n//Product 2\n\nconst Product2 = ({ product, delCallback, editCallback }) => {\n    \n    // Initial state\n\n    const [productQty, setProductQty] = useState(0);\n    const [productSize, setProductSize] = useState('');\n    const [productDetail, setProductDetail] = useState(JSON.parse(product.product));\n    const { update } = useIndexedDB('cart');\n    \n\n    // This is needed to update initially the qty correctly\n    useEffect(() => setProductQty(product.qty), [product.qty]);\n    useEffect(() => setProductSize(product.size), [product.size]);\n  \n\n    const deleteProductFromCart = () => {\n\n        // TODO: Maybe show a warning?\n\n        delCallback(product._id);\n    }\n\n    const onChangeQty = (event) => {\n\n        let newValue = event.target.value;\n\n        if (newValue > 0)\n        {\n            setProductQty(newValue);\n\n            if (editCallback)\n            {\n                editCallback(product, newValue, 'qty');\n            }\n        }\n    }\n\n    const changeProductSize = (event) => {\n\n        let newValue = event.target.value;\n        product.size = newValue;\n\n        update(product).then(\n\n            // Accept\n            () => {\n\n                setProductSize(newValue);\n                window.postMessage('updateCart', '*');\n                localStorage.setItem('cartLastUpdate', Date.now());\n            },\n\n            // Reject\n            error => {\n\n                console.log(error);\n            }\n        );\n\n    }\n\n    const renderSizeSelector = () => {\n\n        return (\n            <select className=\"select-size\" onChange={changeProductSize} value={productSize}>\n                {Config.SIZES.map(option => <option key={option.code} value={option.code}>{option.code}</option>)}\n            </select>\n        );\n    }\n\n    // Main Render\n    return (\n        <div>\n            <div className=\"checkout-single-product\">\n                \n                <div className=\"shp__pro__thumb\">\n                    <a href={`/design/${product.productType}/edit/${product._id}`} className=\"product-img-link\">{}</a>\n                    \n                    <img src={`${Config.API}/${productDetail.imageURL}`}  onError={(e)=>{\n                                                                    e.target.onerror = null; \n                                                                    //e.target.src=\"images/product/1.png\"\n                                                                }}\n                                                                alt=\"Product Imagenn\"\n                                                                style={{maxHeight: '100px'}} />\n                </div>\n                <div className=\"shp__pro__details\" style={{zIndex:100}}>\n                    <a href={`/design/${product.productType}/edit/${product._id}`} className=\"checkout-name\">{productDetail.name}</a>\n\n                    \n                </div>\n                \n                \n            </div>\n            <ul>\n            <li className=\"subtotal\">Total:${(product.order_total).toFixed(2)}</li>\n            \n            </ul>\n        </div>\n    );\n};\n\n\n\n\nexport default Product2;","// Core Imports\nimport React, { useState, useCallback, useEffect, useRef }   from 'react';\n//import CircularProgress from '@material-ui/core/CircularProgress';\nimport { useIndexedDB } from 'react-indexed-db';\nimport { getBraintreeClientToken, processPayment, updateOrderStatus } from '../APICalls'\nimport { getOrder, getOrderWorker } from '../APICalls'\nimport DropIn from 'braintree-web-drop-in-react';\nimport { Redirect } from 'react-router-dom';\nimport * as R from 'ramda';\nimport './Loader.css';\n\nimport BeautyStars from 'beauty-stars';\nimport { createRating } from \"../APICalls\";\n// Selector Imports\nimport { isAuthenticated } from '../auth/functions';\n\n// Custom Component Imports\nimport Layout from '../core/Layout2';\n//import Product from './Product';\nimport Product2 from './Product2';\n\n// Misc Imports\nimport Config from '../config'\n\n// TODO: Explanation\nconst Payment = (params) => {\n\n    // Initial state\n    const [cart, setCart] = useState();\n    const [orderId, setOrderId] = useState(params.location.orderId);\n    const [numberOfItems, setNumberOfItems] = useState(0);\n    const [subtotal, setSubtotal] = useState(0);\n    const [total, setTotal] = useState(0);\n    const [shippingFee, setShippingFee] = useState(0);\n    const [redirectToMain, setRedirectToMain] = useState(0);\n    const [cartLastUpdate, setCartLastUpdate] = useState(localStorage.getItem('cartLastUpdate'));\n    const { getAll, deleteRecord, update } = useIndexedDB('cart');\n    const [ currentOrder, setCurrentOrder ] = useState('');\n    const [selectedOrderItemReview, setSelectedOrderItemReview] = useState({});\n    const [descrReview, setDescrReview] = useState('');\n    const [valueStar, setValueStar] = useState(0);\n    const [error, setError] = useState(false);\n    const [success, setSuccess] = useState(false); \n    const [noPayment, setNoPayment] = useState(true); \n    \n    const [data, setData] = useState({\n        loading: false,\n        success: false,\n        clientToken: null,\n        error: '',\n        instance: {},\n        address: ''\n    });    \n\n    const showBlockSuccessUIModalRef = useRef(null);\n    const hideBlockSuccessUIModalRef = useRef(null);\n    const showBlockErrorUIModalRef = useRef(null);\n    const hideBlockErrorUIModalRef = useRef(null);\n    \n\n    const { user, token } = isAuthenticated();\n\n    // Events --------------------------------------------------------------------------------------\n\n    \n\n    //Braintree\n    const getToken = () => {        \n        getBraintreeClientToken().then(data => {\n            if (data.error) \n            {\n                setData({ ...data, error: data.error });\n            } \n            else \n            {\n                setData({ clientToken: data.clientToken });\n            }\n        });\n    };\n\n    useEffect(() => {        \n        if (orderId === undefined) setOrderId(localStorage.getItem('orderId'))\n        getToken();\n    }, []);\n\n\n    const onLocalStorageChange = useCallback(event => {\n\n        console.log('Checkout@onLocalStorageChange');\n        \n        if (event.key && event.key === 'cartLastUpdate' && event.oldValue !== event.newValue)\n        {\n            updateCart();\n        }\n\n        if (event.key && event.key === 'orderId' && event.oldValue !== event.newValue)\n        {\n            //TODO: Redirect to checkout because someone change orderId.\n            console.log(\"Redirect to checkout because someone change orderId.\");\n        }\n\n    }, []);\n\n    // This receives the product from the iframe\n    const onMessageReceived = useCallback(event => {\n\n        console.log('Checkout@onMessageReceived()');\n\n        if (event.data === 'updateCart' && event.origin === Config.HOME_URL)\n        {\n            let storageCartLastUpdate = localStorage.getItem('cartLastUpdate');\n\n            if (storageCartLastUpdate !== null && storageCartLastUpdate !== cartLastUpdate)\n            {\n                setTimeout(() => {\n\n                    updateCart();\n                    setCartLastUpdate(storageCartLastUpdate);\n    \n                }, 750);\n            }\n        }\n        else\n        {\n            if (event.origin !== Config.BASE_FPD_URL) return;\n\n            setTimeout(() => {\n\n                updateCart();\n\n            }, 750);\n        }\n\n    }, []);\n\n    const onClickPay = () => {\n        let nonce;\n        \n        //showBlockUIModalRef.current.click();\n        data.instance\n            .requestPaymentMethod()\n            .then(data => {\n                // console.log(data);\n                nonce = data.nonce;\n                // once you have nonce (card type, card number) send nonce as 'paymentMethodNonce'\n                // and also total to be charged\n                console.log(\n                    \"send nonce and total to process: \",\n                    nonce,\n                    \n                );\n                console.log(orderId);\n\n                const paymentData = {\n                    paymentMethodNonce: nonce,\n                    orderId: orderId\n                };\n                //hideBlockUIModalRef.current.click();\n                processPayment(paymentData)\n                    .then(response => {\n\n                        console.log('response payment process:',response);\n                        if (response.success === true){\n                            /*cart.map(cartItems => {\n                                deleteRecord(cartItems.id).then(\n                \n                                    // Accept\n                                    event => {\n                                        console.log('Deleted product form cart!');\n                                        updateCart();\n                                        window.postMessage('updateCart', '*');\n                                        localStorage.setItem('cartLastUpdate', Date.now());\n                                    },\n                    \n                                    // Reject\n                                    error => {\n                                        // TODO: Maybe, if there is a server-side persisting of the cart,\n                                        // retrieve it and update the local storage? This must be confirmed.\n                                        // TODO: Process error here\n                                        console.log(error);\n                                    }\n                                );\n                            })*/\n                            \n                            showBlockSuccessUIModalRef.current.click();\n                            setNoPayment(false);\n                            let body = {status: Config.ORDER_STATUS.open, is_paid: true}\n                            updateOrderStatus(orderId,body).then(response => {\n                                console.log('response update orfder status',response);\n                            });\n\n                            //TODO: vaciar carrito y eliminar datos de localstorage y de indexDB \n                        }\n                        \n                    })\n                    .catch(error => {\n                        showBlockErrorUIModalRef.current.click();\n                        console.log(error);\n                        setData({ loading: false });\n                    });\n            })\n            .catch(error => {\n                // console.log(\"dropin error: \", error);\n                setData({ ...data, error: error.message });\n            });\n            \n    }\n\n    // END Events ----------------------------------------------------------------------------------\n\n    // React Effects -------------------------------------------------------------------------------\n\n    useEffect(() => {\n        console.log('localStorage: ',localStorage)\n        const orderId = localStorage.getItem('orderId');\n        \n        if(orderId !== null || orderId){            \n\n            getOrderWorker(orderId).then(data => {\n                console.log('data',data);\n                if (data.error)\n                {\n                    localStorage.removeItem('orderId');\n                    //Caso muy extremo que solo pasa si se borra de base de datos.            \n                }\n                else\n                {\n\n                    setCurrentOrder(data);\n                    /*getAll().then( cartItems => {\n                        let isAffected = false;\n\n                        if (cartItems.length > data.orderItems.length) \n                        {\n                            //TODO: Deberíamos cancelar la orden y guardarla de nuevo?\n                            console.log(\"Hay más items en el carro que en BD\");\n                        }\n\n                        cartItems.forEach(productLocal => {\n                            let productAtServer = R.filter(x => x.guid === productLocal.guid, data.orderItems);\n                            productAtServer = productAtServer[0];\n                            \n                            if (productAtServer === undefined)\n                            {\n                                deleteRecord(productLocal.id)\n                            }\n                            else\n                            {\n                                let affectedItems = [];                                \n\n                                affectedItems['price'] = productLocal.price !== productAtServer.price;\n                                affectedItems['qty'] = productLocal.qty !== productAtServer.qty;\n                                affectedItems['size'] = productLocal.size !== productAtServer.size;\n                                affectedItems['colo r'] = productLocal.color !== productAtServer.color;\n                                affectedItems['product'] = !R.equals(productLocal.product_obj, productAtServer.product);\n\n                                Object.keys(affectedItems).forEach( index => {\n                                    if (affectedItems[index]) \n                                    {\n                                        isAffected = true;\n                                        productLocal[index] = productAtServer[index];\n                                    }\n                                }); \n\n                                if (isAffected) \n                                {                                    \n                                    update(productLocal)\n                                }\n                            }\n                        });\n                        updateCart() \n                    });*/\n                }    \n            }); \n        }  \n    }, []);\n\n    useEffect(() => updateCart(), []);\n\n    useEffect(() => {\n\n        window.addEventListener(\"message\", onMessageReceived);\n        return () => window.removeEventListener(\"message\", onMessageReceived);\n\n    }, [onMessageReceived]);\n\n    useEffect(() => {\n\n        window.addEventListener(\"storage\", onLocalStorageChange);\n        return () => window.removeEventListener(\"storage\", onLocalStorageChange);\n\n    }, [onLocalStorageChange]);\n\n    // END React Effects ---------------------------------------------------------------------------\n\n    // Events --------------------------------------------------------------------------------------\n\n    const clickClose = () => {\n        setRedirectToMain(true);\n    }\n\n    // END Events ----------------------------------------------------------------------------------\n\n    // Methods -------------------------------------------------------------------------------------\n\n    // Update the items and information in the cart.\n    const updateCart = () => {\n\n        getAll().then(\n            \n            // Accept\n            cart => {\n\n                let _subtotal = 0;\n                let _numberOfItems = 0;\n                let _shippingFee = parseFloat(localStorage.getItem('shippingFee')).toFixed(2);\n\n                // Calculate the current subtotal\n                for(var i = 0; i < cart.length; i++)\n                {\n                    _subtotal += parseFloat(cart[i].price) * parseInt(cart[i].qty);\n                    _numberOfItems += parseInt(cart[i].qty);\n                }\n\n                setCart(cart);\n                setSubtotal(_subtotal);\n                setTotal(parseFloat(_subtotal) + parseFloat(_shippingFee));\n                setShippingFee(_shippingFee);\n                setNumberOfItems(_numberOfItems);                \n            },\n\n            // Reject\n            error => {\n\n                // TODO: Maybe, if there is a server-side persisting of the cart,\n                // retrieve it and update the local storage? This must be confirmed.\n                // TODO: Process error here\n                console.log(error);\n            }\n        );\n    }\n\n\n    // END Methods ---------------------------------------------------------------------------------\n\n    // Render Methods ------------------------------------------------------------------------------\n\n    const renderRedirect = () => {\n        let sessionData = JSON.parse(localStorage.getItem('jwt'));\n        let redirecTo = sessionData !== null ? sessionData.user.role : '';\n        if (redirectToMain && redirecTo == '') \n        {\n            return <Redirect to={{ pathname: \"/\"}}/>\n        }\n        if (redirectToMain && redirecTo == 'admin') \n        {\n            return <Redirect to={{ pathname: \"/admin/dashboard/user-information\"}}/>\n        }\n        if (redirectToMain && redirecTo == 'worker') \n        {\n            return <Redirect to={{ pathname: \"/user/dashboard\"}}/>\n        }\n    }\n\n   /*const renderBlockUIModal = () => {\n        return (\n            <>  \n                <button ref={showBlockUIModalRef} type=\"button\" data-toggle=\"modal\" data-target=\"#staticBackdrop\" style={{ display: 'none' }} />\n                <div className=\"modal fade\" id=\"staticBackdrop\" data-backdrop=\"static\" data-keyboard=\"false\" tabIndex=\"-1\" aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\n                    <div className=\"loader\">\n                        <CircularProgress className=\"spinner\" color=\"secondary\" />\n                        <p>Loading...</p>\n                        <button ref={hideBlockUIModalRef} type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" />\n                    </div>\n                </div>\n                \n            </>\n        );\n\n    }*/\n\n\n    const renderBlockSuccessUIModal = () => {\n        return (\n            <>\n                <button ref={showBlockSuccessUIModalRef} type=\"button\" data-toggle=\"modal\" data-target=\"#staticBackdrop2\" style={{ display: 'none'}} />\n                <div className=\"modal fade\" id=\"staticBackdrop2\" data-backdrop=\"static\" data-keyboard=\"false\" tabIndex=\"-1\" aria-labelledby=\"staticBackdropLabel2\" aria-hidden=\"true\">\n                    <div className=\"modal-dialog\">\n                        <div className=\"modal-content\">\n                            <div className=\"modal-header\">\n                                <h5 className=\"modal-title\" id=\"staticBackdropLabel2\">Payment Successful\n                                    <button \n                                        ref={hideBlockSuccessUIModalRef} \n                                        type=\"button\" \n                                        className=\"close\" \n                                        data-dismiss=\"modal\" \n                                        aria-label=\"Close\"\n                                        onClick={() => clickClose()}\n                                    >\n                                    <span aria-hidden=\"true\">&times;</span>\n                                    </button>\n                                </h5>\n                            </div>\n                            <div className=\"modal-body\">\n                                Your payment has been received\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n\n\n    const renderTipTo = () => {\n\n        return (\n\n            <div className=\"checkout-form\">\n\n                <div className=\"row\">\n\n                    <div className=\"col-md-2 col-lg-2 col-sm-3 col-xs-4\">\n                        <div className=\"logo\">\n\n                            <img src={window.location.origin + \"/images/logo/tiptiptop_logo.png\"} alt=\"logo\" style={{ height: \"100px\", maxHeight: \"100%\" }} />\n\n                        </div>\n                    </div>\n\n                    <div className=\"col-md-8 col-lg-8 col-sm-6 col-xs-3\">\n                        <nav className=\"mainmenu__nav hidden-xs hidden-sm\">\n                            <ul className=\"main__menu\">\n\n                                <li className=\"drop\">\n\n\n                                </li>\n\n\n                            </ul>\n                        </nav>\n\n                    </div>\n\n                    <div className=\"col-md-2 col-sm-4 col-xs-5\">\n                        <ul className=\"logo\">\n                            {renderProducts()}\n\n                        </ul>\n                    </div>\n                </div>\n               \n\n               \n            </div>\n        );\n    }\n\n\n\n\n    const renderBlockErrorUIModal = () => {\n        return (\n            <>\n                <button ref={showBlockErrorUIModalRef} type=\"button\" data-toggle=\"modal\" data-target=\"#staticBackdrop3\" style={{ display: 'none' }} />\n                <div className=\"modal fade\" id=\"staticBackdrop3\" data-backdrop=\"static\" data-keyboard=\"false\" tabIndex=\"-1\" aria-labelledby=\"staticBackdropLabel3\" aria-hidden=\"true\">\n                    <div className=\"modal-dialog\">\n                        <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h5 className=\"modal-title\" id=\"staticBackdropLabel3\">Payment Failed</h5>\n                            <button \n                                ref={hideBlockErrorUIModalRef} \n                                type=\"button\" className=\"close\" \n                                data-dismiss=\"modal\" \n                                aria-label=\"Close\"\n                                onClick={() => clickClose()}\n                            >\n                            <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                        </div>\n                        <div className=\"modal-body\">\n                            Your payment could not bet processed. Try again later\n                        </div>\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n\n\n    // Render all current items in the cart\n    const renderProducts = () => {\n        console.log('CUrrent Order Render', currentOrder.order)\n        //setCurrentProductId(currentOrder.order.product_id)\n        if (currentOrder && currentOrder != '')\n        {\n            let orderWorker = [];\n            orderWorker.push(currentOrder.order);\n\n            return orderWorker.map(product => {\n                \n                return(\n                    <div key={product._id}>\n                        <Product2 product={product} />\n                    </div>\n                )\n            })\n        }\n        else\n        {\n            return (<span>...</span>);\n        }\n    }\n\n    const renderPaymentDetails = () => {\n        if (noPayment) {\n        return (\n        <div onBlur={() => setData({ ...data, error: '' })}>           \n            {data.clientToken !== null ? (       \n            <div className=\"payment-form\">\n                <h2 className=\"pasadena-section-title-3\">payment details </h2>\n                <div className=\"mt--20\">\n                    <DropIn\n                        options={{\n                            authorization: data.clientToken/*,\n                            paypal: {\n                                flow: 'vault'\n                            }*/\n                        }}\n                        onInstance={instance => (data.instance = instance)}\n                    />\n                    \n                    <div className=\"checkout-btn\" style={{marginTop: 20, textAlign: 'right'}}>\n                        <button onClick={onClickPay}  className=\"fv-btn\">CONFIRM & BUY NOW</button>\n                    </div>\n                </div>\n            </div>) : null}\n            \n        </div> \n        )\n        }\n        \n    }\n\n    \n\n    const renderContent = () => {\n        \n        return (\n            <section className=\"our-checkout-area ptb--120 bg__white\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 col-lg-8\">\n                            <div className=\"ckeckout-left-sidebar\">\n                           \n                                {renderPaymentDetails()}\n                            </div>\n                        </div>\n                        \n                    </div>\n                </div>\n            </section>\n        )\n        \n    }\n\n\n    // END Render Methods --------------------------------------------------------------------------\n\n    // Main Render\n    return (\n        <Layout \n            title = \"Screen Printing Page\"\n            description = \"Ecommerce\"\n            showBreadcrumb = {false}\n            className=\"wrapper fixed__footer\"\n        >\n            {renderTipTo()}\n            {renderContent()}\n            {/*renderBlockUIModal()*/}\n            {renderBlockSuccessUIModal()}\n            {renderBlockErrorUIModal()}\n            {renderRedirect()}\n        </Layout>\n    );\n};\n\nexport default Payment;","// Core Imports\nimport React, { useState, useEffect } from \"react\";\nimport DataTable from 'react-data-table-component';\nimport * as R from 'ramda';\n\n// Custom Component Imports\nimport Alert from '../../common/Alert';\n\n// API Imports\nimport { getOrderItems } from \"../../APICalls\";\n\n// TODO: Explanation\nconst OrderItemDataTable = (props) => {\n\n    // Init state\n    const [orderItems, setOrderItems] = useState(props.orderItems);\n    const [selectedOrderItem, setSelectedOrderItem] = useState('');\n    const [selectedOrderItemReview, setSelectedOrderItemReview] = useState('');\n    const [dataTableError, setDataTableError] = useState(false);\n    const [dataTableSuccess, setDataTableSuccess] = useState(false);\n\n    // Initial columns configuration\n    const columns = [\n        {\n            name: '#',\n            width: '60px',\n            cell: row => <div>{row.element}</div>,\n        },\n        {\n            name: 'Product Name',\n            minWidth: '300px',\n            //selector: 'productName',\n            //sortable: true,\n            cell: row => <div>{row.item.product_id.name}</div>\n        },\n        {\n            name: 'Price',\n            selector: 'price',\n            sortable: true,\n            cell: row => <div>${row.item.price.toFixed(2)}</div>\n        },\n        {\n            name: 'Quantity',\n            selector: 'qty',\n            sortable: true,\n            cell: row => <div>${row.item.qty}</div>\n        },\n        {\n            name: 'Size',\n            width: '60px',\n            selector: 'size',\n            sortable: true,\n            cell: row => <div>{row.item.size}</div>\n        },\n        {\n            name: 'Total',\n            sortable: true,\n            cell: row => <div>${(row.item.price * row.item.qty).toFixed(2)}</div>\n        },\n        {\n            name: 'Actions',\n            cell: row => actionsBtns(row.item),\n            ignoreRowClick: false,\n            allowOverflow: true,\n            button: true\n        }\n    ];\n\n    // React Effects -------------------------------------------------------------------------------\n\n    useEffect(() => {\n\n        loadOrders();\n\n    }, [props]);\n\n    // END React Effects ---------------------------------------------------------------------------\n\n    // Methods -------------------------------------------------------------------------------------\n\n    const loadOrders = () => {\n        \n        if (!R.isNil(props.orderID))\n        {\n            getOrderItems(props.orderID).then(orderItems => {\n\n                if (orderItems.error)\n                {\n                    //setError(orderItems.error);\n                }\n                else\n                {\n                    let newOrderItems = [];\n                    let i = 1;\n                    orderItems.orderItems.map(e => { \n                        newOrderItems.push({element: i, item: e});\n                        i++;\n                    })\n                    setOrderItems(newOrderItems);\n                }\n            });\n        }\n    }\n\n    // END Methods ---------------------------------------------------------------------------------\n\n    const selectCurrentOrderItem = (row) => { \n        setSelectedOrderItemReview('');\n        props.selectedOrderItemCBReview(null);\n        setSelectedOrderItem(row);\n        props.selectedOrderItemCB && props.selectedOrderItemCB(row);\n    }\n\n    const selectCurrentOrderItemReview = (row) => {\n        setSelectedOrderItem('');\n        props.selectedOrderItemCB(null);\n        setSelectedOrderItemReview(row);\n        props.selectedOrderItemCBReview && props.selectedOrderItemCBReview(row);\n    }\n\n    // Events --------------------------------------------------------------------------------------\n\n    // END Events ----------------------------------------------------------------------------------\n\n    // Render Methods ------------------------------------------------------------------------------\n\n    const actionsBtns = row => (\n        <>\n            <button \n                type=\"button\"\n                title=\"View Product\"\n                className={`btn ${row._id !== selectedOrderItem._id ? 'btn-default' : 'btn-info'} btn-sm btn-icon`}\n                onClick={() => selectCurrentOrderItem(row) }\n            >\n                <span className=\"glyphicon glyphicon-eye-open\" aria-hidden=\"true\"></span>\n            </button>\n            &nbsp;&nbsp;\n            <button \n                type=\"button\"\n                title=\"Review Product\"\n                className={`btn ${row._id !== selectedOrderItemReview._id ? 'btn-default' : 'btn-info'} btn-sm btn-icon`}\n                data-toggle=\"modal\"\n                data-target=\"#reviewProductModal\"\n                aria-label=\"review\" \n                onClick={() => selectCurrentOrderItemReview(row) }\n            >\n                <span className=\"glyphicon glyphicon-star-empty\" aria-hidden=\"true\"></span>\n            </button>\n        </>\n    );\n\n    // END Render Methods --------------------------------------------------------------------------\n\n    // Main render\n    return (\n        <>\n            <div className=\"row\">   \n                <Alert \n                    error = {dataTableError}\n                    success = {dataTableSuccess}\n                    onError = {(value) => {setDataTableError(value)}}\n                    onSuccess = {(value) => {setDataTableSuccess(value)}}\n                />\n            </div>\n            <DataTable\n                columns={columns}\n                data={orderItems !== undefined ? orderItems : []}\n                pagination\n                paginationPerPage={5}\n                highlightOnHover\n                pointerOnHover\n                noHeader\n                selectableRowsHighlight\n            />\n        </>\n    );\n}\n\nexport default OrderItemDataTable;","// Core Imports\nimport React, { useState, useEffect, Fragment, useCallback } from \"react\";\nimport Iframe from 'react-iframe';\nimport * as R from 'ramda';\nimport BeautyStars from 'beauty-stars';\n\n// Custom Component Imports\nimport OrderItemDataTable from './OrderItemDataTable'\nimport Alert from '../../common/Alert';\n\n// Misc Imports\nimport Config from '../../config';\n\n// API Imports\nimport { createRating } from \"../../APICalls\";\n\n// Selector Imports\nimport { isAuthenticated } from '../../auth/functions';\n\n// TODO: Explanation\nconst OrderForm = ({ \n        selectedOrder,\n    }) => {\n\n    // Initial State\n    const [selectedOrderItem, setSelectedOrderItem] = useState({});\n    const [selectedOrderItemReview, setSelectedOrderItemReview] = useState({});\n    const [descrReview, setDescrReview] = useState('');\n    const [valueStar, setValueStar] = useState(0);\n    const [modalTitle, setModalTitle] = useState('Order #' + selectedOrder._id);\n    const [error, setError] = useState(false);\n    const [success, setSuccess] = useState(false); \n\n    const closeModalButton = React.useRef(null);\n\n    const { user, token } = isAuthenticated();\n\n    // Events -------------------------------------------------------------------------------------- \n\n    const clickSubmitReview = e => {\n        \n        e.preventDefault();\n        setError(false);\n        if (valueStar > 0 && descrReview != '') \n        {\n            createRating(token, { \n                rating: valueStar, \n                review: descrReview,\n                product: selectedOrderItemReview.product_id._id,\n                user: user._id\n            }).then(data => { \n                if(data.message == 'The rating already exist') {\n                    setError(data.message);\n                    return\n                }\n                if (data.error)\n                    {\n                        setError(data.error.description);\n                        console.log('error', error)\n                    }\n                else\n                    {\n                        selectedOrderItemCBReview(null);\n                        setValueStar(0);\n                        setDescrReview('');\n                        setSuccess(\"Review Created\");\n                    }\n            })\n        }\n        else \n        {\n            setError(\"Must indicate a value for the rating / description\");\n            return\n        }        \n    };\n\n    const closeAlert = e => {\n        e.preventDefault();\n        setError(false);\n        setSuccess(false);\n    }\n\n    // END Events ----------------------------------------------------------------------------------\n\n    // Methods -------------------------------------------------------------------------------------\n\n    const selectedOrderItemCB = (orderItem) => setSelectedOrderItem(orderItem);\n\n    const selectedOrderItemCBReview = (orderItem) => setSelectedOrderItemReview(orderItem);\n\n    // This receives the product from the iframe\n    const onMessageReceived = useCallback(event => {\n\n        if (event.origin !== Config.BASE_FPD_URL) return;\n\n        if (event && event.data)\n        {\n            // If a product is going to be edited, the object must be sent to FPD iframe to be able \n            // to load it and show all the layers.\n            if (event.data === \"viewProduct\")\n            {\n                event.source.postMessage(JSON.stringify(selectedOrderItem.product_obj), event.origin);\n            }\n        }\n\n    }, [selectedOrderItem]);\n\n    // END Methods ---------------------------------------------------------------------------------\n\n    // React Effects -------------------------------------------------------------------------------\n\n    useEffect(() => {\n\n        if (!R.isNil(selectedOrder) && !R.isNil(selectedOrder._id))\n        {\n            setModalTitle('Order #' + selectedOrder._id)\n        }\n\n    }, [selectedOrder]);\n\n    useEffect(() => {\n\n        window.addEventListener(\"message\", onMessageReceived);\n        return () => window.removeEventListener(\"message\", onMessageReceived);\n\n    }, [onMessageReceived]);\n\n    // END React Effects ---------------------------------------------------------------------------\n    \n    // Render Methods ------------------------------------------------------------------------------\n\n    const renderFPDIframe = () => {\n        if (!R.isNil(selectedOrderItem) && !R.isNil(selectedOrderItem._id))\n        {\n            console.log('Pase por FPDIframe')\n            let isMerchandise = selectedOrderItem.product_id.printingType == '606dd5141d92c0793269d682' ? true : false\n            \n            return (\n                <div className=\"row\">\n                    <Iframe \n                        url={Config.FPD_URL+`${isMerchandise ? 'm/' : '/'}`+`5fab3963a0d1f711fbe68c87/${selectedOrderItem.product_id ? selectedOrderItem.product_id._id : []}/${selectedOrderItem.color}`}\n                        styles={{border:\"none\", height:\"600px\"}}\n                        width=\"100%\"\n                        height=\"550px\"\n                        frameBorder=\"0\"\n                        id=\"myId\"\n                        className=\"myClassname\"\n                        allowFullScreen={true}\n                        display=\"initial\"\n                        position=\"relative\"\n                    />\n                </div>\n            )\n        }\n        else return null;\n    }\n\n    const renderReview = () => {\n        console.log('selectedOrderItemReview', selectedOrderItemReview)\n        if (!R.isNil(selectedOrderItemReview) && !R.isNil(selectedOrderItemReview._id))\n        {\n            return (\n                <div className=\"row\">\n                    \n                            <div className=\"col-md-12\">\n                                <div className=\"well well-sm\">\n                                    <div className=\"row\" id=\"post-review-box\" >\n                                        <div className=\"col-md-12\">\n                                            <form accept-charset=\"UTF-8\" action=\"\" method=\"post\">\n                                                \n                                                <div className=\"text-right\">\n                                                    \n                                                    <div className=\"well-sm\">\n                                                    <BeautyStars\n                                                        value={valueStar}\n                                                        size={'16px'}\n                                                        inactiveColor={'#cccccc'}\n                                                        onChange={valueStar => setValueStar(valueStar)}\n                                                    />\n                                                    </div>\n                                                    \n                                                    <input id=\"ratings-hidden\" name=\"rating\" type=\"hidden\" />\n                                                    <textarea value ={descrReview} onChange={e => setDescrReview(e.target.value)} className=\"form-control animated\" cols=\"50\" id=\"new-review\" name=\"comment\" placeholder=\"Enter your review here...\" rows=\"3\"></textarea>\n                                                    <div className=\"well-sm\">\n                                                        <button \n                                                            className=\"btn btn-success btn-lg\" \n                                                            type=\"button\"\n                                                            onClick={clickSubmitReview}\n                                                        >\n                                                            Save\n                                                        </button>\n                                                    </div>\n                                                </div>\n\n                                            </form>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                    \n                </div>\n            )\n        }\n        else return null;\n    }\n\n    const alertSuccess = () => (\n        <div className=\"alert alert-info col-xs-12 col-sm-offset-3 col-sm-6 col-lg-offset-3 col-lg-6\" style={{ display: success ? '' : 'none'}}>\n                {success}\n                <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={closeAlert}>\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n        </div>\n    );  \n\n    // END Render Methods --------------------------------------------------------------------------\n    \n    // Main Render\n    return (\n        <Fragment> \n            <div className='modal fade' id=\"orderSelectedModal\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\n                <div className=\"modal-dialog modal-lg\" role=\"document\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <button \n                                ref={closeModalButton}\n                                type=\"button\" \n                                className=\"close\"\n                                data-dismiss=\"modal\"\n                                onClick={() => {\n                                    setSelectedOrderItem(null);\n                                    setDescrReview('')\n                                    setValueStar(0);\n                                }}\n                            >\n                                <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                            <h4 className=\"modal-title\" id=\"myModalLabel\">{modalTitle}</h4>\n                        </div>\n                        <div className=\"modal-body\" style={{padding:'30px'}}>\n                            <div className=\"row\">\n                                <Alert \n                                    error = {error}\n                                    onError = {(value) => {setError(value)}}\n                                />\n                                {alertSuccess()}\n                            </div>\n                            <div style={{\n                                paddingBottom: 9,\n                                marginBottom: 10,\n                                borderBottom: '1px solid #eee' }}>\n                                <h6>Customer Info</h6>\n                            </div>\n                            <div className=\"form-row row\">\n                                <div className=\"col-xs-12 col-sm-6 col-lg-6\">\n                                    <span htmlFor=\"name\" className=\"normal-label\" style={{ fontWeight: 500 }}>{`Name: `}</span>\n                                    <span htmlFor=\"name\" className=\"normal-label\">{selectedOrder.customer_name}</span>\n                                </div>\n\n                                <div className=\"col-xs-12 col-sm-6 col-lg-6\">\n                                    <span htmlFor=\"name\" className=\"normal-label\" style={{ fontWeight: 500 }}>{`Address Line 1: `}</span>\n                                    <span htmlFor=\"name\" className=\"normal-label\">{selectedOrder.customer_addressLine1}</span>\n                                </div>\n                            </div>\n                        \n                            <div className=\"form-row row\">\n                                <div className=\"col-xs-12 col-sm-6 col-lg-6\">\n                                    <span htmlFor=\"name\" className=\"normal-label\" style={{ fontWeight: 500 }}>{`E-mail: `}</span>\n                                    <span htmlFor=\"name\" className=\"normal-label\">{selectedOrder.customer_email}</span>\n                                </div>\n\n                                <div className=\"col-xs-12 col-sm-6 col-lg-6\">\n                                    <span htmlFor=\"name\" className=\"normal-label\" style={{ fontWeight: 500 }}>{`Address Line 2: `}</span>\n                                    <span htmlFor=\"name\" className=\"normal-label\">{selectedOrder.customer_addressLine2}</span>\n                                </div>\n                            </div>\n\n                            <div className=\"form-row row\">\n                                <div className=\"col-xs-12 col-sm-6 col-lg-6\">\n                                    <span htmlFor=\"name\" className=\"normal-label\" style={{ fontWeight: 500 }}>{`Phone: `}</span>\n                                    <span htmlFor=\"name\" className=\"normal-label\">{selectedOrder.customer_phone}</span>\n                                </div>\n\n                                <div className=\"col-xs-12 col-sm-6 col-lg-6\">\n                                    <span htmlFor=\"name\" className=\"normal-label\" style={{ fontWeight: 500 }}>{`City: `}</span>\n                                    <span htmlFor=\"name\" className=\"normal-label\">{selectedOrder.customer_city}</span>\n                                </div>\n                            </div>\n\n                            <div className=\"form-row row\">\n                                <div className=\"col-xs-12 col-sm-6 col-lg-6\">\n                                    <span htmlFor=\"name\" className=\"normal-label\" style={{ fontWeight: 500 }}>{`Zip Code: `}</span>\n                                    <span htmlFor=\"name\" className=\"normal-label\">{selectedOrder.customer_zipCode}</span>\n                                </div>\n\n                                <div className=\"col-xs-12 col-sm-6 col-lg-6\">\n                                    <span htmlFor=\"name\" className=\"normal-label\" style={{ fontWeight: 500 }}>{`State: `}</span>\n                                    <span htmlFor=\"name\" className=\"normal-label\">{selectedOrder.customer_state}</span>\n                                </div>\n                            </div>\n                            <div style={{\n                                marginTop: 20,\n                                paddingBottom: 9,\n                                marginBottom: 10,\n                                borderBottom: '1px solid #eee' }}>\n                                <h6>Products</h6>\n                            </div>\n                            <OrderItemDataTable orderID={selectedOrder._id} selectedOrderItemCB={selectedOrderItemCB} selectedOrderItemCBReview={selectedOrderItemCBReview} />\n                            {renderFPDIframe()}\n                            {renderReview()}\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button \n                                type=\"button\" \n                                className=\"btn btn-default\" \n                                onClick={() => {\n                                    closeModalButton.current.click();\n                                    setDescrReview('')\n                                    setValueStar(0);\n                                    setSelectedOrderItem(null);\n                                }}  \n                            >Close</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default OrderForm;","// Core Imports\nimport React, { useState, useEffect, Fragment } from \"react\";\nimport DataTable from 'react-data-table-component';\nimport moment from 'moment';\n\n// Custom Component Imports\nimport OrderForm from './OrderForm';\nimport Alert from '../../common/Alert';\n\n// API Imports\nimport { getOrders } from \"../../APICalls\";\n\n// TODO: Explanation\nconst OrderDataTable = () => {\n\n    // Inti state\n    const [orders, setOrders] = useState('');\n    const [selectedOrder, setSelectedOrder] = useState('');\n    const [filterStatus, setFilterStatus] = useState('open');\n    const [filteredItems, setFilteredItems] = useState('');\n    const [dataTableError, setDataTableError] = useState(false);\n    const [dataTableSuccess, setDataTableSuccess] = useState(false);\n\n    const translateStatus = (status) => {\n\n        let color = '#18cc1b';\n        let translate = '';\n\n        switch(status)\n        {\n            case 'open': translate = 'Open'; break;\n            case 'pending_payment': \n                translate = 'Pending for Payment';\n                color = '#f77700';\n            break;\n            case 'completed': \n                translate = 'Completed';\n                color = '#0d7c0f';\n            break;\n            case 'canceled': \n                translate = 'Canceled';\n                color = '#e50909';\n            break;\n        }\n\n        return (\n            <div>\n                <span style={{ color: color, fontWeight: 500 }}>{translate}</span>\n            </div>\n        )\n    }\n\n    // Initial columns configuration\n    const columns = [\n        {\n            name: 'Order Number',\n            width: '220px',\n            cell: row => <div>{row._id}</div>,\n        },\n        {\n            name: 'Status',\n            selector: 'status',\n            sortable: true,\n            cell: row => translateStatus(row.status),\n        },\n        {\n            name: 'Is Paid',\n            width: '100px',\n            selector: 'is_paid',\n            sortable: true,\n            cell: row => row.is_paid ? <div>Paid</div> : <div>Not Paid</div>\n        },\n        {\n            name: 'Order Date',\n            selector: 'order_date',\n            sortable: true,\n            cell: row => <div>{moment(row.order_date).format('DD-MM-YYYY hh:mm A')}</div>\n        },\n        {\n            name: 'Quantity',\n            width: '100px',\n            selector: 'order_qty',\n            sortable: true\n        },\n        {\n            name: 'Order Total',\n            selector: 'order_total',\n            sortable: true,\n            cell: row => <div>${row.order_total.toFixed(2)}</div>\n        },\n        {\n            name: 'Actions',\n            cell: row => actionsBtns(row),\n            ignoreRowClick: true,\n            allowOverflow: true,\n            button: true\n        }       \n    ];  \n\n    // React Effects -------------------------------------------------------------------------------\n\n    useEffect(() => {\n\n        console.log(moment());\n\n        loadOrders();\n\n    }, []);   \n    \n    useEffect(() => {\n    \n        if (orders)\n        {\n            const items = orders.filter(item => item.status === filterStatus || filterStatus === 'all');\n            setFilteredItems(items);\n        }\n\n    }, [filterStatus, orders]);\n\n    // END React Effects ---------------------------------------------------------------------------\n\n    // Methods -------------------------------------------------------------------------------------\n\n    const loadOrders = () => {\n\n        getOrders().then(orderData => {\n\n            if (orderData.error)\n            {\n                //setError(orderData.error);\n            }\n            else\n            {\n                setOrders(orderData);\n            }\n        });\n    }\n\n    // END Methods ---------------------------------------------------------------------------------\n\n    // Events --------------------------------------------------------------------------------------\n\n    // END Events ----------------------------------------------------------------------------------\n\n    // Render Methods ------------------------------------------------------------------------------\n\n    const actionsBtns = row => (\n        <>\n            <button \n                type=\"button\"\n                title=\"View Details\"\n                className=\"btn btn-default btn-sm btn-icon\" \n                data-toggle=\"modal\" \n                data-target=\"#orderSelectedModal\"\n                aria-label=\"view\" \n                onClick={() => {\n                    setSelectedOrder(row);\n                }}\n            >\n                <span className=\"glyphicon glyphicon-eye-open\" aria-hidden=\"true\"></span>\n            </button>\n            &nbsp;&nbsp;\n            <button \n                type=\"button\"\n                title=\"Change Status\"\n                className=\"btn btn-default btn-sm btn-icon\" \n                data-toggle=\"modal\" \n                data-target=\"#categoryModal\"\n                aria-label=\"edit\"\n                onClick={() => {\n                    setSelectedOrder(row);\n                }}\n            >\n                <span className=\"glyphicon glyphicon-tag\" aria-hidden=\"true\"></span>\n            </button>\n        </>\n    );\n\n    const FilterComponent = () => (\n        <>\n            <div className=\"input-group\">\n                <label for=\"filterByStatus\">Filter by Status: </label>\n                <select name=\"filterByStatus\" className=\"form-control\" defaultValue={filterStatus} onChange={e => setFilterStatus(e.target.value)}>\n                    <option value='all'>All</option>\n                    <option value='pending_payment'>Pending for Payment</option>\n                    <option value='open'>Open</option>\n                    <option value='completed'>Completed</option>\n                    <option value='canceled'>Canceled</option>\n                </select>\n            </div>\n        </>\n    );\n\n    // END Render Methods --------------------------------------------------------------------------\n\n    // Main render\n    return (\n        <Fragment>\n            <OrderForm selectedOrder={selectedOrder} />\n            <div className=\"row\">   \n                <Alert \n                    error = {dataTableError}\n                    success = {dataTableSuccess}\n                    onError = {(value) => {setDataTableError(value)}}\n                    onSuccess = {(value) => {setDataTableSuccess(value)}}\n                />\n            </div>\n            <DataTable\n                columns={columns}\n                data={filteredItems}\n                pagination\n                highlightOnHover\n                pointerOnHover\n                subHeader\n                subHeaderComponent={[FilterComponent()]}\n            />\n        </Fragment>\n    );\n}\n\nexport default OrderDataTable;","// Core Imports\nimport React, { Fragment } from \"react\";\n\n// Custom Component Imports\nimport OrderDataTable from './OrderDataTable';\nimport Layout from \"../../core/Layout\";\nimport Sidebar2 from \"../Sidebar2\";\n\n// TODO: Explanation\nconst Orders = (props) => {\n\n    // Render Methods ------------------------------------------------------------------------------\n\n    const orderManagementSection = () => {\n        return (\n            <Fragment>  \n                <div className=\"container ptb--40\">\n                    <div className=\"row\">\n                        <Sidebar2/>\n                    </div>\n                    <div className=\"row\">\n                        <OrderDataTable />\n                    </div>\n                </div>   \n            </Fragment>\n        );\n    };\n\n    // END Render Methods --------------------------------------------------------------------------\n\n    // Main render\n    return (\n        <Layout \n            title = \"Home Page\"\n            description = \"Ecommerce\"\n            showBreadcrumb = {true}\n            currentPage = \"Admin Dashboard\"\n        >\n            {orderManagementSection()}\n        </Layout>\n    );\n};\n\nexport default Orders;","import React from 'react';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\nimport Auth from './auth/Main';\nimport Home from './core/Home';\nimport TraditionalSP from './core/TraditionalSP';\nimport HtvSP from './core/HtvSP';\nimport Sublimation from './core/Sublimation';\nimport Embroidery from './core/Embroidery';\nimport Engraving from './core/Engraving';\nimport Merchandise from './core/Merchandise';\nimport Design from './design';\nimport PrivateRoute from './auth/PrivateRoute';\nimport UserDashboard from './user/Dashboard';\nimport UserConfirm from './user/Confirm';\nimport AdminUserInformation from './admin/dashboard/AdminInformation';\nimport Categories from './admin/categories/';\nimport Products from './admin/products';\nimport ProductViews from './admin/ProductViews';\nimport FullCart from './cart/fullCart';\nimport Checkout from './checkout'\nimport Payment from './payment'\nimport OrderList from './admin/orders'\n\nconst Routes = () => {\n    return(\n        <BrowserRouter>\n            <Switch>\n                <Route path=\"/\" exact component={Home} />\n                <Route path=\"/auth\" exact component={Auth} />\n                <Route path=\"/screen-printing/traditional\" exact component={TraditionalSP} />\n                <Route path=\"/main\" exact component={TraditionalSP} />\n                <Route path=\"/screen-printing/htv\" exact component={HtvSP} />\n                <Route path=\"/sublimation\" exact component={Sublimation} />\n                <Route path=\"/embroidery\" exact component={Embroidery} />\n                <Route path=\"/engraving\" exact component={Engraving} />\n                <Route path=\"/merchandise\" exact component={Merchandise} />\n                <Route path=\"/design/:productId\" exact component={Design} />\n                <Route path=\"/design/:productId/edit/:editProductId\" exact component={Design} />\n                <Route path=\"/design/:productId/edit/:editProductId/print/:printingType\" exact component={Design} />\n                <Route path=\"/cart\" exact component={FullCart} />\n                <Route path=\"/checkout\" exact component={Checkout} />\n                <Route path=\"/payment\" exact component={Payment} />\n                <PrivateRoute path=\"/user/dashboard\" exact component={UserDashboard} />\n                <PrivateRoute path=\"/user/confirm\" exact component={UserConfirm} />\n                <PrivateRoute path=\"/admin/dashboard/user-information\" adminRole={true} exact component={AdminUserInformation} />\n                <PrivateRoute path=\"/admin/dashboard/categories\" adminRole={true} exact component={Categories} />\n                <PrivateRoute path=\"/admin/dashboard/products\" adminRole={true} exact component={Products} />\n                <PrivateRoute path=\"/admin/dashboard/products/:id/product-views\" adminRole={true} exact component={ProductViews} />\n                <PrivateRoute path=\"/admin/dashboard/orders\" adminRole={true} exact component={OrderList} />\n            </Switch>\n        </BrowserRouter>\n    )\n}\n\nexport default Routes;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { initDB } from 'react-indexed-db';\n\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Routes from './Routes';\nimport Config from './config'\n\ninitDB(Config.DB_CONFIG);\n\nReactDOM.render(\n  <Routes />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}