{"version":3,"sources":["ui-component/cards/CardSecondaryAction.js","ui-component/extended/Avatar.js","../node_modules/@mui/icons-material/Add.js","views/workers/TableBasic.js","views/workers/WorkerForm.js","views/workers/SimpleModal.js","views/workers/index.js"],"names":["Avatar","color","outline","size","sx","others","theme","useTheme","colorSX","palette","background","paper","bgcolor","outlineSX","border","borderColor","sizeSX","width","spacing","height","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","createData","category","name","TableBasic","useState","data","setData","useEffect","axios","get","then","response","console","log","catch","error","Grid","container","gridSpacing","item","xs","MainCard","content","title","TableContainer","Table","minWidth","TableHead","TableRow","TableCell","pl","align","TableBody","map","row","hover","component","scope","validationSchema","yup","email","required","password","min","LoginForms","handleClose","setName","mail","setMail","phone","setPhone","paypal","setPaypal","role","setRole","setPassword","handleSave","a","formData","FormData","append","post","product","alert","dispatch","useDispatch","useFormik","initialValues","onSubmit","type","SNACKBAR_OPEN","open","message","variant","alertSeverity","TextField","label","fullWidth","id","defaultValue","margin","onChange","e","target","Stack","direction","justifyContent","AnimateButton","Button","onClick","style","getModalStyle","top","left","Body","forwardRef","ref","modalStyle","tabIndex","position","lg","transform","secondary","IconButton","fontSize","CardContent","WorkerForm","Divider","SimpleModal","setOpen","marginTop","Modal","onClose","propTypes","PropTypes","object","func","Workers"],"mappings":"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","file":"static/js/13.24995601.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { ButtonBase, Link, Tooltip } from '@mui/material';\r\n\r\n// project imports\r\nimport Avatar from '../extended/Avatar';\r\n\r\n// ==============================|| CARD SECONDARY ACTION ||============================== //\r\n\r\nconst CardSecondaryAction = ({ title, link, icon }) => {\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <Tooltip title={title || 'Reference'} placement=\"left\">\r\n            <ButtonBase disableRipple>\r\n                {!icon && (\r\n                    <Avatar component={Link} href={link} target=\"_blank\" alt=\"MUI Logo\" size=\"badge\" color=\"primary\" outline>\r\n                        <svg width=\"500\" height=\"500\" viewBox=\"0 0 500 500\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <g clipPath=\"url(#clip0)\">\r\n                                <path\r\n                                    d=\"M100 260.9V131L212.5 195.95V239.25L137.5 195.95V282.55L100 260.9Z\"\r\n                                    fill={theme.palette.primary[800]}\r\n                                />\r\n                                <path\r\n                                    d=\"M212.5 195.95L325 131V260.9L250 304.2L212.5 282.55L287.5 239.25V195.95L212.5 239.25V195.95Z\"\r\n                                    fill={theme.palette.primary.main}\r\n                                />\r\n                                <path d=\"M212.5 282.55V325.85L287.5 369.15V325.85L212.5 282.55Z\" fill={theme.palette.primary[800]} />\r\n                                <path\r\n                                    d=\"M287.5 369.15L400 304.2V217.6L362.5 239.25V282.55L287.5 325.85V369.15ZM362.5 195.95V152.65L400 131V174.3L362.5 195.95Z\"\r\n                                    fill={theme.palette.primary.main}\r\n                                />\r\n                            </g>\r\n                            <defs>\r\n                                <clipPath id=\"clip0\">\r\n                                    <rect width=\"300\" height=\"238.3\" fill=\"white\" transform=\"translate(100 131)\" />\r\n                                </clipPath>\r\n                            </defs>\r\n                        </svg>\r\n                    </Avatar>\r\n                )}\r\n                {icon && (\r\n                    <Avatar component={Link} href={link} target=\"_blank\" size=\"badge\" color=\"primary\" outline>\r\n                        {icon}\r\n                    </Avatar>\r\n                )}\r\n            </ButtonBase>\r\n        </Tooltip>\r\n    );\r\n};\r\n\r\nCardSecondaryAction.propTypes = {\r\n    icon: PropTypes.node,\r\n    link: PropTypes.string,\r\n    title: PropTypes.string\r\n};\r\n\r\nexport default CardSecondaryAction;\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport MuiAvatar from '@mui/material/Avatar';\r\n\r\n// ==============================|| AVATAR ||============================== //\r\n\r\nconst Avatar = ({ color, outline, size, sx, ...others }) => {\r\n    const theme = useTheme();\r\n\r\n    const colorSX = color && !outline && { color: theme.palette.background.paper, bgcolor: `${color}.main` };\r\n    const outlineSX = outline && {\r\n        color: color ? `${color}.main` : `primary.main`,\r\n        bgcolor: theme.palette.background.paper,\r\n        border: '2px solid',\r\n        borderColor: color ? `${color}.main` : `primary.main`\r\n    };\r\n    let sizeSX = {};\r\n    switch (size) {\r\n        case 'badge':\r\n            sizeSX = {\r\n                width: theme.spacing(3.5),\r\n                height: theme.spacing(3.5)\r\n            };\r\n            break;\r\n        case 'xs':\r\n            sizeSX = {\r\n                width: theme.spacing(4.25),\r\n                height: theme.spacing(4.25)\r\n            };\r\n            break;\r\n        case 'sm':\r\n            sizeSX = {\r\n                width: theme.spacing(5),\r\n                height: theme.spacing(5)\r\n            };\r\n            break;\r\n        case 'lg':\r\n            sizeSX = {\r\n                width: theme.spacing(9),\r\n                height: theme.spacing(9)\r\n            };\r\n            break;\r\n        case 'xl':\r\n            sizeSX = {\r\n                width: theme.spacing(10.25),\r\n                height: theme.spacing(10.25)\r\n            };\r\n            break;\r\n        case 'md':\r\n            sizeSX = {\r\n                width: theme.spacing(7.5),\r\n                height: theme.spacing(7.5)\r\n            };\r\n            break;\r\n        default:\r\n            sizeSX = {};\r\n    }\r\n\r\n    return <MuiAvatar sx={{ ...colorSX, ...outlineSX, ...sizeSX, ...sx }} {...others} />;\r\n};\r\n\r\nAvatar.propTypes = {\r\n    className: PropTypes.string,\r\n    color: PropTypes.string,\r\n    outline: PropTypes.bool,\r\n    size: PropTypes.string,\r\n    sx: PropTypes.object\r\n};\r\n\r\nexport default Avatar;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\n\nexports.default = _default;","import { useEffect, useState } from 'react';\n// material-ui\nimport { Grid, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport SecondaryAction from 'ui-component/cards/CardSecondaryAction';\nimport { gridSpacing } from 'store/constant';\n\nimport axios from 'axios';\n\n// table data\nfunction createData(category, name) {\n    return { category, name };\n}\n\nconst rows = [\n    createData('NightClubs', 'Mya Miller'),\n    createData('Restaurants', 'Tommy Phillips'),\n    createData('Restaurants', 'admin2@gmail.com')\n];\n\n// ==============================|| TABLE - BASIC ||============================== //\n\nexport default function TableBasic() {\n    const [data, setData] = useState([]);\n\n    useEffect(() => {\n        axios\n            .get('http://52.90.192.153/api/products')\n            .then((response) => {\n                console.log(response.data);\n                setData(response.data);\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    }, []);\n\n    return (\n        <Grid container spacing={gridSpacing}>\n            <Grid item xs={12}>\n                <MainCard\n                    content={false}\n                    title=\"All Workers\"\n\n                    // secondary={<SecondaryAction link=\"https://next.material-ui.com/components/tables/\" />}\n                >\n                    {/* table */}\n                    <TableContainer>\n                        <Table sx={{ minWidth: 350 }} aria-label=\"simple table\">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell sx={{ pl: 3 }}>Category</TableCell>\n                                    <TableCell align=\"left\">Name</TableCell>\n                                    {/* <TableCell align=\"right\">Is Paid</TableCell>\n                                    <TableCell align=\"right\" sx={{ pl: 3 }}>\n                                        Date\n                                    </TableCell>\n                                    <TableCell align=\"right\">Total</TableCell> */}\n                                    {/* <TableCell align=\"right\">Actions</TableCell> */}\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {data.map((row) => (\n                                    <TableRow hover key={row.name}>\n                                        <TableCell sx={{ pl: 3 }} component=\"th\" scope=\"row\">\n                                            {row.category.name}\n                                        </TableCell>\n                                        <TableCell align=\"left\">{row.name}</TableCell>\n                                        {/* <TableCell align=\"right\">{row.paid}</TableCell>\n                                        <TableCell align=\"right\">{row.date}</TableCell>\n                                        <TableCell align=\"right\">{`$${row.total}`}</TableCell> */}\n                                        {/* <TableCell align=\"right\">\n                                            <SecondaryAction link=\"https://next.material-ui.com/components/tables/\" />\n                                        </TableCell> */}\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                </MainCard>\n            </Grid>\n        </Grid>\n    );\n}\n","import { useEffect, useState } from 'react';\n\nimport { useDispatch } from 'react-redux';\n\n// material-ui\nimport { Button, Grid, Stack, TextField, MenuItem } from '@mui/material';\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport AnimateButton from 'ui-component/extended/AnimateButton';\nimport SecondaryAction from 'ui-component/cards/CardSecondaryAction';\nimport { SNACKBAR_OPEN } from 'store/actions';\nimport { gridSpacing } from 'store/constant';\n\n// third-party\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport axios from 'axios';\n\n// assets\nimport LinkIcon from '@mui/icons-material/Link';\n\n/**\n * 'Enter your email'\n * yup.string Expected 0 arguments, but got 1 */\nconst validationSchema = yup.object({\n    email: yup.string().required('Name is required'),\n    password: yup.string().min(8, 'Description should be of minimum 8 characters length').required('Description is required')\n});\n\nconst locals = [\n    {\n        value: 'id1',\n        label: 'Local Test 1'\n    },\n    {\n        value: 'id2',\n        label: 'Local Test 2'\n    }\n];\n\n// ==============================|| FORM VALIDATION - LOGIN FORMIK  ||============================== //\n\nconst LoginForms = ({ handleClose }) => {\n    const [categories, setCategories] = useState([]);\n    const [selectedCategory, setSelectedCategory] = useState('');\n    const [name, setName] = useState('');\n    const [mail, setMail] = useState('');\n    const [phone, setPhone] = useState('');\n    const [paypal, setPaypal] = useState('');\n    const [role, setRole] = useState('');\n    const [password, setPassword] = useState('');\n\n    const handleChange = (event) => {\n        setSelectedCategory(event.target.value);\n    };\n\n    const handleSave = async () => {\n        const formData = new FormData();\n        formData.append('name', name);\n        formData.append('email', mail);\n        formData.append('phoneNumber', phone);\n        formData.append('emailPaypal', paypal);\n        formData.append('role', role);\n        formData.append('password', password);\n        formData.append('category', '5ef37be1527af5690c290a7e');\n        axios\n            .post('http://52.90.192.153/api/products', { product: formData })\n            .then((response) => {\n                alert();\n                console.log(response);\n            })\n            .catch((error) => {\n                alert('fallo');\n                console.log(error);\n            });\n    };\n\n    // useEffect(() => {\n    //     axios\n    //         .get('')\n    //         .then((response) => {\n    //             console.log(response.data);\n    //             setCategories(response.data);\n    //         })\n    //         .catch((error) => {\n    //             console.log(error);\n    //         });\n    // }, []);\n\n    const dispatch = useDispatch();\n\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n            password: ''\n        },\n        validationSchema,\n        onSubmit: () => {\n            dispatch({\n                type: SNACKBAR_OPEN,\n                open: true,\n                message: 'Submit Success',\n                variant: 'alert',\n                alertSeverity: 'success'\n            });\n        }\n    });\n\n    return (\n        <MainCard\n        // title=\"On Submit\"\n        // secondary={<SecondaryAction icon={<LinkIcon fontSize=\"small\" />} link=\"https://formik.org/docs/examples/with-material-ui\" />}\n        >\n            <form>\n                <Grid container spacing={gridSpacing}>\n                    <Grid item xs={6}>\n                        <TextField\n                            label=\"Name\"\n                            fullWidth\n                            id=\"outlined-margin-normal\"\n                            defaultValue=\"\"\n                            // helperText=\"Some important text\"\n                            margin=\"normal\"\n                            onChange={(e) => {\n                                setName(e.target.value);\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <TextField\n                            label=\"Email\"\n                            fullWidth\n                            id=\"outlined-margin-normal\"\n                            defaultValue=\"\"\n                            // helperText=\"Some important text\"\n                            margin=\"normal\"\n                            onChange={(e) => {\n                                setMail(e.target.value);\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <TextField\n                            label=\"Phone\"\n                            fullWidth\n                            id=\"outlined-margin-normal\"\n                            defaultValue=\"\"\n                            // helperText=\"Some important text\"\n                            margin=\"normal\"\n                            onChange={(e) => {\n                                setPhone(e.target.value);\n                            }}\n                        />\n                    </Grid>\n                    {/* <Grid item xs={6}>\n                        <TextField\n                            label=\"Category\"\n                            fullWidth\n                            id=\"outlined-margin-normal\"\n                            // helperText=\"Some important text\"\n                            margin=\"normal\"\n                            select\n                            value={selectedCategory}\n                            onChange={handleChange}\n                        >\n                            {categories.map((option) => (\n                                <MenuItem key={option.id} value={option.id}>\n                                    {option.name}\n                                </MenuItem>\n                            ))}\n                        </TextField>\n                    </Grid> */}\n                    {/* <Grid item xs={6}>\n                        <TextField\n                            label=\"Local\"\n                            fullWidth\n                            id=\"outlined-margin-normal\"\n                            defaultValue=\"\"\n                            // helperText=\"Some important text\"\n                            margin=\"normal\"\n                            select\n                            value=\"id1\"\n                        >\n                            {locals.map((option) => (\n                                <MenuItem key={option.value} value={option.value}>\n                                    {option.label}\n                                </MenuItem>\n                            ))}\n                        </TextField>\n                    </Grid> */}\n                    <Grid item xs={6}>\n                        <TextField\n                            label=\"Paypal Account\"\n                            fullWidth\n                            id=\"outlined-margin-normal\"\n                            defaultValue=\"\"\n                            // helperText=\"Some important text\"\n                            margin=\"normal\"\n                            onChange={(e) => {\n                                setPaypal(e.target.value);\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <TextField\n                            label=\"Role\"\n                            fullWidth\n                            id=\"outlined-margin-normal\"\n                            defaultValue=\"\"\n                            // helperText=\"Some important text\"\n                            margin=\"normal\"\n                            onChange={(e) => {\n                                setRole(e.target.value);\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <TextField\n                            label=\"Password\"\n                            fullWidth\n                            id=\"outlined-margin-normal\"\n                            defaultValue=\"\"\n                            // helperText=\"Some important text\"\n                            margin=\"normal\"\n                            onChange={(e) => {\n                                setPassword(e.target.value);\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Stack direction=\"row\" justifyContent=\"flex-end\">\n                            <AnimateButton>\n                                <Button variant=\"contained\" onClick={() => handleSave()} style={{ background: '#96d2c6' }}>\n                                    Save\n                                </Button>\n                            </AnimateButton>\n                        </Stack>\n                    </Grid>\n                </Grid>\n            </form>\n        </MainCard>\n    );\n};\n\nexport default LoginForms;\n","import PropTypes from 'prop-types';\nimport { forwardRef, useState, useEffect } from 'react';\n\n// material-ui\nimport { Button, CardContent, CardActions, Divider, Grid, IconButton, Modal, Typography } from '@mui/material';\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport WorkerForm from './WorkerForm';\n\n// assets\nimport CloseIcon from '@mui/icons-material/Close';\nimport AddIcon from '@mui/icons-material/Add';\n\nimport axios from 'axios';\n\n// modal position\nfunction getModalStyle() {\n    const top = 50;\n    const left = 50;\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`\n        // transform: `translate(-${top}%, -${left}%)`\n    };\n}\n\nconst Body = forwardRef(({ modalStyle, handleClose }, ref) => (\n    <div ref={ref} tabIndex={-1}>\n        {/**\n         * style={modalStyle}\n         * Property 'style' does not exist on type 'IntrinsicAttributes & MainCardProps & RefAttributes<HTMLDivElement>\n         */}\n        <MainCard\n            style={modalStyle}\n            sx={{\n                position: 'absolute',\n                width: { xs: 280, lg: 840 },\n                top: '50%',\n                left: '50%',\n                transform: 'translate(-50%, -50%)'\n            }}\n            title=\"Add New Worker\"\n            content={false}\n            secondary={\n                <IconButton onClick={handleClose} size=\"large\">\n                    <CloseIcon fontSize=\"small\" />\n                </IconButton>\n            }\n        >\n            <CardContent>\n                <WorkerForm handleClose={handleClose} />\n                {/* <Typography variant=\"body1\">Laboris non ad et aute sint aliquip mollit voluptate velit dolore magna fugiat ex.</Typography>\n                <Typography variant=\"body2\" sx={{ mt: 2 }}>\n                    Commodo amet veniam nostrud mollit quis sint qui nulla elit esse excepteur ullamco esse magna. Nisi duis aute est in\n                    mollit irure enim tempor in.\n                </Typography> */}\n            </CardContent>\n            <Divider />\n        </MainCard>\n    </div>\n));\n\nBody.propTypes = {\n    modalStyle: PropTypes.object,\n    handleClose: PropTypes.func\n};\n\n// ==============================|| SIMPLE MODAL ||============================== //\n\nexport default function SimpleModal() {\n    // getModalStyle is not a pure function, we roll the style only on the first render\n    const [modalStyle] = useState(getModalStyle);\n\n    const [open, setOpen] = useState(false);\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <Grid container justifyContent=\"flex-end\">\n            <Button variant=\"contained\" type=\"button\" onClick={handleOpen} style={{ background: '#8B0B35', marginTop: 12 }}>\n                <AddIcon />\n            </Button>\n            <Modal open={open} onClose={handleClose} aria-labelledby=\"simple-modal-title\" aria-describedby=\"simple-modal-description\">\n                <Body modalStyle={modalStyle} handleClose={handleClose} />\n            </Modal>\n        </Grid>\n    );\n}\n","// material-ui\nimport { Typography } from '@mui/material';\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\n\n// components imports\nimport TableBasic from './TableBasic';\nimport SimpleModal from './SimpleModal';\n\n// ==============================|| SAMPLE PAGE ||============================== //\n\nconst Workers = () => (\n    <MainCard title=\"Workers\">\n        {/* <Typography variant=\"body2\">\n            Lorem ipsum dolor sit amen, consenter nipissing eli, sed do elusion tempos incident ut laborers et doolie magna alissa. Ut enif\n            ad minim venice, quin nostrum exercitation illampu laborings nisi ut liquid ex ea commons construal. Duos aube grue dolor in\n            reprehended in voltage veil esse colum doolie eu fujian bulla parian. Exceptive sin ocean cuspidate non president, sunk in culpa\n            qui officiate descent molls anim id est labours.\n        </Typography> */}\n        <TableBasic />\n\n        <SimpleModal />\n    </MainCard>\n);\n\nexport default Workers;\n"],"sourceRoot":""}