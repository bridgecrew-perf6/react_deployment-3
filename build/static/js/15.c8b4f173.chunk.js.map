{"version":3,"sources":["ui-component/extended/Avatar.js","ui-component/cards/SubCard.js","views/application/users/account-profile/Profile1/Profile.js","views/application/users/account-profile/Profile1/ChangePassword.js","views/application/users/account-profile/Profile1/index.js"],"names":["Avatar","color","outline","size","sx","others","theme","useTheme","colorSX","palette","background","paper","bgcolor","outlineSX","border","borderColor","sizeSX","width","spacing","height","SubCard","forwardRef","ref","children","content","contentClass","darkTitle","secondary","contentSX","title","mode","dark","light","primary","boxShadow","p","variant","action","opacity","className","defaultProps","createData","name","calories","fat","carbs","protein","Profile","useAuth","user","logout","useState","apiUser","setApiUser","useEffect","axios","get","id","then","response","console","log","data","catch","error","Grid","container","gridSpacing","item","lg","xs","alignItems","zeroMinWidth","Typography","align","role","Chip","label","List","component","ListItemButton","ListItemIcon","fontSize","ListItemText","ListItemSecondaryAction","email","Divider","phoneNumber","local","emailPaypal","cPassword","currentPassword","newPassword","firebase","auth","currentUser","cred","EmailAuthProvider","credential","reauthenticateWithCredential","reauthenticate","updatePassword","alert","ChangePassword","current","setCurrent","setNewPassword","confirmNewPassword","setConfirmNewPassword","noValidate","autoComplete","mb","md","TextField","type","fullWidth","value","onChange","e","target","borderBottomColor","justifyContent","mt","AnimateButton","Button","style","onClick","a","TabPanel","index","other","hidden","Box","tabsOption","icon","Profile1","setValue","MainCard","Tabs","indicatorColor","textColor","event","newValue","minHeight","minWidth","py","px","mr","grey","display","flexDirection","main","bottom","marginBottom","map","tab","Tab","Link","to","a11yProps"],"mappings":"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","file":"static/js/15.c8b4f173.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport MuiAvatar from '@mui/material/Avatar';\r\n\r\n// ==============================|| AVATAR ||============================== //\r\n\r\nconst Avatar = ({ color, outline, size, sx, ...others }) => {\r\n    const theme = useTheme();\r\n\r\n    const colorSX = color && !outline && { color: theme.palette.background.paper, bgcolor: `${color}.main` };\r\n    const outlineSX = outline && {\r\n        color: color ? `${color}.main` : `primary.main`,\r\n        bgcolor: theme.palette.background.paper,\r\n        border: '2px solid',\r\n        borderColor: color ? `${color}.main` : `primary.main`\r\n    };\r\n    let sizeSX = {};\r\n    switch (size) {\r\n        case 'badge':\r\n            sizeSX = {\r\n                width: theme.spacing(3.5),\r\n                height: theme.spacing(3.5)\r\n            };\r\n            break;\r\n        case 'xs':\r\n            sizeSX = {\r\n                width: theme.spacing(4.25),\r\n                height: theme.spacing(4.25)\r\n            };\r\n            break;\r\n        case 'sm':\r\n            sizeSX = {\r\n                width: theme.spacing(5),\r\n                height: theme.spacing(5)\r\n            };\r\n            break;\r\n        case 'lg':\r\n            sizeSX = {\r\n                width: theme.spacing(9),\r\n                height: theme.spacing(9)\r\n            };\r\n            break;\r\n        case 'xl':\r\n            sizeSX = {\r\n                width: theme.spacing(10.25),\r\n                height: theme.spacing(10.25)\r\n            };\r\n            break;\r\n        case 'md':\r\n            sizeSX = {\r\n                width: theme.spacing(7.5),\r\n                height: theme.spacing(7.5)\r\n            };\r\n            break;\r\n        default:\r\n            sizeSX = {};\r\n    }\r\n\r\n    return <MuiAvatar sx={{ ...colorSX, ...outlineSX, ...sizeSX, ...sx }} {...others} />;\r\n};\r\n\r\nAvatar.propTypes = {\r\n    className: PropTypes.string,\r\n    color: PropTypes.string,\r\n    outline: PropTypes.bool,\r\n    size: PropTypes.string,\r\n    sx: PropTypes.object\r\n};\r\n\r\nexport default Avatar;\r\n","import PropTypes from 'prop-types';\r\nimport { forwardRef } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Card, CardContent, CardHeader, Divider, Typography } from '@mui/material';\r\n\r\n// ==============================|| CUSTOM SUB CARD ||============================== //\r\n\r\nconst SubCard = forwardRef(({ children, content, contentClass, darkTitle, secondary, sx = {}, contentSX = {}, title, ...others }, ref) => {\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <Card\r\n            ref={ref}\r\n            sx={{\r\n                border: '1px solid',\r\n                borderColor: theme.palette.mode === 'dark' ? theme.palette.dark.light + 15 : theme.palette.primary.light,\r\n                ':hover': {\r\n                    boxShadow: theme.palette.mode === 'dark' ? '0 2px 14px 0 rgb(33 150 243 / 10%)' : '0 2px 14px 0 rgb(32 40 45 / 8%)'\r\n                },\r\n                ...sx\r\n            }}\r\n            {...others}\r\n        >\r\n            {/* card header and action */}\r\n            {!darkTitle && title && <CardHeader sx={{ p: 2.5 }} title={<Typography variant=\"h5\">{title}</Typography>} action={secondary} />}\r\n            {darkTitle && title && <CardHeader sx={{ p: 2.5 }} title={<Typography variant=\"h4\">{title}</Typography>} action={secondary} />}\r\n\r\n            {/* content & header divider */}\r\n            {title && (\r\n                <Divider\r\n                    sx={{\r\n                        opacity: 1,\r\n                        borderColor: theme.palette.mode === 'dark' ? theme.palette.dark.light + 15 : theme.palette.primary.light\r\n                    }}\r\n                />\r\n            )}\r\n\r\n            {/* card content */}\r\n            {content && (\r\n                <CardContent sx={{ p: 2.5, ...contentSX }} className={contentClass || ''}>\r\n                    {children}\r\n                </CardContent>\r\n            )}\r\n            {!content && children}\r\n        </Card>\r\n    );\r\n});\r\n\r\nSubCard.propTypes = {\r\n    children: PropTypes.node,\r\n    content: PropTypes.bool,\r\n    contentClass: PropTypes.string,\r\n    darkTitle: PropTypes.bool,\r\n    secondary: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object]),\r\n    sx: PropTypes.object,\r\n    contentSX: PropTypes.object,\r\n    title: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object])\r\n};\r\n\r\nSubCard.defaultProps = {\r\n    content: true\r\n};\r\n\r\nexport default SubCard;\r\n","import PropTypes from \"prop-types\";\r\nimport { useEffect, useState } from \"react\";\r\n// material-ui\r\nimport {\r\n  Box,\r\n  Button,\r\n  CardContent,\r\n  Chip,\r\n  Divider,\r\n  Grid,\r\n  LinearProgress,\r\n  List,\r\n  ListItemButton,\r\n  ListItemIcon,\r\n  ListItemSecondaryAction,\r\n  ListItemText,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableRow,\r\n  Typography,\r\n} from \"@mui/material\";\r\n\r\n// project imports\r\nimport Avatar from \"ui-component/extended/Avatar\";\r\nimport SubCard from \"ui-component/cards/SubCard\";\r\nimport { gridSpacing } from \"store/constant\";\r\nimport useAuth from \"../../../../../hooks/useAuth\";\r\n\r\n// assets\r\nimport {\r\n  IconMail,\r\n  IconPhone,\r\n  IconMapPin,\r\n  IconBuildingBank,\r\n  IconUser,\r\n} from \"@tabler/icons\";\r\nimport PhonelinkRingTwoToneIcon from \"@mui/icons-material/PhonelinkRingTwoTone\";\r\nimport PinDropTwoToneIcon from \"@mui/icons-material/PinDropTwoTone\";\r\nimport MailTwoToneIcon from \"@mui/icons-material/MailTwoTone\";\r\n\r\nimport Avatar3 from \"assets/images/users/avatar-3.png\";\r\nimport Avatar1 from \"assets/images/users/avatar-1.png\";\r\nimport QRCode from \"react-qr-code\";\r\nimport axios from \"axios\";\r\n\r\n// progress\r\nfunction LinearProgressWithLabel({ value, ...other }) {\r\n  return (\r\n    <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n      <Box sx={{ width: \"100%\", mr: 1 }}>\r\n        <LinearProgress {...other} />\r\n      </Box>\r\n      <Box sx={{ minWidth: 35 }}>\r\n        <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\r\n          value\r\n        )}%`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nLinearProgressWithLabel.propTypes = {\r\n  value: PropTypes.number,\r\n};\r\n\r\n// personal details table\r\n/** names Don&apos;t look right */\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData(\"Full Name\", \":\", \"Anshan Handgun\"),\r\n  createData(\"Fathers Name\", \":\", \"Mr. Deepen Handgun\"),\r\n  createData(\"Address\", \":\", \"Street 110-B Kalians Bag, Dewan, M.P. INDIA\"),\r\n  createData(\"Zip Code\", \":\", \"12345\"),\r\n  createData(\"Phone\", \":\", \"+0 123456789 , +0 123456789\"),\r\n  createData(\"Email\", \":\", \"support@example.com\"),\r\n  createData(\"Website\", \":\", \"http://example.com\"),\r\n];\r\n\r\n// ==============================|| PROFILE 1 - PROFILE ||============================== //\r\n\r\nconst Profile = () => {\r\n  const { logout, user } = useAuth();\r\n  const [apiUser, setApiUser] = useState(null);\r\n  useEffect(() => {\r\n    axios\r\n      .get(`http://52.90.192.153/api/userfirebase/${user?.id}`)\r\n      .then((response) => {\r\n        console.log(\"api user\", response.data);\r\n        setApiUser(response.data[0]);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  if (user?.id !== \"ge9F5m4txyZpczSenHzL4L0bmW42\") {\r\n    return (\r\n      <Grid container spacing={gridSpacing}>\r\n        <Grid item lg={3} xs={12} />\r\n        <Grid item lg={6} xs={12}>\r\n          <SubCard\r\n            title={\r\n              <Grid container spacing={2} alignItems=\"center\">\r\n                <Grid item>\r\n                  <IconUser />\r\n                </Grid>\r\n                <Grid item xs zeroMinWidth>\r\n                  <Typography align=\"left\" variant=\"subtitle1\">\r\n                    {apiUser?.name}\r\n                  </Typography>\r\n                  <Typography align=\"left\" variant=\"subtitle2\">\r\n                    {apiUser?.role}\r\n                  </Typography>\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                  <Chip size=\"small\" label=\"Worker\" />\r\n                </Grid>\r\n              </Grid>\r\n            }\r\n          >\r\n            <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n              <ListItemButton>\r\n                <ListItemIcon>\r\n                  <IconMail sx={{ fontSize: \"1.3rem\" }} />\r\n                </ListItemIcon>\r\n                <ListItemText\r\n                  primary={<Typography variant=\"subtitle1\">Email</Typography>}\r\n                />\r\n                <ListItemSecondaryAction>\r\n                  <Typography variant=\"subtitle2\" align=\"right\">\r\n                    {apiUser?.email}\r\n                  </Typography>\r\n                </ListItemSecondaryAction>\r\n              </ListItemButton>\r\n              <Divider />\r\n              <ListItemButton>\r\n                <ListItemIcon>\r\n                  <IconPhone sx={{ fontSize: \"1.3rem\" }} />\r\n                </ListItemIcon>\r\n                <ListItemText\r\n                  primary={<Typography variant=\"subtitle1\">Phone</Typography>}\r\n                />\r\n                <ListItemSecondaryAction>\r\n                  <Typography variant=\"subtitle2\" align=\"right\">\r\n                    {apiUser?.phoneNumber}\r\n                  </Typography>\r\n                </ListItemSecondaryAction>\r\n              </ListItemButton>\r\n              <Divider />\r\n              <ListItemButton>\r\n                <ListItemIcon>\r\n                  <IconMapPin sx={{ fontSize: \"1.3rem\" }} />\r\n                </ListItemIcon>\r\n                <ListItemText\r\n                  primary={\r\n                    <Typography variant=\"subtitle1\">Location</Typography>\r\n                  }\r\n                />\r\n                <ListItemSecondaryAction>\r\n                  <Typography variant=\"subtitle2\" align=\"right\">\r\n                    {apiUser?.local}\r\n                  </Typography>\r\n                </ListItemSecondaryAction>\r\n              </ListItemButton>\r\n              <Divider />\r\n              <ListItemButton>\r\n                <ListItemIcon>\r\n                  <IconBuildingBank sx={{ fontSize: \"1.3rem\" }} />\r\n                </ListItemIcon>\r\n                <ListItemText\r\n                  primary={\r\n                    <Typography variant=\"subtitle1\">Payment Account</Typography>\r\n                  }\r\n                />\r\n                <ListItemSecondaryAction>\r\n                  <Typography variant=\"subtitle2\" align=\"right\">\r\n                    {apiUser?.emailPaypal}\r\n                  </Typography>\r\n                </ListItemSecondaryAction>\r\n              </ListItemButton>\r\n            </List>\r\n          </SubCard>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n  return (\r\n    <Grid container spacing={gridSpacing}>\r\n      <Grid item lg={3} xs={12} />\r\n      <Grid item lg={6} xs={12}>\r\n        <SubCard\r\n          title={\r\n            <Grid container spacing={2} alignItems=\"center\">\r\n              <Grid item>\r\n                <IconUser />\r\n              </Grid>\r\n              <Grid item xs zeroMinWidth>\r\n                <Typography align=\"left\" variant=\"subtitle1\">\r\n                  Admin TipTipTop\r\n                </Typography>\r\n                <Typography align=\"left\" variant=\"subtitle2\">\r\n                  Admin\r\n                </Typography>\r\n              </Grid>\r\n\r\n              <Grid item>\r\n                <Chip size=\"small\" label=\"Admin\" />\r\n              </Grid>\r\n            </Grid>\r\n          }\r\n        >\r\n          <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n            <ListItemButton>\r\n              <ListItemIcon>\r\n                <IconMail sx={{ fontSize: \"1.3rem\" }} />\r\n              </ListItemIcon>\r\n              <ListItemText\r\n                primary={<Typography variant=\"subtitle1\">Email</Typography>}\r\n              />\r\n              <ListItemSecondaryAction>\r\n                <Typography variant=\"subtitle2\" align=\"right\">\r\n                  info@tiptiptop.co\r\n                </Typography>\r\n              </ListItemSecondaryAction>\r\n            </ListItemButton>\r\n            <Divider />\r\n            <ListItemButton>\r\n              <ListItemIcon>\r\n                <IconPhone sx={{ fontSize: \"1.3rem\" }} />\r\n              </ListItemIcon>\r\n              <ListItemText\r\n                primary={<Typography variant=\"subtitle1\">Phone</Typography>}\r\n              />\r\n              <ListItemSecondaryAction>\r\n                <Typography variant=\"subtitle2\" align=\"right\">\r\n                  (+1) 582 982 1807\r\n                </Typography>\r\n              </ListItemSecondaryAction>\r\n            </ListItemButton>\r\n\r\n            <Divider />\r\n          </List>\r\n        </SubCard>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import { useEffect, useState } from \"react\";\r\n// material-ui\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { Alert, AlertTitle, Button, Grid, TextField } from \"@mui/material\";\r\n\r\n// project imports\r\nimport SubCard from \"ui-component/cards/SubCard\";\r\nimport AnimateButton from \"ui-component/extended/AnimateButton\";\r\nimport { gridSpacing } from \"store/constant\";\r\nimport useAuth from \"../../../../../hooks/useAuth\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\n// ==============================|| PROFILE 1 - CHANGE PASSWORD ||============================== //\r\nconst reauthenticate = (currentPassword) => {\r\n  var user = firebase.auth().currentUser;\r\n  var cred = firebase.auth.EmailAuthProvider.credential(\r\n    user.email,\r\n    currentPassword\r\n  );\r\n  return user.reauthenticateWithCredential(cred);\r\n};\r\n\r\nconst cPassword = (currentPassword, newPassword) => {\r\n  reauthenticate(currentPassword)\r\n    .then(() => {\r\n      var user = firebase.auth().currentUser;\r\n      user\r\n        .updatePassword(newPassword)\r\n        .then(() => {\r\n          alert(\"Password updated!\");\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n};\r\n\r\nconst ChangePassword = () => {\r\n  const { logout, user } = useAuth();\r\n  const theme = useTheme();\r\n  const [current, setCurrent] = useState(\"\");\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [confirmNewPassword, setConfirmNewPassword] = useState(\"\");\r\n\r\n  return (\r\n    <Grid container spacing={gridSpacing}>\r\n      {/* <Grid item xs={12}>\r\n                <Alert severity=\"warning\" variant=\"outlined\" sx={{ borderColor: 'warning.dark' }}>\r\n                    <AlertTitle>Alert!</AlertTitle>\r\n                    Your Password will expire in every 3 months. So change it periodically.\r\n                    <strong> Do not share your password</strong>\r\n                </Alert>\r\n            </Grid> */}\r\n      <Grid item xs={12}>\r\n        <SubCard title=\"Change Password\">\r\n          <form noValidate autoComplete=\"off\">\r\n            <Grid container spacing={gridSpacing} sx={{ mb: 1.75 }}>\r\n              <Grid item xs={12} md={6}>\r\n                <TextField\r\n                  type=\"password\"\r\n                  id=\"outlined-basic7\"\r\n                  fullWidth\r\n                  value={current}\r\n                  onChange={(e) => setCurrent(e.target.value)}\r\n                  label=\"Current Password\"\r\n                  sx={{\r\n                    \"& label.Mui-focused\": {\r\n                      color: \"#8b0b35\",\r\n                    },\r\n                    \"& .MuiInput-underline:after\": {\r\n                      borderBottomColor: \"#747474\",\r\n                    },\r\n                    \"& .MuiOutlinedInput-root\": {\r\n                      \"& fieldset\": {\r\n                        borderColor: \"#c4c4c4\",\r\n                      },\r\n                      \"&:hover fieldset\": {\r\n                        borderColor: \"#8b0b35\",\r\n                      },\r\n                      \"&.Mui-focused fieldset\": {\r\n                        borderColor: \"#8b0b35\",\r\n                      },\r\n                    },\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container spacing={gridSpacing} sx={{ mb: 1.75 }}>\r\n              <Grid item xs={12} md={6}>\r\n                <TextField\r\n                  type=\"password\"\r\n                  id=\"outlined-basic8\"\r\n                  fullWidth\r\n                  value={newPassword}\r\n                  onChange={(e) => setNewPassword(e.target.value)}\r\n                  label=\"New Password\"\r\n                  sx={{\r\n                    \"& label.Mui-focused\": {\r\n                      color: \"#8b0b35\",\r\n                    },\r\n                    \"& .MuiInput-underline:after\": {\r\n                      borderBottomColor: \"#747474\",\r\n                    },\r\n                    \"& .MuiOutlinedInput-root\": {\r\n                      \"& fieldset\": {\r\n                        borderColor: \"#c4c4c4\",\r\n                      },\r\n                      \"&:hover fieldset\": {\r\n                        borderColor: \"#8b0b35\",\r\n                      },\r\n                      \"&.Mui-focused fieldset\": {\r\n                        borderColor: \"#8b0b35\",\r\n                      },\r\n                    },\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <TextField\r\n                  type=\"password\"\r\n                  id=\"outlined-basic9\"\r\n                  fullWidth\r\n                  label=\"Confirm Password\"\r\n                  value={confirmNewPassword}\r\n                  onChange={(e) => setConfirmNewPassword(e.target.value)}\r\n                  sx={{\r\n                    \"& label.Mui-focused\": {\r\n                      color: \"#8b0b35\",\r\n                    },\r\n                    \"& .MuiInput-underline:after\": {\r\n                      borderBottomColor: \"#747474\",\r\n                    },\r\n                    \"& .MuiOutlinedInput-root\": {\r\n                      \"& fieldset\": {\r\n                        borderColor: \"#c4c4c4\",\r\n                      },\r\n                      \"&:hover fieldset\": {\r\n                        borderColor: \"#8b0b35\",\r\n                      },\r\n                      \"&.Mui-focused fieldset\": {\r\n                        borderColor: \"#8b0b35\",\r\n                      },\r\n                    },\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n          <Grid spacing={2} container justifyContent=\"flex-end\" sx={{ mt: 3 }}>\r\n            <Grid item>\r\n              <AnimateButton>\r\n                <Button\r\n                  style={{ background: \"#8b0b35\" }}\r\n                  variant=\"contained\"\r\n                  onClick={async () => cPassword(current, newPassword)}\r\n                >\r\n                  Change Password\r\n                </Button>\r\n              </AnimateButton>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button\r\n                sx={{ color: \"#8b0b35\" }}\r\n                onClick={() => {\r\n                  setCurrent(\"\");\r\n                  setNewPassword(\"\");\r\n                  setConfirmNewPassword(\"\");\r\n                }}\r\n              >\r\n                Clear\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </SubCard>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ChangePassword;\r\n","import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Box, Grid, Tab, Tabs } from '@mui/material';\r\n\r\n// project imports\r\nimport Profile from './Profile';\r\nimport PersonalAccount from './PersonalAccount';\r\nimport MyAccount from './MyAccount';\r\nimport ChangePassword from './ChangePassword';\r\nimport Settings from './Settings';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// assets\r\nimport AccountCircleTwoToneIcon from '@mui/icons-material/AccountCircleTwoTone';\r\nimport DescriptionTwoToneIcon from '@mui/icons-material/DescriptionTwoTone';\r\nimport LibraryBooksTwoToneIcon from '@mui/icons-material/LibraryBooksTwoTone';\r\nimport { IconUser, IconLock } from '@tabler/icons';\r\nimport LockTwoToneIcon from '@mui/icons-material/LockTwoTone';\r\nimport MailTwoToneIcon from '@mui/icons-material/MailTwoTone';\r\n\r\n// tabs panel\r\nfunction TabPanel({ children, value, index, ...other }) {\r\n    return (\r\n        <div role=\"tabpanel\" hidden={value !== index} id={`simple-tabpanel-${index}`} aria-labelledby={`simple-tab-${index}`} {...other}>\r\n            {value === index && <Box sx={{ p: 0 }}>{children}</Box>}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`\r\n    };\r\n}\r\n\r\n// tabs option\r\nconst tabsOption = [\r\n    {\r\n        label: 'Profile',\r\n        icon: <IconUser sx={{ fontSize: '1.3rem' }} color=\"#8b0b35\" />\r\n    },\r\n    // {\r\n    //     label: 'Personal Details',\r\n    //     icon: <DescriptionTwoToneIcon sx={{ fontSize: '1.3rem' }} />\r\n    // },\r\n    // {\r\n    //     label: 'My Account',\r\n    //     icon: <LibraryBooksTwoToneIcon sx={{ fontSize: '1.3rem' }} />\r\n    // },\r\n    {\r\n        label: 'Change Password',\r\n        icon: <IconLock sx={{ fontSize: '1.3rem' }} color=\"#8b0b35\" />\r\n    }\r\n    // {\r\n    //     label: 'Settings',\r\n    //     icon: <MailTwoToneIcon sx={{ fontSize: '1.3rem' }} />\r\n    // }\r\n];\r\n\r\n// ==============================|| PROFILE 1 ||============================== //\r\n\r\nconst Profile1 = () => {\r\n    const theme = useTheme();\r\n\r\n    const [value, setValue] = useState(0);\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <MainCard>\r\n            <Grid container spacing={gridSpacing}>\r\n                <Grid item xs={12}>\r\n                    <Tabs\r\n                        value={value}\r\n                        indicatorColor=\"#8b0b35\"\r\n                        textColor=\"#8b0b35\"\r\n                        onChange={handleChange}\r\n                        // aria-label=\"simple tabs example\"\r\n                        variant=\"scrollable\"\r\n                        sx={{\r\n                            mb: 3,\r\n                            '& a': {\r\n                                minHeight: 'auto',\r\n                                minWidth: 10,\r\n                                py: 1.5,\r\n                                px: 1,\r\n                                mr: 2.25,\r\n                                color: theme.palette.grey[600],\r\n                                display: 'flex',\r\n                                flexDirection: 'row',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'center'\r\n                            },\r\n                            '& a.Mui-selected': {\r\n                                color: theme.palette.primary.main\r\n                            },\r\n                            '& .MuiTabs-indicator': {\r\n                                bottom: 2\r\n                            },\r\n                            '& a > svg': {\r\n                                marginBottom: '0px !important',\r\n                                mr: 1.25\r\n                            }\r\n                        }}\r\n                    >\r\n                        {tabsOption.map((tab, index) => (\r\n                            <Tab\r\n                                key={index}\r\n                                style={{ color: '#8b0b35' }}\r\n                                component={Link}\r\n                                to=\"#\"\r\n                                icon={tab.icon}\r\n                                label={tab.label}\r\n                                {...a11yProps(index)}\r\n                            />\r\n                        ))}\r\n                    </Tabs>\r\n                    <TabPanel value={value} index={0}>\r\n                        <Profile />\r\n                    </TabPanel>\r\n                    {/* <TabPanel value={value} index={1}>\r\n                        <PersonalAccount />\r\n                    </TabPanel> */}\r\n                    {/* <TabPanel value={value} index={2}>\r\n                        <MyAccount />\r\n                    </TabPanel> */}\r\n                    <TabPanel value={value} index={1}>\r\n                        <ChangePassword />\r\n                    </TabPanel>\r\n                    {/* <TabPanel value={value} index={4}>\r\n                        <Settings />\r\n                    </TabPanel> */}\r\n                </Grid>\r\n            </Grid>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default Profile1;\r\n"],"sourceRoot":""}