{"version":3,"sources":["ui-component/cards/CardSecondaryAction.js","ui-component/extended/Avatar.js","../node_modules/@mui/icons-material/Add.js","views/categories/CategoryForm.js","views/categories/SimpleModal.js","views/categories/TableBasic.js","views/categories/index.js"],"names":["Avatar","color","outline","size","sx","others","theme","useTheme","colorSX","palette","background","paper","bgcolor","outlineSX","border","borderColor","sizeSX","width","spacing","height","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","validationSchema","yup","email","required","password","min","LoginForms","handleClose","useState","name","setName","description","setDescription","handleSave","a","formData","FormData","append","axios","post","descr","then","response","console","log","catch","error","dispatch","useDispatch","formik","useFormik","initialValues","onSubmit","type","SNACKBAR_OPEN","open","message","variant","alertSeverity","MainCard","handleSubmit","Grid","container","gridSpacing","item","xs","TextField","label","fullWidth","id","defaultValue","margin","onChange","e","target","Stack","direction","justifyContent","AnimateButton","Button","onClick","style","getModalStyle","top","left","transform","Body","forwardRef","ref","modalStyle","tabIndex","position","lg","title","content","secondary","IconButton","fontSize","CardContent","CategoryForm","Divider","SimpleModal","setOpen","marginTop","Modal","onClose","propTypes","PropTypes","object","func","createData","TableBasic","data","setData","useEffect","get","TableContainer","Table","minWidth","TableHead","TableRow","TableCell","pl","align","TableBody","map","row","hover","component","scope","Categories"],"mappings":"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","file":"static/js/11.5bed6221.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { ButtonBase, Link, Tooltip } from '@mui/material';\r\n\r\n// project imports\r\nimport Avatar from '../extended/Avatar';\r\n\r\n// ==============================|| CARD SECONDARY ACTION ||============================== //\r\n\r\nconst CardSecondaryAction = ({ title, link, icon }) => {\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <Tooltip title={title || 'Reference'} placement=\"left\">\r\n            <ButtonBase disableRipple>\r\n                {!icon && (\r\n                    <Avatar component={Link} href={link} target=\"_blank\" alt=\"MUI Logo\" size=\"badge\" color=\"primary\" outline>\r\n                        <svg width=\"500\" height=\"500\" viewBox=\"0 0 500 500\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <g clipPath=\"url(#clip0)\">\r\n                                <path\r\n                                    d=\"M100 260.9V131L212.5 195.95V239.25L137.5 195.95V282.55L100 260.9Z\"\r\n                                    fill={theme.palette.primary[800]}\r\n                                />\r\n                                <path\r\n                                    d=\"M212.5 195.95L325 131V260.9L250 304.2L212.5 282.55L287.5 239.25V195.95L212.5 239.25V195.95Z\"\r\n                                    fill={theme.palette.primary.main}\r\n                                />\r\n                                <path d=\"M212.5 282.55V325.85L287.5 369.15V325.85L212.5 282.55Z\" fill={theme.palette.primary[800]} />\r\n                                <path\r\n                                    d=\"M287.5 369.15L400 304.2V217.6L362.5 239.25V282.55L287.5 325.85V369.15ZM362.5 195.95V152.65L400 131V174.3L362.5 195.95Z\"\r\n                                    fill={theme.palette.primary.main}\r\n                                />\r\n                            </g>\r\n                            <defs>\r\n                                <clipPath id=\"clip0\">\r\n                                    <rect width=\"300\" height=\"238.3\" fill=\"white\" transform=\"translate(100 131)\" />\r\n                                </clipPath>\r\n                            </defs>\r\n                        </svg>\r\n                    </Avatar>\r\n                )}\r\n                {icon && (\r\n                    <Avatar component={Link} href={link} target=\"_blank\" size=\"badge\" color=\"primary\" outline>\r\n                        {icon}\r\n                    </Avatar>\r\n                )}\r\n            </ButtonBase>\r\n        </Tooltip>\r\n    );\r\n};\r\n\r\nCardSecondaryAction.propTypes = {\r\n    icon: PropTypes.node,\r\n    link: PropTypes.string,\r\n    title: PropTypes.string\r\n};\r\n\r\nexport default CardSecondaryAction;\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport MuiAvatar from '@mui/material/Avatar';\r\n\r\n// ==============================|| AVATAR ||============================== //\r\n\r\nconst Avatar = ({ color, outline, size, sx, ...others }) => {\r\n    const theme = useTheme();\r\n\r\n    const colorSX = color && !outline && { color: theme.palette.background.paper, bgcolor: `${color}.main` };\r\n    const outlineSX = outline && {\r\n        color: color ? `${color}.main` : `primary.main`,\r\n        bgcolor: theme.palette.background.paper,\r\n        border: '2px solid',\r\n        borderColor: color ? `${color}.main` : `primary.main`\r\n    };\r\n    let sizeSX = {};\r\n    switch (size) {\r\n        case 'badge':\r\n            sizeSX = {\r\n                width: theme.spacing(3.5),\r\n                height: theme.spacing(3.5)\r\n            };\r\n            break;\r\n        case 'xs':\r\n            sizeSX = {\r\n                width: theme.spacing(4.25),\r\n                height: theme.spacing(4.25)\r\n            };\r\n            break;\r\n        case 'sm':\r\n            sizeSX = {\r\n                width: theme.spacing(5),\r\n                height: theme.spacing(5)\r\n            };\r\n            break;\r\n        case 'lg':\r\n            sizeSX = {\r\n                width: theme.spacing(9),\r\n                height: theme.spacing(9)\r\n            };\r\n            break;\r\n        case 'xl':\r\n            sizeSX = {\r\n                width: theme.spacing(10.25),\r\n                height: theme.spacing(10.25)\r\n            };\r\n            break;\r\n        case 'md':\r\n            sizeSX = {\r\n                width: theme.spacing(7.5),\r\n                height: theme.spacing(7.5)\r\n            };\r\n            break;\r\n        default:\r\n            sizeSX = {};\r\n    }\r\n\r\n    return <MuiAvatar sx={{ ...colorSX, ...outlineSX, ...sizeSX, ...sx }} {...others} />;\r\n};\r\n\r\nAvatar.propTypes = {\r\n    className: PropTypes.string,\r\n    color: PropTypes.string,\r\n    outline: PropTypes.bool,\r\n    size: PropTypes.string,\r\n    sx: PropTypes.object\r\n};\r\n\r\nexport default Avatar;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\n\nexports.default = _default;","import { useDispatch } from 'react-redux';\nimport { useState } from 'react';\n\n// material-ui\nimport { Button, Grid, Stack, TextField } from '@mui/material';\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport AnimateButton from 'ui-component/extended/AnimateButton';\nimport SecondaryAction from 'ui-component/cards/CardSecondaryAction';\nimport { SNACKBAR_OPEN } from 'store/actions';\nimport { gridSpacing } from 'store/constant';\n\n// third-party\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport axios from 'axios';\n\n// assets\nimport LinkIcon from '@mui/icons-material/Link';\n\n/**\n * 'Enter your email'\n * yup.string Expected 0 arguments, but got 1 */\nconst validationSchema = yup.object({\n    email: yup.string().required('Name is required'),\n    password: yup.string().min(8, 'Description should be of minimum 8 characters length').required('Description is required')\n});\n\n// ==============================|| FORM VALIDATION - LOGIN FORMIK  ||============================== //\n\nconst LoginForms = ({ handleClose }) => {\n    const [name, setName] = useState('');\n    const [description, setDescription] = useState('');\n\n    const handleSave = async () => {\n        const formData = new FormData();\n        formData.append('name', name);\n        formData.append('description', description);\n        axios\n            .post('http://52.90.192.153/api/categories', { name, descr: description })\n            .then((response) => {\n                console.log('paso', response);\n                handleClose();\n            })\n            .catch((error) => {\n                console.log(error);\n                handleClose();\n            });\n    };\n\n    const dispatch = useDispatch();\n\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n            password: ''\n        },\n        validationSchema,\n        onSubmit: () => {\n            dispatch({\n                type: SNACKBAR_OPEN,\n                open: true,\n                message: 'Submit Success',\n                variant: 'alert',\n                alertSeverity: 'success'\n            });\n        }\n    });\n\n    return (\n        <MainCard\n        // title=\"On Submit\"\n        // secondary={<SecondaryAction icon={<LinkIcon fontSize=\"small\" />} link=\"https://formik.org/docs/examples/with-material-ui\" />}\n        >\n            <form onSubmit={formik.handleSubmit}>\n                <Grid container spacing={gridSpacing}>\n                    <Grid item xs={12}>\n                        <TextField\n                            label=\"Name\"\n                            fullWidth\n                            id=\"outlined-margin-normal\"\n                            defaultValue=\"\"\n                            // helperText=\"Some important text\"\n                            margin=\"normal\"\n                            onChange={(e) => {\n                                setName(e.target.value);\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField\n                            label=\"Description\"\n                            fullWidth\n                            id=\"outlined-margin-normal\"\n                            defaultValue=\"\"\n                            // helperText=\"Some important text\"\n                            margin=\"normal\"\n                            onChange={(e) => {\n                                setDescription(e.target.value);\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Stack direction=\"row\" justifyContent=\"flex-end\">\n                            <AnimateButton>\n                                <Button variant=\"contained\" type=\"submit\" onClick={() => handleSave()} style={{ background: '#96d2c6' }}>\n                                    Save\n                                </Button>\n                            </AnimateButton>\n                        </Stack>\n                    </Grid>\n                </Grid>\n            </form>\n        </MainCard>\n    );\n};\n\nexport default LoginForms;\n","import PropTypes from 'prop-types';\nimport { forwardRef, useState } from 'react';\n\n// material-ui\nimport { Button, CardContent, CardActions, Divider, Grid, IconButton, Modal, Typography } from '@mui/material';\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport CategoryForm from './CategoryForm';\n\n// assets\nimport CloseIcon from '@mui/icons-material/Close';\nimport AddIcon from '@mui/icons-material/Add';\n\n// generate random\nfunction rand() {\n    return Math.round(Math.random() * 20) - 10;\n}\n\n// modal position\nfunction getModalStyle() {\n    const top = 50;\n    const left = 50;\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`\n    };\n}\n\nconst Body = forwardRef(({ modalStyle, handleClose }, ref) => (\n    <div ref={ref} tabIndex={-1}>\n        {/**\n         * style={modalStyle}\n         * Property 'style' does not exist on type 'IntrinsicAttributes & MainCardProps & RefAttributes<HTMLDivElement>\n         */}\n        <MainCard\n            style={modalStyle}\n            sx={{\n                position: 'absolute',\n                width: { xs: 280, lg: 450 },\n                top: '50%',\n                left: '50%',\n                transform: 'translate(-50%, -50%)'\n            }}\n            title=\"Add New Category\"\n            content={false}\n            secondary={\n                <IconButton onClick={handleClose} size=\"large\">\n                    <CloseIcon fontSize=\"small\" />\n                </IconButton>\n            }\n        >\n            <CardContent>\n                <CategoryForm handleClose={handleClose} />\n                {/* <Typography variant=\"body1\">Laboris non ad et aute sint aliquip mollit voluptate velit dolore magna fugiat ex.</Typography>\n                <Typography variant=\"body2\" sx={{ mt: 2 }}>\n                    Commodo amet veniam nostrud mollit quis sint qui nulla elit esse excepteur ullamco esse magna. Nisi duis aute est in\n                    mollit irure enim tempor in.\n                </Typography> */}\n            </CardContent>\n            <Divider />\n        </MainCard>\n    </div>\n));\n\nBody.propTypes = {\n    modalStyle: PropTypes.object,\n    handleClose: PropTypes.func\n};\n\n// ==============================|| SIMPLE MODAL ||============================== //\n\nexport default function SimpleModal() {\n    // getModalStyle is not a pure function, we roll the style only on the first render\n    const [modalStyle] = useState(getModalStyle);\n\n    const [open, setOpen] = useState(false);\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <Grid container justifyContent=\"flex-end\">\n            <Button variant=\"contained\" type=\"button\" onClick={handleOpen} style={{ background: '#8B0B35', marginTop: 12 }}>\n                <AddIcon />\n            </Button>\n            <Modal open={open} onClose={handleClose} aria-labelledby=\"simple-modal-title\" aria-describedby=\"simple-modal-description\">\n                <Body modalStyle={modalStyle} handleClose={handleClose} />\n            </Modal>\n        </Grid>\n    );\n}\n","import { useEffect, useState } from 'react';\n// material-ui\nimport { Grid, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport SecondaryAction from 'ui-component/cards/CardSecondaryAction';\nimport { gridSpacing } from 'store/constant';\nimport axios from 'axios';\n\n// table data\nfunction createData(name, description) {\n    return { name, description };\n}\n\nconst rows = [\n    createData('Restaurants', 'Restaurants & Pubs'),\n    createData('NightClubs', 'NightClubs'),\n    createData('Parking', 'Parking Places Categorie Description'),\n    createData('Airport/Bus/Train', 'Airport and Terminal Bus / Train'),\n    createData('Malls/Supermaket', 'Shoping Malls and Supermarkets')\n];\n\n// ==============================|| TABLE - BASIC ||============================== //\n\nexport default function TableBasic() {\n    const [data, setData] = useState([]);\n\n    useEffect(() => {\n        axios\n            .get('http://52.90.192.153/api/categories')\n            .then((response) => {\n                setData(response.data);\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    }, []);\n\n    return (\n        <Grid container spacing={gridSpacing}>\n            <Grid item xs={12}>\n                <MainCard\n                    content={false}\n                    title=\"All Categories\"\n\n                    // secondary={<SecondaryAction link=\"https://next.material-ui.com/components/tables/\" />}\n                >\n                    {/* table */}\n                    <TableContainer>\n                        <Table sx={{ minWidth: 350 }} aria-label=\"simple table\">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell sx={{ pl: 3 }}>Name</TableCell>\n                                    <TableCell align=\"left\">Description</TableCell>\n                                    {/* <TableCell align=\"right\">Is Paid</TableCell>\n                                    <TableCell align=\"right\" sx={{ pl: 3 }}>\n                                        Date\n                                    </TableCell>\n                                    <TableCell align=\"right\">Total</TableCell> */}\n                                    {/* <TableCell align=\"right\">Actions</TableCell> */}\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {data.map((row) => (\n                                    <TableRow hover key={row.name}>\n                                        <TableCell sx={{ pl: 3 }} component=\"th\" scope=\"row\">\n                                            {row.name}\n                                        </TableCell>\n                                        <TableCell align=\"left\">{row.descr}</TableCell>\n\n                                        {/* <TableCell align=\"right\">\n                                            <SecondaryAction link=\"https://next.material-ui.com/components/tables/\" />\n                                        </TableCell> */}\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                </MainCard>\n            </Grid>\n        </Grid>\n    );\n}\n","import { forwardRef, useState } from 'react';\n\n// material-ui\nimport { Typography, Grid, Divider, Button, CardActions } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport SimpleModal from './SimpleModal';\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\n\n// componentes imports\nimport TableBasic from './TableBasic';\n\n// ==============================|| SAMPLE PAGE ||============================== //\n\nconst Categories = () => (\n    <MainCard title=\"Categories\">\n        <TableBasic />\n        <Divider />\n\n        {/* <CardActions> */}\n        <SimpleModal />\n        {/* </CardActions> */}\n    </MainCard>\n);\n\nexport default Categories;\n"],"sourceRoot":""}