{"version":3,"sources":["views/pages/authentication/AuthWrapper1.js","views/pages/authentication/AuthCardWrapper.js","hooks/useScriptRef.js","ui-component/cards/AuthFooter.js","assets/images/icons/social-google.svg","views/APICalls.js","views/pages/authentication/auth-forms/AuthLogin.js","views/pages/authentication/authentication3/CustomerPayment.js"],"names":["AuthWrapper1","styled","theme","backgroundColor","palette","mode","background","default","primary","light","minHeight","AuthCardWrapper","children","other","sx","maxWidth","xs","lg","margin","md","flexGrow","flexBasis","content","p","sm","xl","useScriptRef","scripted","useRef","useEffect","current","AuthFooter","direction","justifyContent","variant","component","Link","target","underline","createOrder","order","token","fetch","method","headers","Accept","body","then","response","json","catch","err","console","log","processPayment","paymentData","a","JSON","stringify","createProduct","product","FirebaseLogin","loginProp","others","useTheme","scriptedRef","useMediaQuery","breakpoints","down","useSelector","state","customization","useState","checked","setChecked","useAuth","firebaseEmailPasswordSignIn","firebaseGoogleSignIn","showPassword","setShowPassword","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","container","spacing","initialValues","email","password","submit","validationSchema","Yup","shape","max","required","onSubmit","values","setErrors","setStatus","setSubmitting","success","message","error","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","fullWidth","Boolean","typography","customInput","htmlFor","color","id","type","value","name","onBlur","onChange","label","inputProps","borderColor","endAdornment","position","onClick","onMouseDown","edge","size","alignItems","control","mt","disableElevation","disabled","Login","finished","setFinished","isLoggedIn","change","setChange","setToken","setOrderId","workerId","setWorkerId","currentWorker","setCurrentWorker","amount","setAmount","porcent","setPorcent","price","setPrice","loading","clientToken","instance","address","data","setData","axios","get","worker","variable","vars","window","location","search","substring","split","i","length","pair","getQueryVariable","onClickPay","formData","FormData","append","Number","datacreate","nonce","setTimeout","_id","requestPaymentMethod","paymentMethodNonce","orderId","item","local","m","mb","to","options","authorization","onInstance","style","e","toFixed","marginTop"],"mappings":"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","file":"static/js/10.6989ef01.chunk.js","sourcesContent":["// material-ui\r\nimport { styled } from '@mui/material/styles';\r\n\r\n// ==============================|| AUTHENTICATION 1 WRAPPER ||============================== //\r\n\r\nconst AuthWrapper1 = styled('div')(({ theme }) => ({\r\n    backgroundColor: theme.palette.mode === 'dark' ? theme.palette.background.default : theme.palette.primary.light,\r\n    minHeight: '100vh'\r\n}));\r\n\r\nexport default AuthWrapper1;\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { Box } from '@mui/material';\r\n\r\n// project import\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n\r\n// ==============================|| AUTHENTICATION CARD WRAPPER ||============================== //\r\n\r\nconst AuthCardWrapper = ({ children, ...other }) => (\r\n    <MainCard\r\n        sx={{\r\n            maxWidth: { xs: 400, lg: 475 },\r\n            margin: { xs: 2.5, md: 3 },\r\n            '& > *': {\r\n                flexGrow: 1,\r\n                flexBasis: '50%'\r\n            }\r\n        }}\r\n        content={false}\r\n        {...other}\r\n    >\r\n        <Box sx={{ p: { xs: 2, sm: 3, xl: 5 } }}>{children}</Box>\r\n    </MainCard>\r\n);\r\n\r\nAuthCardWrapper.propTypes = {\r\n    children: PropTypes.node\r\n};\r\n\r\nexport default AuthCardWrapper;\r\n","import { useEffect, useRef } from 'react';\r\n\r\n// ==============================|| ELEMENT REFERENCE HOOKS  ||============================== //\r\n\r\nconst useScriptRef = () => {\r\n    const scripted = useRef(true);\r\n\r\n    useEffect(\r\n        () => () => {\r\n            scripted.current = false;\r\n        },\r\n        []\r\n    );\r\n\r\n    return scripted;\r\n};\r\n\r\nexport default useScriptRef;\r\n","// material-ui\r\nimport { Link, Typography, Stack } from \"@mui/material\";\r\n\r\n// ==============================|| FOOTER - AUTHENTICATION 2 & 3 ||============================== //\r\n\r\nconst AuthFooter = () => (\r\n  <Stack direction=\"row\" justifyContent=\"space-between\">\r\n    {/* <Typography variant=\"subtitle2\" component={Link} href=\"https://berrydashboard.io\" target=\"_blank\" underline=\"hover\">\r\n            berrydashboard.io\r\n        </Typography> */}\r\n    <Typography\r\n      variant=\"subtitle2\"\r\n      component={Link}\r\n      target=\"_blank\"\r\n      underline=\"hover\"\r\n    >\r\n      &copy; TipTipTop\r\n    </Typography>\r\n  </Stack>\r\n);\r\n\r\nexport default AuthFooter;\r\n","export default __webpack_public_path__ + \"static/media/social-google.a57081bd.svg\";","// ORDERS\nexport const createOrder = (order, token) => {\n  return fetch(`http://52.90.192.153/api/orders`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"x-access-token\": token,\n    },\n    body: order,\n  })\n    .then((response) => {\n      return response.json();\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n\nexport const createRating = (token, ratings) => {\n  return fetch(`http://52.90.192.153/api/rating`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      \"x-access-token\": token,\n    },\n    body: JSON.stringify(ratings),\n  })\n    .then((response) => {\n      return response.json();\n    })\n    .catch((err) => console.log(err));\n};\n\nexport const processPayment = async (paymentData) => {\n  return fetch(`http://52.90.192.153/api/braintree/processPayment`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(paymentData),\n  })\n    .then((response) => {\n      console.log(\"Response Process Payment:::::\", response);\n      return response.json();\n    })\n    .catch((err) => {\n      //alert('fail process payment');\n      console.log(err);\n    });\n};\n\nexport const updateOrderStatus = async (orderId, body) => {\n  return fetch(`http://52.90.192.153/api/orders/${orderId}/status`, {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(body),\n  })\n    .then((response) => {\n      console.log(\"Response Update Order:::::\", response);\n      return response.json();\n    })\n    .catch((err) => {\n      //alert('fail update order');\n      console.log(err);\n    });\n};\n\nexport const createProduct = (token, product) => {\n  return fetch(`http://52.90.192.153/api/products`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"x-access-token\": token,\n    },\n    body: product,\n  })\n    .then((response) => {\n      return response.json();\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n","import PropTypes from \"prop-types\";\r\nimport { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// material-ui\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  Divider,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormHelperText,\r\n  Grid,\r\n  IconButton,\r\n  InputAdornment,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  Stack,\r\n  Typography,\r\n  useMediaQuery,\r\n} from \"@mui/material\";\r\n\r\n// third party\r\nimport * as Yup from \"yup\";\r\nimport { Formik } from \"formik\";\r\n\r\n// project imports\r\nimport useAuth from \"hooks/useAuth\";\r\nimport useScriptRef from \"hooks/useScriptRef\";\r\nimport AnimateButton from \"ui-component/extended/AnimateButton\";\r\n\r\n// assets\r\nimport Visibility from \"@mui/icons-material/Visibility\";\r\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\r\n\r\nimport Google from \"assets/images/icons/social-google.svg\";\r\n\r\n// ============================|| FIREBASE - LOGIN ||============================ //\r\n\r\nconst FirebaseLogin = ({ loginProp, ...others }) => {\r\n  const theme = useTheme();\r\n  const scriptedRef = useScriptRef();\r\n  const matchDownSM = useMediaQuery(theme.breakpoints.down(\"md\"));\r\n  const customization = useSelector((state) => state.customization);\r\n  const [checked, setChecked] = useState(true);\r\n\r\n  const { firebaseEmailPasswordSignIn, firebaseGoogleSignIn } = useAuth();\r\n  const googleHandler = async () => {\r\n    try {\r\n      await firebaseGoogleSignIn();\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const handleClickShowPassword = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid container direction=\"column\" justifyContent=\"center\" spacing={2}>\r\n        {/* <Grid item xs={12}>\r\n                    <AnimateButton>\r\n                        <Button\r\n                            disableElevation\r\n                            fullWidth\r\n                            onClick={googleHandler}\r\n                            size=\"large\"\r\n                            variant=\"outlined\"\r\n                            sx={{\r\n                                color: 'grey.700',\r\n                                backgroundColor: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.grey[50],\r\n                                borderColor: theme.palette.mode === 'dark' ? theme.palette.dark.light + 20 : theme.palette.grey[100]\r\n                            }}\r\n                        >\r\n                            <Box sx={{ mr: { xs: 1, sm: 2, width: 20 } }}>\r\n                                <img src={Google} alt=\"google\" width={16} height={16} style={{ marginRight: matchDownSM ? 8 : 16 }} />\r\n                            </Box>\r\n                            Sign in with Google\r\n                        </Button>\r\n                    </AnimateButton>\r\n                </Grid> */}\r\n        {/* <Grid item xs={12}>\r\n                    <Box\r\n                        sx={{\r\n                            alignItems: 'center',\r\n                            display: 'flex'\r\n                        }}\r\n                    >\r\n                        <Divider sx={{ flexGrow: 1 }} orientation=\"horizontal\" />\r\n\r\n                        <Button\r\n                            variant=\"outlined\"\r\n                            sx={{\r\n                                cursor: 'unset',\r\n                                m: 2,\r\n                                py: 0.5,\r\n                                px: 7,\r\n                                borderColor:\r\n                                    theme.palette.mode === 'dark'\r\n                                        ? `${theme.palette.dark.light + 20} !important`\r\n                                        : `${theme.palette.grey[100]} !important`,\r\n                                color: `${theme.palette.grey[900]}!important`,\r\n                                fontWeight: 500,\r\n                                borderRadius: `${customization.borderRadius}px`\r\n                            }}\r\n                            disableRipple\r\n                            disabled\r\n                        >\r\n                            OR\r\n                        </Button>\r\n\r\n                        <Divider sx={{ flexGrow: 1 }} orientation=\"horizontal\" />\r\n                    </Box>\r\n                </Grid> */}\r\n        {/* <Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\r\n                    <Box sx={{ mb: 2 }}>\r\n                        <Typography variant=\"subtitle1\">Sign in with Email address</Typography>\r\n                    </Box>\r\n                </Grid> */}\r\n      </Grid>\r\n\r\n      <Formik\r\n        initialValues={{\r\n          email: \"\",\r\n          password: \"\",\r\n          submit: null,\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          email: Yup.string()\r\n            .email(\"Must be a valid email\")\r\n            .max(255)\r\n            .required(\"Email is required\"),\r\n          password: Yup.string().max(255).required(\"Password is required\"),\r\n        })}\r\n        onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\r\n          try {\r\n            await firebaseEmailPasswordSignIn(\r\n              values.email,\r\n              values.password\r\n            ).then(\r\n              () => {\r\n                // WARNING: do not set any formik state here as formik might be already destroyed here. You may get following error by doing so.\r\n                // Warning: Can't perform a React state update on an unmounted component. This is a no-op, but it indicates a memory leak in your application.\r\n                // To fix, cancel all subscriptions and asynchronous tasks in a useEffect cleanup function.\r\n                // github issue: https://github.com/formium/formik/issues/2430\r\n              },\r\n              (err) => {\r\n                if (scriptedRef.current) {\r\n                  setStatus({ success: false });\r\n                  setErrors({ submit: err.message });\r\n                  setSubmitting(false);\r\n                }\r\n              }\r\n            );\r\n          } catch (err) {\r\n            console.error(err);\r\n            if (scriptedRef.current) {\r\n              setStatus({ success: false });\r\n              setErrors({ submit: err.message });\r\n              setSubmitting(false);\r\n            }\r\n          }\r\n        }}\r\n      >\r\n        {({\r\n          errors,\r\n          handleBlur,\r\n          handleChange,\r\n          handleSubmit,\r\n          isSubmitting,\r\n          touched,\r\n          values,\r\n        }) => (\r\n          <form noValidate onSubmit={handleSubmit} {...others}>\r\n            <FormControl\r\n              fullWidth\r\n              error={Boolean(touched.email && errors.email)}\r\n              sx={{ ...theme.typography.customInput }}\r\n            >\r\n              <InputLabel\r\n                htmlFor=\"outlined-adornment-email-login\"\r\n                sx={{\r\n                  \"&.Mui-focused\": {\r\n                    color: \"#8b0b35\",\r\n                  },\r\n                  color: \"#8b0b35\",\r\n                }}\r\n              >\r\n                Email Address / Username\r\n              </InputLabel>\r\n              <OutlinedInput\r\n                id=\"outlined-adornment-email-login\"\r\n                type=\"email\"\r\n                value={values.email}\r\n                name=\"email\"\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                label=\"Email Address / Username\"\r\n                inputProps={{}}\r\n                sx={{\r\n                  \"& .MuiInputBase-root\": {\r\n                    \"& fieldset\": {\r\n                      borderColor: \"yellow\",\r\n                    },\r\n                    \"&.Mui-focused fieldset\": {\r\n                      borderColor: \"yellow\",\r\n                    },\r\n                  },\r\n                }}\r\n              />\r\n              {touched.email && errors.email && (\r\n                <FormHelperText\r\n                  error\r\n                  id=\"standard-weight-helper-text-email-login\"\r\n                >\r\n                  {errors.email}\r\n                </FormHelperText>\r\n              )}\r\n            </FormControl>\r\n\r\n            <FormControl\r\n              fullWidth\r\n              error={Boolean(touched.password && errors.password)}\r\n              sx={{ ...theme.typography.customInput }}\r\n            >\r\n              <InputLabel\r\n                htmlFor=\"outlined-adornment-password-login\"\r\n                sx={{\r\n                  \"&.Mui-focused\": {\r\n                    color: \"#8b0b35\",\r\n                  },\r\n                  color: \"#8b0b35\",\r\n                }}\r\n              >\r\n                Password\r\n              </InputLabel>\r\n              <OutlinedInput\r\n                id=\"outlined-adornment-password-login\"\r\n                type={showPassword ? \"text\" : \"password\"}\r\n                value={values.password}\r\n                name=\"password\"\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                endAdornment={\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      aria-label=\"toggle password visibility\"\r\n                      onClick={handleClickShowPassword}\r\n                      onMouseDown={handleMouseDownPassword}\r\n                      edge=\"end\"\r\n                      size=\"large\"\r\n                    >\r\n                      {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                }\r\n                label=\"Password\"\r\n                inputProps={{}}\r\n              />\r\n              {touched.password && errors.password && (\r\n                <FormHelperText\r\n                  error\r\n                  id=\"standard-weight-helper-text-password-login\"\r\n                >\r\n                  {errors.password}\r\n                </FormHelperText>\r\n              )}\r\n            </FormControl>\r\n            <Stack\r\n              direction=\"row\"\r\n              alignItems=\"center\"\r\n              justifyContent=\"space-between\"\r\n              spacing={1}\r\n            >\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={checked}\r\n                    onChange={(event) => setChecked(event.target.checked)}\r\n                    name=\"checked\"\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label=\"Remember me\"\r\n              />\r\n              {/* <Typography\r\n                                variant=\"subtitle1\"\r\n                                component={Link}\r\n                                to={loginProp ? `/pages/forgot-password/forgot-password${loginProp}` : '/forgot'}\r\n                                color=\"secondary\"\r\n                                sx={{ textDecoration: 'none' }}\r\n                            >\r\n                                Forgot Password?\r\n                            </Typography> */}\r\n            </Stack>\r\n            {errors.submit && (\r\n              <Box sx={{ mt: 3 }}>\r\n                <FormHelperText error>{errors.submit}</FormHelperText>\r\n              </Box>\r\n            )}\r\n\r\n            <Box sx={{ mt: 2 }}>\r\n              <AnimateButton>\r\n                <Button\r\n                  disableElevation\r\n                  disabled={isSubmitting}\r\n                  fullWidth\r\n                  size=\"large\"\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                >\r\n                  Sign in\r\n                </Button>\r\n              </AnimateButton>\r\n            </Box>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nFirebaseLogin.propTypes = {\r\n  loginProp: PropTypes.number,\r\n};\r\n\r\nexport default FirebaseLogin;\r\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport DropIn from \"braintree-web-drop-in-react\";\n// material-ui\nimport { useTheme } from \"@mui/material/styles\";\nimport {\n  Divider,\n  Grid,\n  Stack,\n  Typography,\n  useMediaQuery,\n  TextField,\n  Button,\n} from \"@mui/material\";\nimport {\n  createOrder,\n  processPayment,\n  updateOrderStatus,\n} from \"../../../APICalls\";\n\n// project imports\nimport AuthWrapper1 from \"../AuthWrapper1\";\nimport AuthCardWrapper from \"../AuthCardWrapper\";\nimport AuthLogin from \"../auth-forms/AuthLogin\";\nimport Logo from \"ui-component/Logo\";\nimport AuthFooter from \"ui-component/cards/AuthFooter\";\nimport useAuth from \"hooks/useAuth\";\nimport axios from \"axios\";\n\n// assets\n\nconst getQueryVariable = (variable) => {\n  var query = window.location.search.substring(1);\n  //console.log(query)//\"app=article&act=news_content&aid=160990\"\n  var vars = query.split(\"&\");\n  //console.log(vars) //[ 'app=article', 'act=news_content', 'aid=160990' ]\n  for (var i = 0; i < vars.length; i++) {\n    var pair = vars[i].split(\"=\");\n    //console.log(pair)//[ 'app', 'article' ][ 'act', 'news_content' ][ 'aid', '160990' ]\n    if (pair[0] == variable) {\n      //console.log('pair1',pair[1]);\n      return pair[1];\n    }\n  }\n  return false;\n};\n\n// ================================|| AUTH3 - LOGIN ||================================ //\n\nconst Login = () => {\n  const [finished, setFinished] = useState(false);\n  const theme = useTheme();\n  const { isLoggedIn } = useAuth();\n  const matchDownSM = useMediaQuery(theme.breakpoints.down(\"md\"));\n  const [change, setChange] = useState(false);\n  const [token, setToken] = useState(\"\");\n  const [orderId, setOrderId] = useState(\"\");\n  const [workerId, setWorkerId] = useState(\"\");\n  const [currentWorker, setCurrentWorker] = useState(\"\");\n  const [amount, setAmount] = useState(0);\n  const [tip, setTip] = useState(0);\n  const [porcent, setPorcent] = useState(10);\n  const [price, setPrice] = useState(0);\n  const [data, setData] = useState({\n    loading: false,\n    success: false,\n    clientToken: null,\n    error: \"\",\n    instance: {},\n    address: \"\",\n  });\n\n  useEffect(() => {\n    axios\n      .get(\"http://52.90.192.153/api/braintree/getToken\")\n      .then((response) => {\n        setToken(response.data.clientToken);\n        setData({ clientToken: data.clientToken });\n        console.log(\"token::::\", response.data.clientToken);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  useEffect(() => {\n    let worker = getQueryVariable(\"worker\");\n\n    axios\n      .get(`http://52.90.192.153/api/products/${worker}`)\n      .then((response) => {\n        console.log(\"response CurrentWorker:::\", response.data);\n        setWorkerId(worker);\n        setCurrentWorker(response.data);\n      })\n      .catch((error) => {\n        // alert(\"fail get current worker\");\n        console.log(\"fail get current worker\");\n        console.log(error);\n      });\n  }, []);\n\n  const onClickPay = async () => {\n    let formData = new FormData();\n    formData.append(\"price\", Number(price));\n    formData.append(\"term\", Number(1));\n    formData.append(\"trFee\", Number(1));\n    formData.append(\"dish\", Number(1));\n    formData.append(\"atmosphere\", Number(1));\n    formData.append(\"tasty\", Number(1));\n    formData.append(\"goodService\", Number(1));\n    formData.append(\"porcent\", Number(porcent));\n    formData.append(\"valueStar\", Number(4));\n    formData.append(\"idFirebase\", workerId);\n    formData.append(\"product_id\", workerId);\n    formData.append(\"product\", JSON.stringify(currentWorker));\n    console.log(\"formData::\", formData);\n\n    createOrder(formData, token).then((datacreate) => {\n      console.log(\"datacreate\", datacreate);\n      setTimeout(() => {\n        setOrderId(datacreate._id);\n      }, 1500);\n\n      let nonce;\n      console.log(\"DATA INSTANCE:\", data);\n      data.instance\n        .requestPaymentMethod()\n        .then((data) => {\n          // console.log(data);\n          nonce = data.nonce;\n          // once you have nonce (card type, card number) send nonce as 'paymentMethodNonce'\n          // and also total to be charged\n          console.log(\"send nonce and total to process: \", nonce);\n          console.log(\"price\", price);\n\n          const paymentData = {\n            paymentMethodNonce: nonce,\n            orderId: datacreate._id,\n          };\n\n          processPayment(paymentData)\n            .then((response) => {\n              console.log(\"response payment process:\", response);\n              if (response.success === true) {\n                //showBlockSuccessUIModalRef.current.click();\n                //setNoPayment(false);\n                // alert(\"Payment successful\");\n                setFinished(true);\n                //let body = { status: \"Open\", is_paid: \"true\" };\n                //updateOrderStatus(datacreate._id, body).then((response) => {\n                //console.log(\"response update orfder status\", response);\n                //});\n\n                //TODO: vaciar carrito y eliminar datos de localstorage y de indexDB\n              }\n            })\n            .catch((error) => {\n              // showBlockErrorUIModalRef.current.click();\n              console.log(error);\n              setData({ loading: false });\n            });\n        })\n        .catch((error) => {\n          // console.log(\"dropin error: \", error);\n          setData({ ...data, error: error.message });\n        });\n    });\n  };\n\n  if (finished)\n    return (\n      <AuthWrapper1>\n        <Grid\n          container\n          direction=\"column\"\n          justifyContent=\"flex-end\"\n          sx={{ minHeight: \"100vh\" }}\n        >\n          <Grid item xs={12}>\n            <Grid\n              container\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              sx={{ minHeight: \"calc(100vh - 68px)\" }}\n              direction=\"column\"\n            >\n              <Typography>{\"Payment Successful. Thank You.\"}</Typography>\n              <Typography>{`Transaction Details:`}</Typography>\n              <Typography>{`Paid: ${price} to ${currentWorker.name} at ${currentWorker.local}`}</Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n      </AuthWrapper1>\n    );\n\n  if (!change)\n    return (\n      <AuthWrapper1>\n        <Grid\n          container\n          direction=\"column\"\n          justifyContent=\"flex-end\"\n          sx={{ minHeight: \"100vh\" }}\n        >\n          <Grid item xs={12}>\n            <Grid\n              container\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              sx={{ minHeight: \"calc(100vh - 68px)\" }}\n            >\n              <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\n                <AuthCardWrapper>\n                  <Grid\n                    container\n                    spacing={2}\n                    alignItems=\"center\"\n                    justifyContent=\"center\"\n                  >\n                    <Grid item sx={{ mb: 3 }}>\n                      <Link to=\"#\">\n                        <Logo />\n                      </Link>\n                    </Grid>\n                    {/* <Grid item xs={12}>\n                                      \n                                        </Grid> */}\n                    <Grid item xs={12}>\n                      {/* <AuthLogin /> */}\n                      <TextField\n                        id=\"outlined-basic\"\n                        label=\"Bill Amount\"\n                        value={amount}\n                        variant=\"outlined\"\n                        fullWidth\n                        onChange={(e) => {\n                          setAmount(e.target.value);\n                          if (porcent === 10) {\n                            setPrice((e.target.value * 0.1).toFixed(2));\n                          }\n                          if (porcent === 15) {\n                            setPrice((e.target.value * 0.15).toFixed(2));\n                          }\n                          if (porcent === 20) {\n                            setPrice((e.target.value * 0.2).toFixed(2));\n                          }\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid container style={{ marginTop: 12 }}>\n                      <Grid item xs={2} />\n                      <Grid item xs={1}>\n                        <Button\n                          style={{ background: \"#8B0B35\" }}\n                          variant=\"contained\"\n                          onClick={() => {\n                            setPorcent(10);\n                            setPrice((amount * 0.1).toFixed(2));\n                          }}\n                        >\n                          10%\n                        </Button>\n                      </Grid>\n                      <Grid item xs={2} />\n                      <Grid item xs={1}>\n                        <Button\n                          style={{ background: \"#8B0B35\" }}\n                          variant=\"contained\"\n                          onClick={() => {\n                            setPorcent(15);\n                            setPrice((amount * 0.15).toFixed(2));\n                          }}\n                        >\n                          15%\n                        </Button>\n                      </Grid>\n                      <Grid item xs={2} />\n                      <Grid item xs={1}>\n                        <Button\n                          style={{ background: \"#8B0B35\" }}\n                          onClick={() => {\n                            setPorcent(20);\n                            setPrice((amount * 0.2).toFixed(2));\n                          }}\n                          variant=\"contained\"\n                        >\n                          20%\n                        </Button>\n                      </Grid>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                      {/* <AuthLogin /> */}\n                      {/* <Typography>{`Tips   $${price}`}</Typography> */}\n                      <TextField\n                        id=\"outlined-basic\"\n                        label=\"Tip Amount\"\n                        value={price}\n                        variant=\"outlined\"\n                        fullWidth\n                        onChange={(e) => {\n                          setPrice(e.target.value);\n                        }}\n                      />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <Divider />\n                    </Grid>\n                    <Grid item xs={12} justifyContent=\"center\">\n                      <Button\n                        style={{ background: \"#8B0B35\" }}\n                        onClick={() => setChange(true)}\n                        variant=\"contained\"\n                      >\n                        Proceed to Payment\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </AuthCardWrapper>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={12} sx={{ m: 3, mt: 1 }}>\n            <AuthFooter />\n          </Grid>\n        </Grid>\n      </AuthWrapper1>\n    );\n  return (\n    <AuthWrapper1>\n      <Grid\n        container\n        direction=\"column\"\n        justifyContent=\"flex-end\"\n        sx={{ minHeight: \"100vh\" }}\n      >\n        <Grid item xs={12}>\n          <Grid\n            container\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            sx={{ minHeight: \"calc(100vh - 68px)\" }}\n          >\n            <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\n              <AuthCardWrapper>\n                <Grid\n                  container\n                  spacing={2}\n                  alignItems=\"center\"\n                  justifyContent=\"center\"\n                >\n                  <Grid item sx={{ mb: 3 }}>\n                    <Link to=\"#\">\n                      <Logo />\n                    </Link>\n                  </Grid>\n                </Grid>\n                <div onBlur={() => setData({ ...data, error: \"\" })}>\n                  <DropIn\n                    options={{ authorization: token }}\n                    onInstance={(instance) => {\n                      console.log(\"INSTANCE ONLY:::\", instance);\n                      setData({ ...data, instance: instance });\n                    }}\n                  />\n                </div>\n                <Grid container xs={12} justifyContent=\"center\">\n                  <Button\n                    style={{ background: \"#8B0B35\" }}\n                    onClick={() => onClickPay()}\n                    variant=\"contained\"\n                  >\n                    Pay\n                  </Button>\n                </Grid>\n              </AuthCardWrapper>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={12} sx={{ m: 3, mt: 1 }}>\n          <AuthFooter />\n        </Grid>\n      </Grid>\n    </AuthWrapper1>\n  );\n};\n\nexport default Login;\n"],"sourceRoot":""}